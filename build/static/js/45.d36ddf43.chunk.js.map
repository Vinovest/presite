{"version":3,"sources":["screens/chart/components/PriceHistory/components/styled/Tooltip.js","screens/chart/components/PriceHistory/components/styled/Dot.js","screens/chart/components/PriceHistory/components/styled/Text.js","screens/chart/components/PriceHistory/components/styled/Divider.js","screens/chart/components/PriceHistory/components/styled/InfoColumn.js","screens/chart/components/PriceHistory/components/styled/Container.js","screens/chart/components/PriceHistory/Chart.js","assets/shared/eye.svg","screens/chart/components/PriceHistory/PriceHistory.tsx","screens/chart/ChartScreen.js"],"names":["Tooltip","styled","div","p","theme","colors","black","typography","size","xs","white","Dot","color","Strong","strong","xl","Meta","small","sm","Divider","hr","InfoColumn","MainContainer","InfoContainer","Content","DATE_PATTERN","getDate","date","moment","Date","format","mockData","currentWine","benchmark","CustomTooltip","active","payload","t","useTranslation","data","get","key","price","className","toLocaleString","AxisTick","props","x","y","value","transform","height","fill","textAnchor","dy","fontSize","YAxisTick","fontWeight","style","currency","maximumSignificantDigits","Chart","showBenchmark","useTheme","width","stroke","horizontal","strokeDasharray","dataKey","tick","tickFormatter","time","concat","content","type","dot","green","activeDot","strokeWidth","r","defaultProps","propTypes","PropTypes","arrayOf","object","bool","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_ref","createElement","fillRule","clipRule","d","_ref2","SvgEye","svgRef","title","viewBox","ref","ForwardRef","forwardRef","PriceHistory","incomingBenchmark","current","incomingCurrent","onToggleBenchmark","useToggle","paddingLeft","Text","alignSelf","uppercase","onClick","marginRight","ChartScreen"],"mappings":"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","file":"static/js/45.d36ddf43.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Tooltip = styled.div`\n    background: ${(p) => p.theme.colors.black};\n    padding: 8px 16px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    .date {\n        color: #bdbdbd;\n        font-size: ${(p) => p.theme.typography.size.xs}px;\n    }\n\n    .price {\n        color: ${(p) => p.theme.colors.white};\n        font-size: ${(p) => p.theme.typography.size.xs}px;\n    }\n`;\n\nexport default Tooltip;\n","import styled from \"styled-components\";\n\nconst Dot = styled.div`\n    width: 13px;\n    height: 13px;\n    border-radius: 100%;\n    background-color: ${(p) => p.color};\n    margin-right: 18px;\n`;\n\nexport default Dot;\n","import styled from \"styled-components\";\n\nexport const Strong = styled.strong`\n    font-weight: 500;\n    font-size: ${(p) => p.theme.typography.size.xl}px;\n    letter-spacing: 0.005em;\n`;\n\nexport const Meta = styled.small`\n    font-weight: 500;\n    font-size: ${(p) => p.theme.typography.size.sm}px;\n    letter-spacing: 0.005em;\n    color: #bdbdbd;\n    margin: 0 4px;\n`;\n\nexport default { Meta, Strong };\n","import styled from \"styled-components\";\n\nconst Divider = styled.hr`\n    height: 2px;\n    background-color: #f1f1f1;\n    width: 100%;\n    margin-top: 12px;\n    margin-bottom: 32px;\n    padding: 0;\n    border: none;\n`;\n\nexport default Divider;\n","import styled from \"styled-components\";\n\nconst InfoColumn = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n\n    &:not(:last-child) {\n        margin-bottom: 16px;\n    }\n`;\n\nexport default InfoColumn;\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n    width: 90%;\n    margin: auto;\n`;\n\nexport const InfoContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding-right: 45px;\n`;\n\nexport const Content = styled.div`\n    border: 1px solid #f1f1f1;\n    padding: 28px 0 28px 16px;\n`;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { useTheme } from \"#shared/hooks\";\nimport { Tooltip as StyledTooltip } from \"./components/styled\";\nimport moment from \"moment\";\nimport get from \"lodash/get\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DATE_PATTERN = \"MMM YYYY\";\n\nconst getDate = (date) => moment(new Date(date)).format(DATE_PATTERN);\n\nconst mockData = [\n    {\n        date: getDate(\"2017-09-03\"),\n        currentWine: 4000,\n        benchmark: 3000,\n    },\n    {\n        date: getDate(\"2018-09-03\"),\n        currentWine: 4020,\n        benchmark: 1000,\n    },\n    {\n        date: getDate(\"2019-09-03\"),\n        currentWine: 4500,\n        benchmark: 3800,\n    },\n    {\n        date: getDate(\"2016-09-03\"),\n        currentWine: 2000,\n        benchmark: 1500,\n    },\n    {\n        date: getDate(\"2015-09-03\"),\n        currentWine: 4200,\n        benchmark: 1000,\n    },\n    {\n        date: getDate(\"2014-09-03\"),\n        currentWine: 3000,\n        benchmark: 2000,\n    },\n];\n\nconst CustomTooltip = ({ active, payload }) => {\n    const { t } = useTranslation([\"chart\"]);\n    const data = get(payload, [\"0\", \"payload\"]);\n    const key = get(payload, [\"0\", \"dataKey\"]);\n    if (active && data) {\n        const { date } = data;\n        const price = data[key];\n\n        return (\n            <StyledTooltip>\n                <span className=\"date\">{date}</span>\n                <p className=\"price\">\n                    Average price:\n                    <strong>${price.toLocaleString()}</strong>\n                </p>\n            </StyledTooltip>\n        );\n    }\n\n    return null;\n};\n\nconst AxisTick = (props) => {\n    const { x, y, payload } = props;\n    const date = moment(payload.value, DATE_PATTERN);\n    return (\n        <g transform={`translate(${x},${y})`} height={150}>\n            <text x=\"0\" y=\"0\" height={120} fill=\"#828282\" textAnchor=\"middle\">\n                <tspan x=\"0\" dy=\"1.2em\" fontSize={12}>\n                    {date.format(\"DD MMM\")}\n                </tspan>\n                <tspan x=\"0\" dy=\"1.2em\" fontSize={10}>\n                    {date.format(\"YYYY\")}\n                </tspan>\n            </text>\n        </g>\n    );\n};\n\nconst YAxisTick = (props) => {\n    const { x, y, payload } = props;\n    return (\n        <g transform={`translate(${x},${y})`} height={150}>\n            <text x=\"-15\" y=\"0\" height={120} fill=\"#828282\" fontWeight={500} fontSize={12} textAnchor=\"middle\">\n                {payload.value.toLocaleString(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                    maximumSignificantDigits: 1,\n                })}\n            </text>\n        </g>\n    );\n};\n/**\n *\n * @returns {*}\n * @constructor\n */\nconst Chart = ({ showBenchmark, data = mockData }) => {\n    const color = useTheme(\"colors\");\n    return (\n        <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart width=\"100%\" height={300} data={data}>\n                <CartesianGrid stroke=\"#BDBDBD\" horizontal={false} strokeDasharray=\"0\" />\n                <XAxis\n                    stroke=\"#F1F1F1\"\n                    dataKey=\"date\"\n                    tick={AxisTick}\n                    tickFormatter={(time) => {\n                        return moment(time, DATE_PATTERN).format(\"DD \".concat(DATE_PATTERN));\n                    }}\n                />\n                <YAxis stroke=\"#F1F1F1\" tick={YAxisTick} />\n                <Tooltip content={<CustomTooltip />} />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"currentWine\"\n                    dot={false}\n                    stroke={color.green}\n                    activeDot={{ stroke: color.black, fill: color.green, strokeWidth: 4, r: 10 }}\n                />\n                {showBenchmark && (\n                    <Line type=\"monotone\" dataKey=\"benchmark\" activeDot={false} dot={false} stroke=\"#BDBDBD\" />\n                )}\n            </LineChart>\n        </ResponsiveContainer>\n    );\n};\n\nChart.defaultProps = {\n    data: mockData,\n    showBenchmark: true,\n};\n\nChart.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    showBenchmark: PropTypes.bool,\n};\n\nexport default Chart;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M1 8C1 8 5 1 11 1C17 1 21 8 21 8C21 8 17 15 11 15C5 15 1 8 1 8Z\",\n  stroke: \"#242424\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M11 5C12.657 5 14 6.343 14 8C14 9.657 12.657 11 11 11C9.343 11 8 9.657 8 8C8 6.343 9.343 5 11 5V5Z\",\n  stroke: \"#242424\"\n});\n\nconst SvgEye = ({\n  svgRef,\n  title,\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  width: 22,\n  height: 16,\n  viewBox: \"0 0 22 16\",\n  fill: \"none\",\n  ref: svgRef\n}, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref, _ref2);\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgEye, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/eye.cd7d6bd0.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\nimport Chart from \"./Chart\";\nimport { useToggle } from \"#shared/hooks\";\nimport { Dot, Text, Divider, InfoColumn, MainContainer, InfoContainer, Content } from \"./components/styled\";\nimport { ReactComponent as EyeIcon } from \"#assets/shared/eye.svg\";\nimport { TextButton } from \"#shared/ui\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface IPriceHistoryProps {\n    benchmark: string | void | any;\n    current: string | void | any;\n}\n\nconst PriceHistory: React.FC<IPriceHistoryProps> = ({ benchmark: incomingBenchmark, current: incomingCurrent }) => {\n    const { t } = useTranslation([\"chart\"]);\n\n    const benchmark: string = incomingBenchmark ?? t(\"price_history.benchmark_wine_name\");\n    const current: string = incomingCurrent ?? t(\"price_history.current_wine_name\");\n\n    const [showBenchmark, onToggleBenchmark]: [boolean, any] = useToggle(true);\n    return (\n        <MainContainer>\n            <h1>{t(\"price_history.average_price\")}</h1>\n            <Content>\n                <Chart showBenchmark={showBenchmark} width=\"100%\" height={500} />\n                <div style={{ paddingLeft: 65 }}>\n                    <Divider />\n                    <InfoContainer>\n                        <div>\n                            <InfoColumn>\n                                <Dot color=\"#27AE60\" />\n                                <Text.Strong>{current}</Text.Strong>\n                                <Text.Meta>{t(\"price_history.price_history\")}e</Text.Meta>\n                            </InfoColumn>\n                            <InfoColumn>\n                                <Dot color=\"#BDBDBD\" />\n                                <Text.Strong>{benchmark}</Text.Strong>\n                                <Text.Meta>{t(\"price_history.current_wine\")}</Text.Meta>\n                            </InfoColumn>\n                        </div>\n                        <TextButton style={{ alignSelf: \"flex-end\" }} uppercase onClick={onToggleBenchmark}>\n                            <EyeIcon style={{ marginRight: 10 }} /> {t(\"price_history.hide_benchmark\")}k\n                        </TextButton>\n                    </InfoContainer>\n                </div>\n            </Content>\n        </MainContainer>\n    );\n};\n\nexport default PriceHistory;\n","import React from \"react\";\nimport PriceHistory from \"./components/PriceHistory\";\n\nconst ChartScreen = () => {\n    return (\n        <div>\n            <PriceHistory />\n        </div>\n    );\n};\n\nexport default ChartScreen;\n"],"sourceRoot":""}