{"version":3,"sources":["screens/risk-tolerance/Quiz/components/styled/CheckContainer.js","screens/risk-tolerance/Quiz/components/styled/InputBox.js","screens/risk-tolerance/Quiz/components/styled/InputContainer.js","screens/risk-tolerance/Quiz/components/styled/InputWithCurrency.js","screens/risk-tolerance/Quiz/components/styled/InvestmentInput.js","screens/risk-tolerance/Quiz/components/styled/OtherInput.js","screens/risk-tolerance/Quiz/components/styled/StartContainer.js","screens/risk-tolerance/Quiz/components/styled/Question.js","screens/risk-tolerance/Quiz/components/styled/Quiz.js","screens/risk-tolerance/components/styled/Box.js","screens/risk-tolerance/components/styled/Body.js","screens/risk-tolerance/components/styled/Divider.js","screens/risk-tolerance/components/styled/StartOverLink.js","screens/risk-tolerance/components/styled/Plan.js","screens/risk-tolerance/YourPortfolio/YourPortfolio.js","screens/risk-tolerance/index.tsx","screens/risk-tolerance/Quiz/components/QuizForm/questions-options.js","screens/risk-tolerance/Quiz/components/QuizForm/quiz-reducer.ts","services/Storage/Storage.js","utils/isJson.js","shared/components/FormPersist/FormPersist.js","screens/risk-tolerance/Quiz/components/QuizForm/QuizFooter.js","screens/risk-tolerance/Quiz/components/QuizForm/WizardQuiz.js","assets/risk-tolerance/BackArrow.js","screens/risk-tolerance/Quiz/components/QuizForm/BackButton.js","screens/risk-tolerance/Quiz/components/QuizForm/Error.js","assets/risk-tolerance/WhiteCheck.js","screens/risk-tolerance/Quiz/components/QuizForm/QuestionInput.js","screens/risk-tolerance/Quiz/components/QuizForm/Question.js","screens/risk-tolerance/Quiz/components/QuizForm/QuizForm.tsx","screens/risk-tolerance/Quiz/Quiz.tsx","screens/risk-tolerance/MinimumCapitalQuestion.tsx","screens/risk-tolerance/PhoneNumberQuestion.tsx","shared/hooks/useFormField/index.js","screens/personalize/index.js","screens/personalize/PersonalizeScreen.js","shared/ui/Alert/AlertMessage.js","assets/shared/ErrorIcon.js","screens/risk-tolerance/YourPortfolio/plans.js","assets/risk-tolerance/balancedInvesting.svg","assets/risk-tolerance/conservative.svg","assets/risk-tolerance/aggressive.svg","assets/risk-tolerance/checkmark.svg"],"names":["CheckContainer","styled","div","InputBox","p","theme","colors","selected","mainAccentBlue","isFirstRow","media","greaterThan","InputContainer","span","input","mainInnerTaupe","QuestionContainer","lessThan","QuestionNumber","typography","size","sm","md","QuestionText","QuizBackground","white","QuizBox","Box","PaddedContainer","Body","Divider","Link","disclaimerGray","PlanLabel","PlanTitle","PlanDescription","PlanSvgContainer","observer","store","useRootStore","routeTo","useCreateRoutingCallback","t","useTranslation","useEffect","async","user","updateProfile","saveQuiz","plan","quiz","investingStyle","RiskToleranceOptions","results","planTypes","filter","planType","id","toLowerCase","smartCodeVWO","window","scrollTo","planName","src","svg","alt","map","item","key","style","display","alignItems","width","Checkmark","alignSelf","height","StartButton","onClick","posthog","capture","MainButton","QuizEvent","options","i18n","questionToEventMap","Question_1","Question_2","Question_3","reducer","state","action","questionName","questions","page","name","JSON","stringify","payload","values","value","type","Math","min","pages","max","Error","init","initialValues","Storage","val","isObject","this","storage","setItem","getKey","getItem","str","parse","e","isJson","clear","storageKeyPrefix","concat","sessionStorage","saveForm","debounce","form","setValue","FormPersist","initialize","useForm","onChange","React","useCallback","maybeState","getValue","propTypes","PropTypes","string","isRequired","QuizFooter","disableSubmit","disabled","bool","WizardQuiz","next","children","onSubmit","ActiveQuestion","useMemo","Children","toArray","onQuizFormSubmit","formValues","count","handleSubmit","submitting","invalid","in","timeout","func","arrayOf","node","number","shape","goalsWithVinovest","array","anticipatedCashAccess","subscribe","Page","memo","BackArrow","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","BackButton","onButtonClick","history","useHistory","ButtonContainer","goBack","defaultProps","undefined","lighterGray","ErrorMessage","touched","error","render","meta","QuestionInput","title","multiple","props","Array","isArray","indexOf","WhiteCheck","any","validate","isEmpty","Question","heading","onPrevious","isFirstQuestion","text","numberOfQuestion","isMobile","useMobile","useField","option","idx","includes","QuizForm","dispatch","useReducer","previous","unListen","listen","_","tracking","gtm","trackQuizAction","question","index","length","trackQuizCompleted","setInvestingStyle","saveQuizData","investmentProfile","phoneNumberABVariant","MinimumCapitalQuestion","getI18n","s","routeToYourPlan","loading","setLoading","useState","answer","setAnswer","tiers","minimum","test","language","chDepositTiers","depositTiers","tier1","tier2","premium","grandcru","onMinimumCapitalQuestionSubmit","trackHave1000question","Question_4","locale","monetaryValueMinimum","setTimeout","saveMinimumCapitalToCIO","ContentContainer","PageHeader","currencyFormatter","decimal","MainButtonWithLoader","CTA","isNil","isLoading","PhoneNumberQuestion","fields","handleFieldChange","initialState","setValues","useFormFields","primaryPhone","errorMessage","setErrorMessage","QuestionHeader","Form","event","preventDefault","isPossiblePhoneNumber","savePhoneNumberToCIO","AccountService","useAccountInformationPut","oktaUserEntity","data","sub","auth","accessToken","then","PhoneNumber","trackEnterPhone","trackEnterPhoneABTest","catch","FormItem","className","displayInitialValueAsLocalNumber","defaultCountry","placeholder","AlertMessage","ErrorIcon","ButtonPrimary","button","PersonalizeScreen","useParams","start","capital","AlertSuccess","CompleteMessage","fonts","body","alerts","success","fillRule","clipRule","conservativeSvg","balancedInvestingSvg","aggressiveSvg","module","exports"],"mappings":"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","file":"static/js/22.d9007a77.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst CheckContainer = styled.div``;\n\nexport default CheckContainer;\n","import styled from \"styled-components\";\n\nconst InputBox = styled.div`\n  width: 100%;\n  background: ${(p) => p.theme.colors[p.selected ? \"mainAccentBlue\" : \"white\"]};\n  color: ${(p) => p.theme.colors[p.selected ? \"mainInnerTaupe\" : \"mainAccentBlue\"]};\n\n  border: 0.5px solid ${({ selected, theme }) => (selected ? theme.colors.mainAccentBlue : \"#D9D9D9\")};\n  border-top: ${({ isFirstRow }) => !isFirstRow && \"none\"}\n\n  box-sizing: border-box;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: left;\n  letter-spacing: 0.005em;\n  margin: 0;\n  padding: 10px 15px;\n  position: relative;\n  cursor: pointer;\n  transition: box-shadow 0.3s ease-in-out;\n  :hover {\n    box-shadow: 0px 1px 8px rgba(0, 0, 0, 0.3);\n    z-index: 2;\n  }\n\n  ${({ theme }) => theme.media.greaterThan(\"1024px\")`\n    padding: 10px 30px;\n    width: 65%;\n  `}\n`;\n\nexport default InputBox;\n","import styled from \"styled-components\";\n\nconst InputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 22px;\n    position: relative;\n`;\n\nexport default InputContainer;\n","import styled from \"styled-components\";\n\nconst InputWithCurrency = styled.span`\n    border: 0 inset #ccc;\n    background: #fff;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 30px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.005em;\n    color: #242424;\n    margin-top: 12px;\n    margin-bottom: 50px;\n    padding-left: 15px;\n    @media screen and (min-width: 768px) {\n        max-width: 400px;\n        margin: 0 auto;\n        margin-bottom: 50px;\n    }\n`;\n\nexport default InputWithCurrency;\n","import styled from \"styled-components\";\n\nconst InvestmentInput = styled.input`\n    border: 0;\n    padding: 10px 6px;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 30px;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.005em;\n    color: #242424;\n    width: 90%;\n    margin-left: 12px;\n    :focus {\n        outline: 0;\n    }\n`;\n\nexport default InvestmentInput;\n","import styled from \"styled-components\";\n\nconst OtherInput = styled.input`\n    background: ${({ theme }) => theme.colors.mainAccentBlue};\n    color: ${({ theme }) => theme.colors.mainInnerTaupe};\n    width: 100%;\n    height: 50px;\n    padding-left: 15px;\n    margin: 0 auto;\n    font-size: 16px;\n    line-height: 25px;\n    outline: 0;\n    box-sizing: border-box;\n    border: 1px solid #f0f0f0;\n\n    ${({ theme }) => theme.media.greaterThan(\"1024px\")`\n    width: 65%;\n  `}\n`;\n\nexport default OtherInput;\n","import styled from \"styled-components\";\n\nconst StartContainer = styled.div`\n    background: #f8f8f8;\n    padding: 24px 20px;\n    text-align: center;\n    @media screen and (min-width: 768px) {\n        margin: 0 auto;\n        text-align: center;\n        background: #fff;\n    }\n`;\n\nexport default StartContainer;\n","import styled from \"styled-components\";\n\nexport const QuestionContainer = styled.div`\n    margin-bottom: 22px;\n    color: ${({ theme }) => theme.colors.mainAccentBlue};\n\n    ${({ theme }) => theme.media.lessThan(\"1024px\")`\n    margin-bottom: 50px;\n  `}\n`;\n\nexport const QuestionNumber = styled.div`\n    font-family: VinovestMono;\n    font-size: ${(p) => p.theme.typography.size.sm}px;\n    letter-spacing: 0.005em;\n    padding-left: 14px;\n    padding-bottom: 22px;\n    text-align: center;\n\n    ${(p) => p.theme.media.greaterThan(\"medium\")`\n    font-size: ${(p) => p.theme.typography.size.md}px;\n    padding-left: 0;\n    line-height: 30px;\n  `}\n`;\n\nexport const QuestionText = styled.div`\n    font-family: RoslindaleDisplayCondensed;\n    font-size: ${({ theme }) => theme.typography.size.sm * 2}px;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    padding-left: 14px;\n    margin-bottom: 18px;\n    text-align: center;\n    ${(p) => p.theme.media.greaterThan(\"medium\")`\n    padding-left: 0;\n    font-size: ${({ theme }) => theme.typography.size.sm * 4}px;\n    line-height: initial;\n    margin-bottom: 60px;\n  `}\n`;\n","import styled from \"styled-components\";\n\nexport const QuizBackground = styled.div`\n    padding: 30px 20px;\n    background: ${({ theme }) => theme.colors.white};\n    height: 90vh;\n`;\n\nexport const QuizBox = styled.div`\n    @media screen and (min-width: 768px) {\n        padding: 0px 20vw;\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const Box = styled.div`\n    margin-top: 56px;\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n\n    @media screen and (min-width: 768px) {\n        width: 100%;\n        max-width: 570px;\n        border: 1px solid #e6e6e6;\n        margin-top: 53px;\n        margin-bottom: 56px;\n        border: 1px solid #242e35;\n        box-sizing: border-box;\n        box-shadow: 0px 4px 14px rgba(0, 0, 0, 0.15);\n    }\n`;\n\nexport const PaddedContainer = styled.div`\n    padding: 0 20px 37px;\n    @media screen and (min-width: 768px) {\n        padding: 57px 42px 56px;\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const Body = styled.div`\n    background-color: ${({ theme }) => theme.colors.white};\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    min-height: 90vh;\n`;\n","import styled from \"styled-components\";\n\nconst Divider = styled.div`\n    height: 1px;\n    width: 100%;\n    background-color: #e5e5e5;\n    margin: 32px 0;\n`;\n\nexport default Divider;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StartOverLink = styled(Link)`\n    border: none;\n    outline: none;\n    background-color: transparent;\n    font-size: ${(p) => p.theme.typography.size.md}px;\n    line-height: 20px;\n    text-align: center;\n    color: ${(p) => p.theme.colors.disclaimerGray};\n    cursor: pointer;\n    margin-top: 20px;\n    &:hover {\n        text-decoration: underline;\n    }\n`;\nexport default StartOverLink;\n","import styled from \"styled-components\";\n\nexport const PlanLabel = styled.div`\n    font-family: VinovestMono;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 18px;\n    text-align: center;\n    letter-spacing: 0.025em;\n    text-transform: uppercase;\n    color: #242e35;\n`;\n\nexport const PlanTitle = styled.div`\n    font-family: RoslindaleDisplayCondensed;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 54px;\n    text-align: center;\n    color: #242e35;\n    margin-top: 11px;\n\n    @media screen and (min-width: 768px) {\n        font-size: 45px;\n        line-height: 60px;\n        margin-top: 16px;\n    }\n`;\n\nexport const PlanDescription = styled.div`\n    font-family: VinovestMedium;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 24px;\n    color: #242424;\n    margin-top: 23px;\n    /* margin-bottom: 24px; */\n\n    span {\n        margin-bottom: 25px;\n    }\n\n    img {\n        width: 21px;\n        margin: 0 15px 0 16px;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 16px;\n        line-height: 24px;\n\n        img {\n            width: 21px;\n            margin: 0 32px 0 16px;\n        }\n    }\n`;\n\nexport const PlanSvgContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 30px 0 36.13px;\n\n    img {\n        width: 297px;\n    }\n\n    @media screen and (min-width: 768px) {\n        margin: 30px 0 38.13px;\n    }\n`;\n","import styled from \"styled-components\";\nimport React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { MainButton } from \"#shared/ui\";\nimport Checkmark from \"#assets/risk-tolerance/checkmark.svg\";\nimport { useRootStore, useCreateRoutingCallback } from \"#shared/hooks\";\nimport { smartCodeVWO } from \"#utils/smartCodeVWO\";\nimport { planTypes } from \"./plans\";\nimport {\n    Box,\n    PaddedContainer,\n    Body,\n    PlanLabel,\n    PlanTitle,\n    PlanDescription,\n    PlanSvgContainer,\n} from \"../components/styled\";\nimport { useTranslation } from \"react-i18next\";\nimport { RiskToleranceOptions } from \"#utils/constants\";\nimport posthog from \"posthog-js\";\n\nconst YourPortfolio = () => {\n    const store = useRootStore();\n    const routeTo = useCreateRoutingCallback();\n    const { t } = useTranslation([\"risk-tolerance\"]);\n\n    const handleNext = () => {\n        posthog.capture(\"quiz_completed\", {});\n        routeTo(\"/\");\n    };\n\n    useEffect(() => {\n        const saveQuiz = async () => {\n            await store.user.updateProfile();\n        };\n        saveQuiz();\n    }, [store.user]);\n\n    const plan = store.quiz.investingStyle ? store.quiz.investingStyle : RiskToleranceOptions[\"MODERATE\"];\n    const results = planTypes(t).filter((planType) => planType.id == plan.toLowerCase());\n\n    useEffect(() => {\n        smartCodeVWO();\n        window.scrollTo(0, 0);\n    }, []);\n\n    return (\n        <Body>\n            <Box>\n                <PaddedContainer>\n                    <PlanLabel>{t(\"your_portfolio.plan_title\")}</PlanLabel>\n                    <div>\n                        <PlanTitle>{results[0].planName}</PlanTitle>\n                        <PlanSvgContainer>\n                            <img src={results[0].svg} alt={results[0].planName} />\n                        </PlanSvgContainer>\n                        <PlanLabel>{t(\"your_portfolio.plan_subtitle\")}</PlanLabel>\n                        <PlanDescription>\n                            {results[0][1].map((item) => (\n                                <div key={item} style={{ display: \"flex\", alignItems: \"center\", width: \"auto\" }}>\n                                    <img\n                                        alt=\"green checkmark\"\n                                        src={Checkmark}\n                                        style={{\n                                            alignSelf: \"flex-start\",\n                                            width: \"30px\",\n                                            height: \"30px\",\n                                        }}\n                                    />\n                                    <span>{item}</span>\n                                </div>\n                            ))}\n                        </PlanDescription>\n                        <StartButton onClick={handleNext}>{t(\"buttons.next\")}</StartButton>\n                    </div>\n                </PaddedContainer>\n            </Box>\n        </Body>\n    );\n};\n\nexport default observer(YourPortfolio);\n\nconst StartButton = styled(MainButton)`\n    margin-top: 149px;\n    font-size: 14px;\n    line-height: 18px;\n\n    @media screen and (min-width: 768px) {\n        margin-top: 15px;\n        max-width: 393px;\n        height: 60px;\n        font-size: 16px;\n        line-height: 18px;\n    }\n`;\n","import Quiz from \"./Quiz\";\nimport YourPortfolio from \"./YourPortfolio\";\n\nexport enum QuizEvent {\n    Email = \"email_entry\",\n    Password= \"password_entry\",\n    Name = \"name_entry\",\n    Question_1 = \"q1_entry\",\n    Question_2 = \"q2_entry\",\n    Question_3 = \"q3_entry\",\n    PhoneNumber = \"phone_number_entry\",\n    Question_4 = \"q4_entry\",\n    Submitted = \"quiz_completed\"\n}\n\nexport { Quiz, YourPortfolio };\n","import i18n from \"i18next\";\n\nconst options = i18n.t(\"risk-tolerance:quiz.options.question-options\");\nexport default options;\n","import posthog from \"posthog-js\";\nimport { QuizEvent } from \"../../../index\";\nimport questions from \"./questions-options\";\nconst questionToEventMap = [QuizEvent.Question_1,QuizEvent.Question_2,QuizEvent.Question_3];\n\nexport function reducer(state, action) {\n    const questionName = questions[state.page].name;\n    posthog.capture(questionToEventMap[state.page], {[`${questionName}`]: JSON.stringify(action.payload.values[questionName]), value: JSON.stringify(action.payload.values[questionName])});\n    switch (action.type) {\n        case \"next\":\n            return {\n                page: Math.min(state.page + 1, action.payload.pages - 1),\n                values: action.payload.values,\n            };\n        case \"previous\":\n            return { ...state, page: Math.max(state.page - 1, 0) };\n        default:\n            throw new Error();\n    }\n}\n\nexport const init = (initialValues) => ({\n    values: initialValues,\n    page: 0,\n});\n","import { isObject } from \"lodash\";\nimport isJson from \"#utils/isJson\";\n\nexport default class Storage {\n    static setValue(key, value) {\n        const val = isObject(value) ? JSON.stringify(value) : value;\n        this.storage.setItem(this.getKey(key), val);\n    }\n\n    static getValue(key) {\n        try {\n            const value = this.storage.getItem(this.getKey(key));\n            return isJson(value) ? JSON.parse(value) : value;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    static has(key) {\n        return this.storage.getItem(this.getKey(key)) !== null;\n    }\n\n    static clear() {\n        this.storage.clear();\n    }\n\n    static storage = window.sessionStorage;\n    static storageKeyPrefix = \"vinovest__\";\n\n    static getKey(key) {\n        return this.storageKeyPrefix.concat(key);\n    }\n}\n","export default function isJson(str) {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n    return true;\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FormSpy, useForm } from \"react-final-form\";\nimport debounce from \"lodash/debounce\";\nimport Storage from \"#services/Storage\";\n\n/**\n *\n * @type {debounced}\n */\nconst saveForm = debounce((form, values) => {\n    Storage.setValue(form, values);\n}, 300);\n\nconst FormPersist = ({ form }) => {\n    const { initialize } = useForm();\n    const onChange = React.useCallback(({ values }) => saveForm(form, values), [form]);\n\n    React.useEffect(() => {\n        const maybeState = Storage.getValue(form);\n\n        if (maybeState) {\n            initialize(maybeState);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return <FormSpy onChange={onChange} />;\n};\nFormPersist.propTypes = {\n    form: PropTypes.string.isRequired,\n};\nexport default FormPersist;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { MainButton } from \"#shared/ui\";\nimport { useTranslation } from \"react-i18next\";\n\nconst QuizFooter = ({ disableSubmit }) => {\n    const { t } = useTranslation([\"risk-tolerance\"]);\n    return (\n        <MainButton disabled={disableSubmit} type=\"submit\">\n            {t(\"buttons.continue\")}\n        </MainButton>\n    );\n};\n\nQuizFooter.propTypes = {\n    disableSubmit: PropTypes.bool.isRequired,\n};\n\nexport default QuizFooter;\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { Fade } from \"#shared/ui\";\nimport FormPersist from \"#shared/components/FormPersist\";\nimport QuizFooter from \"./QuizFooter\";\nimport \"@vx/scale/lib/scales/log\";\n\nconst WizardQuiz = ({ page, next, values, children, onSubmit }) => {\n    const ActiveQuestion = useMemo(() => React.Children.toArray(children)[page], [children, page]);\n\n    const onQuizFormSubmit = useCallback(\n        (formValues) => {\n            const pages = React.Children.count(children);\n            const isLastPage = page === pages - 1;\n            if (isLastPage) {\n                return onSubmit(formValues);\n            }\n\n            next(formValues, pages);\n        },\n        [onSubmit, children, page, next],\n    );\n\n    return (\n        <Form initialValues={values} onSubmit={onQuizFormSubmit}>\n            {({ handleSubmit, submitting, invalid }) => (\n                <form onSubmit={handleSubmit}>\n                    <Fade in timeout={700} key={page}>\n                        <div>\n                            {ActiveQuestion}\n                            <QuizFooter disableSubmit={invalid || submitting} />\n                        </div>\n                    </Fade>\n                    <FormPersist form=\"quiz\" />\n                </form>\n            )}\n        </Form>\n    );\n};\n\nWizardQuiz.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\n    page: PropTypes.number.isRequired,\n    values: PropTypes.shape({\n        investingStyle: PropTypes.string,\n        goalsWithVinovest: PropTypes.array,\n        anticipatedCashAccess: PropTypes.string,\n        subscribe: PropTypes.bool,\n    }).isRequired,\n    next: PropTypes.func.isRequired,\n};\n\nWizardQuiz.Page = ({ children }) => children;\n\nexport default React.memo(WizardQuiz);\n","import React from \"react\";\n\nexport const BackArrow = () => {\n    return (\n        <svg width=\"25\" height=\"16\" viewBox=\"0 0 25 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M8 15L1 8M1 8L8 1M1 8H23.5\"\n                stroke=\"#102035\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n};\n","import PropTypes from \"prop-types\";\nimport { useHistory } from \"#shared/hooks/useHistory\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { BackArrow } from \"#assets/risk-tolerance/BackArrow\";\n\nexport const BackButton = ({ onButtonClick }) => {\n    const history = useHistory();\n    return (\n        <ButtonContainer onClick={onButtonClick || history.goBack}>\n            <BackArrow />\n        </ButtonContainer>\n    );\n};\n\nBackButton.defaultProps = { onButtonClick: undefined };\nBackButton.propTypes = { onButtonClick: PropTypes.func };\n\nconst ButtonContainer = styled.div`\n    position: fixed;\n    left: 100px;\n    top: 50%;\n    height: 60px;\n    width: 60px;\n    border: 2px solid ${(p) => p.theme.colors.lighterGray};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    transition: background 0.3s ease-in-out;\n    :active {\n        background: ${({ theme }) => theme.colors.mainAccentBlue};\n    }\n`;\n","import PropTypes from \"prop-types\";\nimport { Field } from \"react-final-form\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst ErrorMessage = styled.span`\n    color: red;\n    display: inline-block;\n`;\n\nconst Error = ({ name }) => (\n    <Field\n        name={name}\n        subscribe={{ touched: true, error: true }}\n        render={({ meta: { touched, error } }) => (touched && error ? <ErrorMessage>{error}</ErrorMessage> : null)}\n    />\n);\n\nError.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import React from \"react\";\n\nexport default ({ selected }) => (\n    <svg width={16} height={10} viewBox=\"0 0 16 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M14.5098 0.00794184C14.3203 0.0323907 14.1454 0.112617 14.0127 0.235908L5.09213 8.20271L1.39762 5.56315C1.21947 5.43586 0.991992 5.37698 0.76524 5.39949C0.538487 5.42199 0.33103 5.52402 0.188507 5.68313C0.0459837 5.84224 -0.0199304 6.04538 0.00526439 6.24789C0.0304591 6.4504 0.144699 6.63569 0.322853 6.76297L4.62192 9.83447C4.78738 9.95129 4.99513 10.0097 5.20568 9.99868C5.41622 9.98762 5.61488 9.90783 5.76386 9.77451L15.2218 1.32775C15.3552 1.2159 15.4451 1.06899 15.4785 0.908372C15.512 0.747753 15.4872 0.581809 15.4078 0.434629C15.3284 0.28745 15.1985 0.166718 15.037 0.0899845C14.8755 0.0132514 14.6908 -0.0154928 14.5098 0.00794184Z\"\n            fill={selected ? \"#FAE8D1\" : \"#FFFFFF\"}\n        />\n    </svg>\n);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { WhiteCheck } from \"#assets/risk-tolerance\";\nimport { CheckContainer, InputBox } from \"../styled\";\n\nconst QuestionInput = ({ title, selected, multiple, isFirstRow, ...props }) => {\n    const onClick = () => {\n        let val;\n        if (multiple && Array.isArray(props.value)) {\n            val =\n                props.value.indexOf(title) === -1\n                    ? [...props.value, title]\n                    : // : title === \"Other\"\n                      // ? []\n                      props.value.filter((item) => item !== title);\n        } else {\n            val = title === props.value ? \"\" : title;\n        }\n        props.onChange(val);\n    };\n\n    return (\n        <InputBox isFirstRow={isFirstRow} selected={selected} onClick={onClick}>\n            <input type=\"hidden\" {...props} />\n            {title}\n            <CheckContainer>\n                <WhiteCheck selected={selected} />\n            </CheckContainer>\n        </InputBox>\n    );\n};\n\nQuestionInput.propTypes = {\n    title: PropTypes.string,\n    selected: PropTypes.bool,\n    multiple: PropTypes.bool,\n    isFirstRow: PropTypes.bool,\n    onChange: PropTypes.func,\n    value: PropTypes.any,\n};\n\nexport default QuestionInput;\n","import { isEmpty } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { useField } from \"react-final-form\";\nimport { useMobile } from \"#shared/hooks\";\nimport { BackButton } from \"./BackButton\";\nimport { InputContainer, QuestionNumber, QuestionText, QuestionContainer } from \"../styled\";\nimport Error from \"./Error\";\nimport QuestionInput from \"./QuestionInput\";\nimport posthog from \"posthog-js\";\n\nconst validate = (value) => (!isEmpty(value) ? undefined : \"Required\");\n\nconst Question = ({ name, options, heading, onPrevious, isFirstQuestion, text, multiple, numberOfQuestion }) => {\n    const isMobile = useMobile();\n\n    const { input } = useField(multiple ? `${name}[]` : name, {\n        validate,\n    });\n    React.useEffect(() => {\n        if (numberOfQuestion === 2) {\n            posthog.capture(\"q1_entry\", {});\n        }\n        if (numberOfQuestion === 3) {\n            posthog.capture(\"q2_entry\", {});\n        }\n    }, []);\n\n    return (\n        <QuestionContainer>\n            <QuestionNumber>{heading}</QuestionNumber>\n            <QuestionText>{text}</QuestionText>\n            <InputContainer>\n                {!isMobile && !isFirstQuestion && <BackButton onButtonClick={onPrevious} />}\n\n                {options.map((option, idx) => (\n                    <QuestionInput\n                        key={option}\n                        {...input}\n                        title={option}\n                        multiple={multiple}\n                        selected={input.value.includes(option)}\n                        isFirstRow={idx === 0}\n                    />\n                ))}\n            </InputContainer>\n            <Error name={name} />\n        </QuestionContainer>\n    );\n};\n\nQuestion.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    name: PropTypes.string.isRequired,\n    heading: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    onPrevious: PropTypes.func.isRequired,\n    isFirstQuestion: PropTypes.bool.isRequired,\n    multiple: PropTypes.bool,\n};\nQuestion.defaultProps = {\n    multiple: false,\n};\n\nexport default Question;\n","import PropTypes from \"prop-types\";\nimport { useHistory } from \"#shared/hooks/useHistory\";\nimport React, { memo, useEffect, useCallback, useReducer } from \"react\";\nimport { init, reducer } from \"#screens/risk-tolerance/Quiz/components/QuizForm/quiz-reducer\";\nimport { useRootStore, useCreateRoutingCallback } from \"#shared/hooks\";\nimport { QuizBackground, QuizBox } from \"../styled\";\nimport WizardQuiz from \"./WizardQuiz\";\nimport Question from \"./Question\";\nimport questions from \"./questions-options\";\nimport { QuizEvent } from \"../../../index\";\nimport { useTranslation } from \"react-i18next\";\nimport posthog from \"posthog-js\";\n\nconst questionToEventMap = [QuizEvent.Question_1, QuizEvent.Question_2, QuizEvent.Question_3];\nconst QuizForm = ({ initialValues, onSubmit }) => {\n    const { t } = useTranslation([\"risk-tolerance\"]);\n    const store = useRootStore();\n    const [state, dispatch]: [any, React.Dispatch] = useReducer(reducer, initialValues, init);\n    const history = useHistory();\n    const routeTo = useCreateRoutingCallback();\n    const next = useCallback(\n        (values, pages) => {\n            dispatch({\n                type: \"next\",\n                payload: {\n                    values,\n                    pages,\n                },\n            });\n            routeTo();\n        },\n        [routeTo],\n    );\n\n    const previous = useCallback(() => dispatch({ type: \"previous\" }), []);\n\n    useEffect(() => {\n        posthog.capture(\"click_get_started\", {});\n        const unListen = history.listen((_, action) => {\n            if (action === \"POP\") {\n                previous();\n            }\n        });\n\n        return () => {\n            unListen();\n        };\n    }, []);\n\n    /** Tracking Quiz Progression */\n    useEffect(() => {\n        const questionName = questions[state.page].name;\n        store.tracking.gtm.trackQuizAction(`#${state.page + 1}: ${questionName}`);\n    }, [state, store.tracking.gtm]);\n\n    return (\n        <QuizBackground>\n            <QuizBox>\n                <WizardQuiz {...state} next={next} onSubmit={onSubmit} initialValues={initialValues}>\n                    {questions.map((question, index) => (\n                        <Question\n                            heading={`${t(\"quiz.question\")} ${index + 1} ${t(\"quiz.of\")} ${questions.length}`}\n                            key={question.name}\n                            onPrevious={previous}\n                            isFirstQuestion={index === 0}\n                            numberOfQuestion={index + 1}\n                            {...question}\n                        />\n                    ))}\n                </WizardQuiz>\n            </QuizBox>\n        </QuizBackground>\n    );\n};\n\nQuizForm.propTypes = {\n    initialValues: PropTypes.shape({\n        investingStyle: PropTypes.string,\n        goalsWithVinovest: PropTypes.array,\n        anticipatedCashAccess: PropTypes.string,\n        subscribe: PropTypes.bool,\n    }).isRequired,\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(QuizForm);\n","import React from \"react\";\nimport posthog from \"posthog-js\";\nimport { observer } from \"mobx-react-lite\";\nimport { useRootStore, useCreateRoutingCallback } from \"#shared/hooks\";\nimport { smartCodeVWO } from \"#utils/smartCodeVWO\";\nimport { QuizBackground } from \"./components/styled\";\nimport QuizForm from \"./components/QuizForm\";\nimport {QuizEvent} from \"../index\";\n\n\nexport interface QuizFormValues {\n    investingStyle?: string\n    goalsWithVinovest?: string[]\n    anticipatedCashAccess?: string\n    subscribe?: boolean\n}\nconst initialValues: QuizFormValues = {\n    investingStyle: \"\",\n    goalsWithVinovest: [],\n    anticipatedCashAccess: \"\",\n    subscribe: false,\n};\n\nconst Quiz: React.VFC = () => {\n    const store = useRootStore();\n    const routeTo = useCreateRoutingCallback();\n\n    React.useEffect(() => {\n        smartCodeVWO();\n    }, []);\n\n    const onSubmit = React.useCallback(\n        async ({ ...values }) => {\n            store.tracking.gtm.trackQuizCompleted(values);\n            posthog.capture(QuizEvent.Question_3, {value: values.anticipatedCashAccess, anticipatedCashAccess: values.anticipatedCashAccess});\n            await store.quiz.setInvestingStyle(values.investingStyle);\n            await store.quiz.saveQuizData({ investmentProfile: values });\n            // was await routeTo(\"/personalize/enter-number\");\n            if (store.user.phoneNumberABVariant === \"1\") {\n                routeTo(\"/personalize/capital\");\n            } else routeTo(\"/personalize/enter-number\");\n        },\n        [store.quiz, store.tracking.gtm, routeTo, store.user.phoneNumberABVariant],\n    );\n\n    return (\n        <>\n            <QuizBackground>\n                <QuizForm onSubmit={onSubmit} initialValues={initialValues} />\n            </QuizBackground>\n        </>\n    );\n};\n\nexport default observer(Quiz);\n","import React, { useCallback, useState } from \"react\";\nimport _ from \"lodash\";\nimport styled from \"styled-components\";\nimport { observer } from \"mobx-react-lite\";\nimport { useTranslation, getI18n } from \"react-i18next\";\nimport posthog from \"posthog-js\";\nimport { useRootStore, useCreateRoutingCallback, useMobile } from \"#shared/hooks\";\nimport { currencyFormatter } from \"#utils/shared\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\nimport { MainButtonWithLoader } from \"#shared/components/MainButtonWithLoader\";\nimport { smartCodeVWO } from \"#utils/smartCodeVWO\";\nimport QuestionInput from \"./Quiz/components/QuizForm/QuestionInput\";\nimport { BackButton } from \"./Quiz/components/QuizForm/BackButton\";\nimport { QuizEvent } from \"#screens/risk-tolerance\";\nimport { depositTiers, chDepositTiers } from \"#localization/constants\";\n\nexport const MinimumCapitalQuestion: React.VFC = observer(() => {\n    const { t } = useTranslation([\"risk-tolerance\"]);\n    const i18n = getI18n();\n    const isMobile = useMobile();\n    const s = useRootStore();\n    const routeToYourPlan = useCreateRoutingCallback(\"/personalize/your-plan\");\n    const [loading, setLoading] = useState(false);\n    const [answer, setAnswer] = useState(\"\");\n\n    const tiers = {\n        minimum: /zh/.test(i18n.language) ? chDepositTiers.minimum : depositTiers.minimum,\n        tier1: /zh/.test(i18n.language) ? chDepositTiers.tier1 : depositTiers.tier1,\n        tier2: /zh/.test(i18n.language) ? chDepositTiers.tier2 : depositTiers.tier2,\n        premium: /zh/.test(i18n.language) ? chDepositTiers.premium : depositTiers.premium,\n        grandcru: /zh/.test(i18n.language) ? chDepositTiers.grandcru : depositTiers.grandcru,\n    };\n    // Need to check for values\n    React.useEffect(() => {\n        smartCodeVWO();\n    }, []);\n\n    const onMinimumCapitalQuestionSubmit = useCallback(() => {\n        s.tracking.gtm.trackHave1000question(s, answer);\n        posthog.capture(QuizEvent.Question_4, {\n            value: answer,\n            locale: i18n.language,\n            monetaryValueMinimum: tiers[answer],\n        });\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n            s.user.saveMinimumCapitalToCIO(`${answer}`);\n            routeToYourPlan();\n        }, 500);\n    }, [s, answer, i18n.language, tiers, routeToYourPlan]);\n\n    return (\n        <QuestionContainer>\n            <ContentContainer>\n                {!isMobile && <BackButton />}\n\n                <PageHeader>{t(\"minimum-capital.title\")}</PageHeader>\n\n                <QuestionInput\n                    title={`${currencyFormatter(tiers.minimum, { decimal: false })} ${t(\"minimum-capital.minimum\")}`}\n                    isFirstRow\n                    selected={answer === \"minimum\"}\n                    onChange={() => setAnswer(\"minimum\")}\n                />\n                <QuestionInput\n                    title={`${currencyFormatter(tiers.tier1, { decimal: false })} - ${currencyFormatter(\n                        tiers.tier2 - 1,\n                        { decimal: false },\n                    )}`}\n                    selected={answer === \"tier1\"}\n                    onChange={() => setAnswer(\"tier1\")}\n                />\n                <QuestionInput\n                    title={`${currencyFormatter(tiers.tier2, { decimal: false })} - ${currencyFormatter(\n                        tiers.premium - 1,\n                        { decimal: false },\n                    )}`}\n                    selected={answer === \"tier2\"}\n                    onChange={() => setAnswer(\"tier2\")}\n                />\n                <QuestionInput\n                    title={`${currencyFormatter(tiers.premium, { decimal: false })}+ ${t(\"minimum-capital.premium\")}`}\n                    selected={answer === \"premium\"}\n                    onChange={() => setAnswer(\"premium\")}\n                />\n                <QuestionInput\n                    title={`${currencyFormatter(tiers.grandcru, { decimal: false })}+ ${t(\"minimum-capital.grandcru\")}`}\n                    selected={answer === \"grandcru\"}\n                    onChange={() => setAnswer(\"grandcru\")}\n                />\n                <ButtonContainer>\n                    <MainButtonWithLoader\n                        CTA=\"Next\"\n                        disabled={_.isNil(answer)}\n                        onClick={onMinimumCapitalQuestionSubmit}\n                        isLoading={loading}\n                    />\n                </ButtonContainer>\n            </ContentContainer>\n        </QuestionContainer>\n    );\n});\n\nconst QuestionContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 42px 24px;\n    margin-top: 60px;\n`;\n\nconst ContentContainer = styled.div`\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    max-width: 800px;\n    margin: 24px 0;\n    text-align: center;\n`;\n\nconst ButtonContainer = styled.div`\n    width: 100%;\n    max-width: 520px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport posthog from \"posthog-js\";\nimport { useCreateRoutingCallback, useMobile } from \"#shared/hooks\";\nimport { smartCodeVWO } from \"#utils/smartCodeVWO\";\nimport { BackButton } from \"./Quiz/components/QuizForm/BackButton\";\nimport AccountService from \"#services/UserService\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport ErrorIcon from \"#assets/shared/ErrorIcon\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput, { isPossiblePhoneNumber } from \"react-phone-number-input\";\nimport { useFormFields } from \"#shared/hooks/useFormField\";\nimport { useRootStore } from \"#shared/hooks\";\nimport {QuizEvent} from \"#screens/risk-tolerance\"\n\n\nexport const PhoneNumberQuestion = () => {\n    const isMobile = useMobile();\n    const routeTo = useCreateRoutingCallback();\n    const [fields, handleFieldChange] = useFormFields({\n        primaryPhone: \"\",\n    });\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const store = useRootStore();\n\n    useEffect(() => {\n        smartCodeVWO();\n    }, []);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const { primaryPhone } = fields;\n        if (isPossiblePhoneNumber(primaryPhone) == true) {\n            store.user.savePhoneNumberToCIO(primaryPhone);\n            AccountService.useAccountInformationPut(store.user.oktaUserEntity.data.sub, store.auth.accessToken, fields)\n                .then(() => {\n                    posthog.capture(QuizEvent.PhoneNumber, {value: primaryPhone})\n                    store.tracking.gtm.trackEnterPhone(store, primaryPhone);\n                    store.tracking.gtm.trackEnterPhoneABTest();\n\n                    // was: routeTo(\"/personalize/capital\");\n                    if (store.user.phoneNumberABVariant === \"0\") {\n                        routeTo(\"/personalize/capital\");\n                    } else routeTo(\"/personalize/start\");\n                })\n                .catch(() => {\n                    setErrorMessage(\"Unable to accept your phone number at this time.\");\n                });\n        } else {\n            setErrorMessage(\"Invalid phone number\");\n        }\n    };\n\n    return (\n        <QuestionContainer>\n            {!isMobile && <BackButton />}\n            <QuestionHeader>Enter your phone number</QuestionHeader>\n            <Form onSubmit={handleSubmit}>\n                <FormItem className=\"full\">\n                    <PhoneInput\n                        displayInitialValueAsLocalNumber\n                        defaultCountry=\"US\"\n                        placeholder=\"Enter phone number\"\n                        value=\"\"\n                        onChange={(event) => handleFieldChange(\"primaryPhone\", event)}\n                    />\n                    {errorMessage && (\n                        <AlertMessage type=\"error\">\n                            <ErrorIcon /> {errorMessage}\n                        </AlertMessage>\n                    )}\n                </FormItem>\n                <ButtonPrimary type=\"submit\">Continue</ButtonPrimary>\n            </Form>\n        </QuestionContainer>\n    );\n};\n\nconst QuestionContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 42px 12px;\n    margin-top: 60px;\n`;\n\nconst Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\nconst FormItem = styled.div`\n    color: #766a7f;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    position: relative;\n    width: 100%;\n\n    input,\n    select {\n        border: 1px solid #caccce;\n        color: #242e35;\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem;\n        width: 100%;\n\n        &::placeholder {\n            color: #a8abad;\n        }\n    }\n\n    select {\n        background-color: transparent;\n        appearance: none;\n    }\n\n    img {\n        position: absolute;\n        right: 1rem;\n        top: 2.5rem;\n        width: 20px;\n    }\n\n    .PhoneInputCountryIcon {\n        box-shadow: none;\n    }\n\n    .PhoneInputCountry {\n        border-bottom: 1px solid #caccce;\n        border-left: 1px solid #caccce;\n        border-top: 1px solid #caccce;\n        justify-content: center;\n        margin-right: 0;\n        width: 15%;\n\n        img {\n            right: auto;\n            top: 0;\n        }\n    }\n`;\n\nconst ButtonPrimary = styled.button`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n`;\n\nconst QuestionHeader = styled.div`\n    color: #242e35;\n    font-family: RoslindaleDisplayCondensed;\n    font-size: ${({ theme }) => theme.typography.size.sm * 2}px;\n    line-height: 24px;\n    letter-spacing: 0.005em;\n    padding-left: 14px;\n    margin-bottom: 18px;\n    text-align: center;\n\n    ${(p) => p.theme.media.greaterThan(\"medium\")`\n        padding-left: 0;\n        font-size: ${({ theme }) => theme.typography.size.sm * 4}px;\n        line-height: initial;\n        margin-bottom: 60px;\n    `}\n`;\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n    const [fields, setValues] = useState(initialState);\n\n    return [\n        fields,\n        function (key, value) {\n            setValues({\n                ...fields,\n                [key]: value,\n            });\n        },\n    ];\n}\n","import { PersonalizeScreen } from \"./PersonalizeScreen\";\n\nexport default PersonalizeScreen;\n","import React, { useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Quiz from \"../risk-tolerance/Quiz\";\nimport YourPortfolio from \"../risk-tolerance/YourPortfolio\";\nimport { MinimumCapitalQuestion } from \"../risk-tolerance/MinimumCapitalQuestion\";\nimport { PhoneNumberQuestion } from \"../risk-tolerance/PhoneNumberQuestion\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const PersonalizeScreen = () => {\n    const { t } = useTranslation();\n    const { type } = useParams();\n\n    const SubpageByUrlParam = useMemo(\n        () => ({\n            start: <Quiz />,\n            \"enter-number\": <PhoneNumberQuestion />,\n            capital: <MinimumCapitalQuestion />,\n            \"your-plan\": <YourPortfolio />,\n        }),\n        [],\n    );\n\n    return SubpageByUrlParam[type];\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction AlertSuccess(props) {\n    return <CompleteMessage className={props.type}>{props.children}</CompleteMessage>;\n}\nexport default AlertSuccess;\n\nconst CompleteMessage = styled.div`\n    border-radius: 4px;\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n    display: flex;\n    font-size: 1rem;\n    font-family: ${(p) => p.theme.fonts.body};\n    margin-top: 2rem;\n    padding: 1rem;\n    align-items: center;\n    width: 100%;\n\n    svg {\n        height: 22px;\n        margin-right: 1rem;\n        min-width: 22px;\n        vertical-align: middle;\n        width: 22px;\n    }\n\n    &.success {\n        background: ${(p) => p.theme.alerts.success};\n    }\n\n    &.error {\n        background: ${(p) => p.theme.alerts.error};\n    }\n`;\n","import React from \"react\";\n\nexport default () => (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M1 12C1 5.92487 5.92487 1 12 1V1C18.0751 1 23 5.92487 23 12V12C23 18.0751 18.0751 23 12 23V23C5.92487 23 1 18.0751 1 12V12Z\"\n            stroke=\"#FF4D00\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path d=\"M12 7V13\" stroke=\"#FF4D00\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n        <path d=\"M12 16V17\" stroke=\"#FF4D00\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n);\n","import balancedInvestingSvg from \"#assets/risk-tolerance/balancedInvesting.svg\";\nimport conservativeSvg from \"#assets/risk-tolerance/conservative.svg\";\nimport aggressiveSvg from \"#assets/risk-tolerance/aggressive.svg\";\n\nexport const planTypes = (t) => [\n    {\n        id: \"conservative\",\n        svg: conservativeSvg,\n        planName: t(\"plans.conservative_investing\"),\n        1: t(\"plans.conservative\"),\n    },\n    {\n        id: \"moderate\",\n        svg: balancedInvestingSvg,\n        planName: t(\"plans.balanced_investing\"),\n        1: t(\"plans.balanced\"),\n    },\n\n    {\n        id: \"aggressive\",\n        svg: aggressiveSvg,\n        planName: t(\"plans.aggressive_investing\"),\n        1: t(\"plans.aggressive\"),\n    },\n];\n","module.exports = __webpack_public_path__ + \"static/media/balancedInvesting.1a7d8018.svg\";","module.exports = __webpack_public_path__ + \"static/media/conservative.f6751e27.svg\";","module.exports = __webpack_public_path__ + \"static/media/aggressive.f8014f86.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkmark.de70a901.svg\";"],"sourceRoot":""}