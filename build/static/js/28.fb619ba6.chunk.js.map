{"version":3,"sources":["screens/support/SupportCategory.js","shared/components/MetaTagsReplacer.js","screens/support/hooks/useFetchSupportData.js","screens/support/components/SupportMainWrapper.js","screens/support/components/SupportCategoryWrapper.js","screens/support/components/Breadcrumbs.js","screens/support/assets/arrow.svg"],"names":["breadcrumbs","link","name","src","arrowSvg","alt","SupportCategory","observer","isMobile","useMobile","supportCategories","slugSupport","useFetchSupportData","articles","supportCategoryName","React","useMemo","foundCategory","find","slug","categoryName","supportPages","map","fields","in","title","Wrapper","ArticleLink","key","to","ROUTE_PATHS","help","styled","div","Title","Link","backUpDevice","get","document","querySelector","description","backUpSocialDescriptions","reduce","acc","tagSelector","getMeta","backUpSocialTitles","node","content","createNode","createElement","setAttribute","setMetaContent","metaTag","getElementsByTagName","appendChild","resetMetaContent","head","removeChild","err","MetaTagsReplacer","useEffect","titleNode","descriptionNode","innerHTML","Object","values","forEach","useSupport","s","useRootStore","category","useParams","fetchSupportCategories","isSupportCategoriesPending","fetchSearchFAQArticles","searchFAQArticlesList","isSearchFAQArticlesListPending","isSearchFAQArticlesListDone","isSupportCategoriesDone","isSupportCategoriesFirstRenderPending","support","length","window","CRISP_WEBSITE_ID","$crisp","d","async","crispDomElem","style","display","alreadyMountedCrisp","setTimeout","crispAfterAllAsyncTasks","location","pathname","startsWith","h1","BannerWrapper","Banner","SupportMainWrapper","children","className","SupportCategoryWrapper","loading","RightList","helpCategory","BreadcrumbsLink","Breadcrumbs","i","Fragment","module","exports"],"mappings":"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","file":"static/js/28.fb619ba6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport { Title } from \"./components/SupportMainWrapper\";\nimport SupportCategoryWrapper from \"./components/SupportCategoryWrapper\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport arrowSvg from \"./assets/arrow.svg\";\nimport { useMobile } from \"#shared/hooks\";\nimport useFetchSupportData from \"./hooks/useFetchSupportData\";\nimport { ROUTE_PATHS } from \"../route-paths\";\nimport { Fade } from \"#shared/ui\";\nimport MetaTagsReplacer from \"#shared/components/MetaTagsReplacer\";\n\nconst breadcrumbs = [\n    {\n        link: \"/help\",\n        name: (\n            <>\n                <img src={arrowSvg} alt=\"back\" /> HELP CENTER\n            </>\n        ),\n    },\n];\n\nconst SupportCategory = observer(() => {\n    const isMobile = useMobile(991);\n\n    const { supportCategories, slugSupport } = useFetchSupportData();\n\n    const { articles, supportCategoryName } = React.useMemo(() => {\n        const foundCategory = supportCategories.find(({ slugSupport: slug }) => slug === slugSupport);\n        const categoryName = foundCategory ? foundCategory.supportCategoryName : \"\";\n        const mapPages = (foundCategory && foundCategory.supportPages) || [];\n\n        return { articles: mapPages.map(({ fields }) => fields), supportCategoryName: categoryName };\n    }, [supportCategories, slugSupport]);\n\n    return (\n        <Fade in>\n            <SupportCategoryWrapper>\n                <MetaTagsReplacer title={`${supportCategoryName} | Vinovest Help Center`} />\n\n                <Wrapper>\n                    {isMobile && <Breadcrumbs breadcrumbs={breadcrumbs} />}\n                    <Title>{supportCategoryName}</Title>\n                    {articles.map(({ name, slug }) => (\n                        <ArticleLink key={slug} to={`${ROUTE_PATHS.help}/${slug}`}>\n                            {name}\n                        </ArticleLink>\n                    ))}\n                </Wrapper>\n            </SupportCategoryWrapper>\n        </Fade>\n    );\n});\n\nconst Wrapper = styled.div`\n    ${Title} {\n        text-align: left;\n        margin-bottom: 20px;\n    }\n`;\n\nconst ArticleLink = styled(Link)`\n    color: #4f81b0;\n    font-size: 20px;\n    line-height: 57px;\n    text-decoration: none;\n    text-transform: none;\n    font-family: Favoritstd, sans-serif;\n    font-weight: 500;\n    display: block;\n`;\n\nexport default SupportCategory;\n","import React from \"react\";\nimport { get } from \"lodash\";\n\nconst backUpDevice = {\n    title: get(document.querySelector(\"title\"), \"innerText\"),\n    description: get(document.querySelector('[name=\"description\"]'), \"content\"),\n};\n\nconst backUpSocialDescriptions = [\"og:description\", \"twitter:description\"].reduce(\n    (acc, tagSelector) => ({ ...acc, [tagSelector]: getMeta(tagSelector) }),\n    {},\n);\nconst backUpSocialTitles = [\"og:title\", \"twitter:title\"].reduce(\n    (acc, tagSelector) => ({ ...acc, [tagSelector]: getMeta(tagSelector) }),\n    {},\n);\n\nconst MetaTagsReplacer = ({ title, description }) => {\n    React.useEffect(() => {\n        const titleNode = document.querySelector(\"title\");\n        const descriptionNode = document.querySelector('[name=\"description\"]');\n\n        titleNode.innerHTML = title || backUpDevice.title;\n        descriptionNode.content = description || backUpDevice.description;\n\n        Object.values(backUpSocialTitles).forEach(setMetaContent(title));\n        Object.values(backUpSocialDescriptions).forEach(setMetaContent(description));\n\n        return () => {\n            titleNode.innerHTML = backUpDevice.title;\n            descriptionNode.content = backUpDevice.description;\n\n            Object.values(backUpSocialTitles).forEach(resetMetaContent());\n            Object.values(backUpSocialDescriptions).forEach(resetMetaContent());\n        };\n    }, [description, title]);\n\n    return null;\n};\n\nfunction getMeta(tagSelector) {\n    const node = document.querySelector(`[property=\"${tagSelector}\"]`);\n    if (node) {\n        return { node, content: get(node, \"content\"), tagSelector };\n    }\n\n    const createNode = document.createElement(\"meta\");\n    createNode.setAttribute(\"property\", tagSelector);\n    createNode.setAttribute(\"content\", \"\");\n\n    return { createNode, tagSelector };\n}\n\nconst setMetaContent = (content) => (metaTag) => {\n    if (metaTag.node) {\n        metaTag.node.content = content || metaTag.node.content;\n    } else {\n        document.getElementsByTagName(\"head\")[0].appendChild(metaTag.createNode);\n        metaTag.createNode.content = content;\n    }\n};\n\nconst resetMetaContent = () => (metaTag) => {\n    if (metaTag.node) {\n        metaTag.node.content = metaTag.content;\n    } else {\n        try {\n            document.head.removeChild(metaTag.createNode);\n        } catch (err) {}\n    }\n};\n\nexport default MetaTagsReplacer;\n","/* eslint-disable no-var */\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useRootStore } from \"#shared/hooks\";\n\n// Crisp SDK\nconst RunCrisp = () => {\n    window.$crisp = [];\n    window.CRISP_WEBSITE_ID = \"621284db-a9a6-49dc-bcdd-2b03ed7fd93d\";\n    // eslint-disable-next-line wrap-iife\n    (function () {\n        var d = document;\n        var s = d.createElement(\"script\");\n        s.src = \"https://client.crisp.chat/l.js\";\n        s.async = 1;\n        d.getElementsByTagName(\"head\")[0].appendChild(s);\n    })();\n};\n\nconst useSupport = () => {\n    const s = useRootStore();\n\n    const categoryParam = useParams().category || \"\";\n    const category = categoryParam;\n\n    const {\n        supportCategories,\n        fetchSupportCategories,\n        isSupportCategoriesPending,\n        fetchSearchFAQArticles,\n        searchFAQArticlesList,\n        isSearchFAQArticlesListPending,\n        isSearchFAQArticlesListDone,\n        isSupportCategoriesDone,\n        isSupportCategoriesFirstRenderPending,\n    } = s.support;\n\n    React.useEffect(() => {\n        if (!supportCategories.length && !isSupportCategoriesPending && !isSupportCategoriesDone) {\n            fetchSupportCategories();\n        }\n    }, [supportCategories, fetchSupportCategories, isSupportCategoriesPending, isSupportCategoriesDone]);\n\n    React.useEffect(() => {\n        if (!window.CRISP_WEBSITE_ID) {\n            RunCrisp();\n        }\n        // turn crisp on\n        const crispDomElem = document.querySelector(\".crisp-client\");\n        if (crispDomElem) crispDomElem.style.display = \"block\";\n\n        // turn crisp off\n        return () => {\n            const alreadyMountedCrisp = document.querySelector(\".crisp-client\");\n            if (alreadyMountedCrisp) {\n                alreadyMountedCrisp.style.display = \"none\";\n            } else {\n                // wait on all async tasks to turn it off\n                setTimeout(() => {\n                    const crispAfterAllAsyncTasks = document.querySelector(\".crisp-client\");\n\n                    if (crispAfterAllAsyncTasks && !window.location.pathname.startsWith(\"/help\")) {\n                        crispAfterAllAsyncTasks.style.display = \"none\";\n                    }\n                }, 500);\n            }\n        };\n    }, []);\n\n    return {\n        supportCategories,\n        s,\n        slugSupport: category,\n        fetchSearchFAQArticles,\n        searchFAQArticlesList,\n        isSearchFAQArticlesListPending,\n        isSearchFAQArticlesListDone,\n        isSupportCategoriesFirstRenderPending,\n    };\n};\n\nexport default useSupport;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst SupportMainWrapper = ({ children }) => (\n    <>\n        <Wrapper>{children}</Wrapper>\n        <BannerWrapper>\n            <div className=\"circleSmall\" />\n            <div className=\"circleBig\" />\n            <Banner to=\"/contact-us\">\n                Can’t find what you’re looking for? <span>Contact Us</span>\n            </Banner>\n        </BannerWrapper>\n    </>\n);\n\nconst Wrapper = styled.div`\n    padding-top: 118px;\n    padding-right: 40px;\n    padding-left: 40px;\n    color: #242e35;\n\n    @media screen and (max-width: 480px) {\n        padding-right: 15px;\n        padding-left: 15px;\n    }\n`;\n\nexport const Title = styled.h1`\n    font-size: 45px;\n    line-height: 60px;\n    text-align: center;\n    font-family: Roslindaledisplaycondensed, sans-serif;\n    font-weight: 500;\n`;\n\nexport const BannerWrapper = styled.div`\n    position: relative;\n    padding-left: 24px;\n    padding-right: 24px;\n    margin-bottom: 180px;\n    padding-top: 180px;\n\n    .circleSmall,\n    .circleBig {\n        border-radius: 50%;\n        position: absolute;\n    }\n\n    .circleSmall {\n        width: 90px;\n        height: 90px;\n        background-color: rgb(239, 221, 199);\n        bottom: -55px;\n        left: 21%;\n    }\n\n    .circleBig {\n        width: 138px;\n        height: 138px;\n        background-color: rgb(230, 201, 201);\n        transform: translateY(-75%);\n        right: 4%;\n    }\n`;\n\nexport const Banner = styled(Link)`\n    position: relative;\n    display: block;\n    text-decoration: none;\n    text-transform: none;\n    width: 100%;\n    max-width: 980px;\n    text-align: center;\n    color: #242e35;\n    border: 4px solid #242e35;\n    margin-right: auto;\n    margin-left: auto;\n    padding: 50px 0;\n    font-size: 32px;\n    line-height: 48px;\n    font-family: Roslindaledisplaycondensed, sans-serif;\n    font-weight: 500;\n    letter-spacing: 0.035em;\n    transition: 0.3s;\n\n    span {\n        position: relative;\n        display: inline-block;\n        white-space: nowrap;\n\n        &:before,\n        &:after {\n            content: \" \";\n            display: block;\n            position: absolute;\n        }\n\n        &:before {\n            bottom: -20px;\n            border-bottom: 2px solid #242e35;\n            width: 100%;\n        }\n\n        &:after {\n            bottom: -27px;\n            right: 0;\n            border-bottom: 2px solid #242e35;\n            border-left: 2px solid #242e35;\n            width: 14px;\n            height: 14px;\n            transform: rotate(-135deg);\n        }\n    }\n\n    &:hover {\n        color: #fff;\n        background-color: #242e35;\n    }\n`;\n\nexport default SupportMainWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport ScreenSpinner from \"#shared/components/ScreenSpinner\";\nimport { Fade } from \"#shared/ui\";\nimport SupportMainWrapper from \"./SupportMainWrapper\";\nimport { ROUTE_PATHS } from \"../../route-paths\";\nimport useFetchSupportData from \"../hooks/useFetchSupportData\";\n\nconst SupportCategoryWrapper = observer(({ children }) => {\n    const { supportCategories, isSupportCategoriesFirstRenderPending } = useFetchSupportData();\n\n    if (isSupportCategoriesFirstRenderPending) return <ScreenSpinner loading />;\n\n    return (\n        <Fade in>\n            <SupportMainWrapper>\n                <Wrapper>\n                    <RightList>\n                        {supportCategories.map(({ supportCategoryName = \"\", slugSupport }) => (\n                            <Link key={supportCategoryName} to={`${ROUTE_PATHS.helpCategory}/${slugSupport}`}>\n                                {supportCategoryName}\n                            </Link>\n                        ))}\n                    </RightList>\n                    <div>{children}</div>\n                </Wrapper>\n            </SupportMainWrapper>\n        </Fade>\n    );\n});\n\nconst Wrapper = styled.div`\n    width: 100%;\n    max-width: 1200px;\n    margin-right: auto;\n    margin-left: auto;\n\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-column-gap: 100px;\n    grid-row-gap: 16px;\n    grid-template-columns: 0.3fr 1fr;\n    grid-template-rows: auto;\n\n    @media screen and (max-width: 991px) {\n        display: block;\n    }\n`;\n\nconst RightList = styled.div`\n    @media screen and (max-width: 991px) {\n        display: none;\n    }\n\n    a {\n        display: block;\n        margin-bottom: 30px;\n        color: inherit;\n        text-decoration: none;\n        font-family: Favoritmonostd, sans-serif;\n        font-size: 14px;\n        line-height: 32px;\n        text-transform: uppercase;\n    }\n`;\n\nexport default SupportCategoryWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Breadcrumbs = ({ breadcrumbs = [] }) => (\n    <Wrapper>\n        {breadcrumbs.map(({ link, name }, i) => (\n            <React.Fragment key={link}>\n                <BreadcrumbsLink to={link}>{name}</BreadcrumbsLink>{\" \"}\n                {breadcrumbs.length && i + 1 < breadcrumbs.length ? <div className=\"slash\">/</div> : \"\"}\n            </React.Fragment>\n        ))}\n    </Wrapper>\n);\n\nconst BreadcrumbsLink = styled(Link)`\n    color: #242e35;\n    font-size: 14px;\n    line-height: 18px;\n    text-decoration: none;\n    text-transform: uppercase;\n    font-family: Favoritmonostd, sans-serif;\n    font-weight: 500;\n    display: block;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n\n    .slash {\n        margin: 0 7px;\n        height: fit-content;\n        ${BreadcrumbsLink};\n    }\n\n    img {\n        margin-right: 7px;\n    }\n`;\n\nexport default Breadcrumbs;\n","module.exports = __webpack_public_path__ + \"static/media/arrow.8d51dd78.svg\";"],"sourceRoot":""}