(this["webpackJsonpvinovest-web-client"]=this["webpackJsonpvinovest-web-client"]||[]).push([[13],{1e3:function(a,e){var n=Object.prototype.hasOwnProperty;a.exports=function(a,e){return null!=a&&n.call(a,e)}},1001:function(a,e,n){var r=n(838)((function(a,e,n){return a+(n?"_":"")+e.toLowerCase()}));a.exports=r},1002:function(a,e){a.exports=function(a,e,n,r){var t=-1,i=null==a?0:a.length;for(r&&i&&(n=a[++t]);++t<i;)n=e(n,a[t],t,a);return n}},1003:function(a,e,n){var r=n(1004),t=n(224),i=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,o=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g");a.exports=function(a){return(a=t(a))&&a.replace(i,r).replace(o,"")}},1004:function(a,e,n){var r=n(1005)({\u00c0:"A",\u00c1:"A",\u00c2:"A",\u00c3:"A",\u00c4:"A",\u00c5:"A",\u00e0:"a",\u00e1:"a",\u00e2:"a",\u00e3:"a",\u00e4:"a",\u00e5:"a",\u00c7:"C",\u00e7:"c",\u00d0:"D",\u00f0:"d",\u00c8:"E",\u00c9:"E",\u00ca:"E",\u00cb:"E",\u00e8:"e",\u00e9:"e",\u00ea:"e",\u00eb:"e",\u00cc:"I",\u00cd:"I",\u00ce:"I",\u00cf:"I",\u00ec:"i",\u00ed:"i",\u00ee:"i",\u00ef:"i",\u00d1:"N",\u00f1:"n",\u00d2:"O",\u00d3:"O",\u00d4:"O",\u00d5:"O",\u00d6:"O",\u00d8:"O",\u00f2:"o",\u00f3:"o",\u00f4:"o",\u00f5:"o",\u00f6:"o",\u00f8:"o",\u00d9:"U",\u00da:"U",\u00db:"U",\u00dc:"U",\u00f9:"u",\u00fa:"u",\u00fb:"u",\u00fc:"u",\u00dd:"Y",\u00fd:"y",\u00ff:"y",\u00c6:"Ae",\u00e6:"ae",\u00de:"Th",\u00fe:"th",\u00df:"ss",\u0100:"A",\u0102:"A",\u0104:"A",\u0101:"a",\u0103:"a",\u0105:"a",\u0106:"C",\u0108:"C",\u010a:"C",\u010c:"C",\u0107:"c",\u0109:"c",\u010b:"c",\u010d:"c",\u010e:"D",\u0110:"D",\u010f:"d",\u0111:"d",\u0112:"E",\u0114:"E",\u0116:"E",\u0118:"E",\u011a:"E",\u0113:"e",\u0115:"e",\u0117:"e",\u0119:"e",\u011b:"e",\u011c:"G",\u011e:"G",\u0120:"G",\u0122:"G",\u011d:"g",\u011f:"g",\u0121:"g",\u0123:"g",\u0124:"H",\u0126:"H",\u0125:"h",\u0127:"h",\u0128:"I",\u012a:"I",\u012c:"I",\u012e:"I",\u0130:"I",\u0129:"i",\u012b:"i",\u012d:"i",\u012f:"i",\u0131:"i",\u0134:"J",\u0135:"j",\u0136:"K",\u0137:"k",\u0138:"k",\u0139:"L",\u013b:"L",\u013d:"L",\u013f:"L",\u0141:"L",\u013a:"l",\u013c:"l",\u013e:"l",\u0140:"l",\u0142:"l",\u0143:"N",\u0145:"N",\u0147:"N",\u014a:"N",\u0144:"n",\u0146:"n",\u0148:"n",\u014b:"n",\u014c:"O",\u014e:"O",\u0150:"O",\u014d:"o",\u014f:"o",\u0151:"o",\u0154:"R",\u0156:"R",\u0158:"R",\u0155:"r",\u0157:"r",\u0159:"r",\u015a:"S",\u015c:"S",\u015e:"S",\u0160:"S",\u015b:"s",\u015d:"s",\u015f:"s",\u0161:"s",\u0162:"T",\u0164:"T",\u0166:"T",\u0163:"t",\u0165:"t",\u0167:"t",\u0168:"U",\u016a:"U",\u016c:"U",\u016e:"U",\u0170:"U",\u0172:"U",\u0169:"u",\u016b:"u",\u016d:"u",\u016f:"u",\u0171:"u",\u0173:"u",\u0174:"W",\u0175:"w",\u0176:"Y",\u0177:"y",\u0178:"Y",\u0179:"Z",\u017b:"Z",\u017d:"Z",\u017a:"z",\u017c:"z",\u017e:"z",\u0132:"IJ",\u0133:"ij",\u0152:"Oe",\u0153:"oe",\u0149:"'n",\u017f:"s"});a.exports=r},1005:function(a,e){a.exports=function(a){return function(e){return null==a?void 0:a[e]}}},1006:function(a,e,n){var r=n(1007),t=n(1008),i=n(224),o=n(1009);a.exports=function(a,e,n){return a=i(a),void 0===(e=n?void 0:e)?t(a)?o(a):r(a):a.match(e)||[]}},1007:function(a,e){var n=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;a.exports=function(a){return a.match(n)||[]}},1008:function(a,e){var n=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;a.exports=function(a){return n.test(a)}},1009:function(a,e){var n="\\u2700-\\u27bf",r="a-z\\xdf-\\xf6\\xf8-\\xff",t="A-Z\\xc0-\\xd6\\xd8-\\xde",i="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",o="["+i+"]",u="\\d+",s="[\\u2700-\\u27bf]",l="["+r+"]",c="[^\\ud800-\\udfff"+i+u+n+r+t+"]",d="(?:\\ud83c[\\udde6-\\uddff]){2}",h="[\\ud800-\\udbff][\\udc00-\\udfff]",f="["+t+"]",p="(?:"+l+"|"+c+")",m="(?:"+f+"|"+c+")",S="(?:['\u2019](?:d|ll|m|re|s|t|ve))?",g="(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",b="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",A="[\\ufe0e\\ufe0f]?",v=A+b+("(?:\\u200d(?:"+["[^\\ud800-\\udfff]",d,h].join("|")+")"+A+b+")*"),y="(?:"+[s,d,h].join("|")+")"+v,k=RegExp([f+"?"+l+"+"+S+"(?="+[o,f,"$"].join("|")+")",m+"+"+g+"(?="+[o,f+p,"$"].join("|")+")",f+"?"+p+"+"+S,f+"+"+g,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",u,y].join("|"),"g");a.exports=function(a){return a.match(k)||[]}},1010:function(a,e,n){var r=n(1011),t=n(838)((function(a,e,n){return e=e.toLowerCase(),a+(n?r(e):e)}));a.exports=t},1011:function(a,e,n){var r=n(224),t=n(710);a.exports=function(a){return t(r(a).toLowerCase())}},1012:function(a,e,n){var r=n(227),t=n(709),i=n(414);a.exports=function(a,e){var n={};return e=i(e,3),t(a,(function(a,t,i){r(n,e(a,t,i),a)})),n}},1013:function(a,e){function n(a,e){var n=a.length,r=new Array(n),t={},i=n,o=function(a){for(var e=new Map,n=0,r=a.length;n<r;n++){var t=a[n];e.has(t[0])||e.set(t[0],new Set),e.has(t[1])||e.set(t[1],new Set),e.get(t[0]).add(t[1])}return e}(e),u=function(a){for(var e=new Map,n=0,r=a.length;n<r;n++)e.set(a[n],n);return e}(a);for(e.forEach((function(a){if(!u.has(a[0])||!u.has(a[1]))throw new Error("Unknown node. There is an unknown node in the supplied edges.")}));i--;)t[i]||s(a[i],i,new Set);return r;function s(a,e,i){if(i.has(a)){var l;try{l=", node was:"+JSON.stringify(a)}catch(h){l=""}throw new Error("Cyclic dependency"+l)}if(!u.has(a))throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(a));if(!t[e]){t[e]=!0;var c=o.get(a)||new Set;if(e=(c=Array.from(c)).length){i.add(a);do{var d=c[--e];s(d,u.get(d),i)}while(e);i.delete(a)}r[--n]=a}}}a.exports=function(a){return n(function(a){for(var e=new Set,n=0,r=a.length;n<r;n++){var t=a[n];e.add(t[0]),e.add(t[1])}return Array.from(e)}(a),a)},a.exports.array=n},163:function(a,e,n){"use strict";e.a=function(a,e){}},693:function(a,e,n){"use strict";var r=n(836),t="object"==typeof self&&self&&self.Object===Object&&self,i=r.a||t||Function("return this")();e.a=i},709:function(a,e,n){var r=n(755),t=n(127);a.exports=function(a,e){return a&&r(a,e,t)}},710:function(a,e,n){var r=n(760)("toUpperCase");a.exports=r},711:function(a,e){var n=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");a.exports=function(a){return n.test(a)}},720:function(a,e,n){"use strict";n.d(e,"a",(function(){return nr}));var r=n(0),t=n(996),i=n.n(t),o=function(a){return function(a){return!!a&&"object"===typeof a}(a)&&!function(a){var e=Object.prototype.toString.call(a);return"[object RegExp]"===e||"[object Date]"===e||function(a){return a.$$typeof===u}(a)}(a)};var u="function"===typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function s(a,e){return!1!==e.clone&&e.isMergeableObject(a)?c((n=a,Array.isArray(n)?[]:{}),a,e):a;var n}function l(a,e,n){return a.concat(e).map((function(a){return s(a,n)}))}function c(a,e,n){(n=n||{}).arrayMerge=n.arrayMerge||l,n.isMergeableObject=n.isMergeableObject||o;var r=Array.isArray(e);return r===Array.isArray(a)?r?n.arrayMerge(a,e,n):function(a,e,n){var r={};return n.isMergeableObject(a)&&Object.keys(a).forEach((function(e){r[e]=s(a[e],n)})),Object.keys(e).forEach((function(t){n.isMergeableObject(e[t])&&a[t]?r[t]=c(a[t],e[t],n):r[t]=s(e[t],n)})),r}(a,e,n):s(e,n)}c.all=function(a,e){if(!Array.isArray(a))throw new Error("first argument should be an array");return a.reduce((function(a,n){return c(a,n,e)}),{})};var d=c,h=n(693),f=h.a.Symbol,p=Object.prototype,m=p.hasOwnProperty,S=p.toString,g=f?f.toStringTag:void 0;var b=function(a){var e=m.call(a,g),n=a[g];try{a[g]=void 0;var r=!0}catch(i){}var t=S.call(a);return r&&(e?a[g]=n:delete a[g]),t},A=Object.prototype.toString;var v=function(a){return A.call(a)},y=f?f.toStringTag:void 0;var k=function(a){return null==a?void 0===a?"[object Undefined]":"[object Null]":y&&y in Object(a)?b(a):v(a)};var M=function(a,e){return function(n){return a(e(n))}},B=M(Object.getPrototypeOf,Object);var C=function(a){return null!=a&&"object"==typeof a},T=Function.prototype,O=Object.prototype,N=T.toString,E=O.hasOwnProperty,K=N.call(Object);var L=function(a){if(!C(a)||"[object Object]"!=k(a))return!1;var e=B(a);if(null===e)return!0;var n=E.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&N.call(n)==K};var P=function(){this.__data__=[],this.size=0};var R=function(a,e){return a===e||a!==a&&e!==e};var D=function(a,e){for(var n=a.length;n--;)if(R(a[n][0],e))return n;return-1},j=Array.prototype.splice;var F=function(a){var e=this.__data__,n=D(e,a);return!(n<0)&&(n==e.length-1?e.pop():j.call(e,n,1),--this.size,!0)};var I=function(a){var e=this.__data__,n=D(e,a);return n<0?void 0:e[n][1]};var G=function(a){return D(this.__data__,a)>-1};var w=function(a,e){var n=this.__data__,r=D(n,a);return r<0?(++this.size,n.push([a,e])):n[r][1]=e,this};function H(a){var e=-1,n=null==a?0:a.length;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}H.prototype.clear=P,H.prototype.delete=F,H.prototype.get=I,H.prototype.has=G,H.prototype.set=w;var U=H;var z=function(){this.__data__=new U,this.size=0};var V=function(a){var e=this.__data__,n=e.delete(a);return this.size=e.size,n};var _=function(a){return this.__data__.get(a)};var x=function(a){return this.__data__.has(a)};var W=function(a){var e=typeof a;return null!=a&&("object"==e||"function"==e)};var J=function(a){if(!W(a))return!1;var e=k(a);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e},Z=h.a["__core-js_shared__"],Y=function(){var a=/[^.]+$/.exec(Z&&Z.keys&&Z.keys.IE_PROTO||"");return a?"Symbol(src)_1."+a:""}();var q=function(a){return!!Y&&Y in a},$=Function.prototype.toString;var Q=function(a){if(null!=a){try{return $.call(a)}catch(e){}try{return a+""}catch(e){}}return""},X=/^\[object .+?Constructor\]$/,aa=Function.prototype,ea=Object.prototype,na=aa.toString,ra=ea.hasOwnProperty,ta=RegExp("^"+na.call(ra).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var ia=function(a){return!(!W(a)||q(a))&&(J(a)?ta:X).test(Q(a))};var oa=function(a,e){return null==a?void 0:a[e]};var ua=function(a,e){var n=oa(a,e);return ia(n)?n:void 0},sa=ua(h.a,"Map"),la=ua(Object,"create");var ca=function(){this.__data__=la?la(null):{},this.size=0};var da=function(a){var e=this.has(a)&&delete this.__data__[a];return this.size-=e?1:0,e},ha=Object.prototype.hasOwnProperty;var fa=function(a){var e=this.__data__;if(la){var n=e[a];return"__lodash_hash_undefined__"===n?void 0:n}return ha.call(e,a)?e[a]:void 0},pa=Object.prototype.hasOwnProperty;var ma=function(a){var e=this.__data__;return la?void 0!==e[a]:pa.call(e,a)};var Sa=function(a,e){var n=this.__data__;return this.size+=this.has(a)?0:1,n[a]=la&&void 0===e?"__lodash_hash_undefined__":e,this};function ga(a){var e=-1,n=null==a?0:a.length;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}ga.prototype.clear=ca,ga.prototype.delete=da,ga.prototype.get=fa,ga.prototype.has=ma,ga.prototype.set=Sa;var ba=ga;var Aa=function(){this.size=0,this.__data__={hash:new ba,map:new(sa||U),string:new ba}};var va=function(a){var e=typeof a;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==a:null===a};var ya=function(a,e){var n=a.__data__;return va(e)?n["string"==typeof e?"string":"hash"]:n.map};var ka=function(a){var e=ya(this,a).delete(a);return this.size-=e?1:0,e};var Ma=function(a){return ya(this,a).get(a)};var Ba=function(a){return ya(this,a).has(a)};var Ca=function(a,e){var n=ya(this,a),r=n.size;return n.set(a,e),this.size+=n.size==r?0:1,this};function Ta(a){var e=-1,n=null==a?0:a.length;for(this.clear();++e<n;){var r=a[e];this.set(r[0],r[1])}}Ta.prototype.clear=Aa,Ta.prototype.delete=ka,Ta.prototype.get=Ma,Ta.prototype.has=Ba,Ta.prototype.set=Ca;var Oa=Ta;var Na=function(a,e){var n=this.__data__;if(n instanceof U){var r=n.__data__;if(!sa||r.length<199)return r.push([a,e]),this.size=++n.size,this;n=this.__data__=new Oa(r)}return n.set(a,e),this.size=n.size,this};function Ea(a){var e=this.__data__=new U(a);this.size=e.size}Ea.prototype.clear=z,Ea.prototype.delete=V,Ea.prototype.get=_,Ea.prototype.has=x,Ea.prototype.set=Na;var Ka=Ea;var La=function(a,e){for(var n=-1,r=null==a?0:a.length;++n<r&&!1!==e(a[n],n,a););return a},Pa=function(){try{var a=ua(Object,"defineProperty");return a({},"",{}),a}catch(e){}}();var Ra=function(a,e,n){"__proto__"==e&&Pa?Pa(a,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):a[e]=n},Da=Object.prototype.hasOwnProperty;var ja=function(a,e,n){var r=a[e];Da.call(a,e)&&R(r,n)&&(void 0!==n||e in a)||Ra(a,e,n)};var Fa=function(a,e,n,r){var t=!n;n||(n={});for(var i=-1,o=e.length;++i<o;){var u=e[i],s=r?r(n[u],a[u],u,n,a):void 0;void 0===s&&(s=a[u]),t?Ra(n,u,s):ja(n,u,s)}return n};var Ia=function(a,e){for(var n=-1,r=Array(a);++n<a;)r[n]=e(n);return r};var Ga=function(a){return C(a)&&"[object Arguments]"==k(a)},wa=Object.prototype,Ha=wa.hasOwnProperty,Ua=wa.propertyIsEnumerable,za=Ga(function(){return arguments}())?Ga:function(a){return C(a)&&Ha.call(a,"callee")&&!Ua.call(a,"callee")},Va=Array.isArray,_a=n(837),xa=/^(?:0|[1-9]\d*)$/;var Wa=function(a,e){var n=typeof a;return!!(e=null==e?9007199254740991:e)&&("number"==n||"symbol"!=n&&xa.test(a))&&a>-1&&a%1==0&&a<e};var Ja=function(a){return"number"==typeof a&&a>-1&&a%1==0&&a<=9007199254740991},Za={};Za["[object Float32Array]"]=Za["[object Float64Array]"]=Za["[object Int8Array]"]=Za["[object Int16Array]"]=Za["[object Int32Array]"]=Za["[object Uint8Array]"]=Za["[object Uint8ClampedArray]"]=Za["[object Uint16Array]"]=Za["[object Uint32Array]"]=!0,Za["[object Arguments]"]=Za["[object Array]"]=Za["[object ArrayBuffer]"]=Za["[object Boolean]"]=Za["[object DataView]"]=Za["[object Date]"]=Za["[object Error]"]=Za["[object Function]"]=Za["[object Map]"]=Za["[object Number]"]=Za["[object Object]"]=Za["[object RegExp]"]=Za["[object Set]"]=Za["[object String]"]=Za["[object WeakMap]"]=!1;var Ya=function(a){return C(a)&&Ja(a.length)&&!!Za[k(a)]};var qa=function(a){return function(e){return a(e)}},$a=n(766),Qa=$a.a&&$a.a.isTypedArray,Xa=Qa?qa(Qa):Ya,ae=Object.prototype.hasOwnProperty;var ee=function(a,e){var n=Va(a),r=!n&&za(a),t=!n&&!r&&Object(_a.a)(a),i=!n&&!r&&!t&&Xa(a),o=n||r||t||i,u=o?Ia(a.length,String):[],s=u.length;for(var l in a)!e&&!ae.call(a,l)||o&&("length"==l||t&&("offset"==l||"parent"==l)||i&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||Wa(l,s))||u.push(l);return u},ne=Object.prototype;var re=function(a){var e=a&&a.constructor;return a===("function"==typeof e&&e.prototype||ne)},te=M(Object.keys,Object),ie=Object.prototype.hasOwnProperty;var oe=function(a){if(!re(a))return te(a);var e=[];for(var n in Object(a))ie.call(a,n)&&"constructor"!=n&&e.push(n);return e};var ue=function(a){return null!=a&&Ja(a.length)&&!J(a)};var se=function(a){return ue(a)?ee(a):oe(a)};var le=function(a,e){return a&&Fa(e,se(e),a)};var ce=function(a){var e=[];if(null!=a)for(var n in Object(a))e.push(n);return e},de=Object.prototype.hasOwnProperty;var he=function(a){if(!W(a))return ce(a);var e=re(a),n=[];for(var r in a)("constructor"!=r||!e&&de.call(a,r))&&n.push(r);return n};var fe=function(a){return ue(a)?ee(a,!0):he(a)};var pe=function(a,e){return a&&Fa(e,fe(e),a)},me=n(998);var Se=function(a,e){var n=-1,r=a.length;for(e||(e=Array(r));++n<r;)e[n]=a[n];return e};var ge=function(a,e){for(var n=-1,r=null==a?0:a.length,t=0,i=[];++n<r;){var o=a[n];e(o,n,a)&&(i[t++]=o)}return i};var be=function(){return[]},Ae=Object.prototype.propertyIsEnumerable,ve=Object.getOwnPropertySymbols,ye=ve?function(a){return null==a?[]:(a=Object(a),ge(ve(a),(function(e){return Ae.call(a,e)})))}:be;var ke=function(a,e){return Fa(a,ye(a),e)};var Me=function(a,e){for(var n=-1,r=e.length,t=a.length;++n<r;)a[t+n]=e[n];return a},Be=Object.getOwnPropertySymbols?function(a){for(var e=[];a;)Me(e,ye(a)),a=B(a);return e}:be;var Ce=function(a,e){return Fa(a,Be(a),e)};var Te=function(a,e,n){var r=e(a);return Va(a)?r:Me(r,n(a))};var Oe=function(a){return Te(a,se,ye)};var Ne=function(a){return Te(a,fe,Be)},Ee=ua(h.a,"DataView"),Ke=ua(h.a,"Promise"),Le=ua(h.a,"Set"),Pe=ua(h.a,"WeakMap"),Re="[object Map]",De="[object Promise]",je="[object Set]",Fe="[object WeakMap]",Ie="[object DataView]",Ge=Q(Ee),we=Q(sa),He=Q(Ke),Ue=Q(Le),ze=Q(Pe),Ve=k;(Ee&&Ve(new Ee(new ArrayBuffer(1)))!=Ie||sa&&Ve(new sa)!=Re||Ke&&Ve(Ke.resolve())!=De||Le&&Ve(new Le)!=je||Pe&&Ve(new Pe)!=Fe)&&(Ve=function(a){var e=k(a),n="[object Object]"==e?a.constructor:void 0,r=n?Q(n):"";if(r)switch(r){case Ge:return Ie;case we:return Re;case He:return De;case Ue:return je;case ze:return Fe}return e});var _e=Ve,xe=Object.prototype.hasOwnProperty;var We=function(a){var e=a.length,n=new a.constructor(e);return e&&"string"==typeof a[0]&&xe.call(a,"index")&&(n.index=a.index,n.input=a.input),n},Je=h.a.Uint8Array;var Ze=function(a){var e=new a.constructor(a.byteLength);return new Je(e).set(new Je(a)),e};var Ye=function(a,e){var n=e?Ze(a.buffer):a.buffer;return new a.constructor(n,a.byteOffset,a.byteLength)},qe=/\w*$/;var $e=function(a){var e=new a.constructor(a.source,qe.exec(a));return e.lastIndex=a.lastIndex,e},Qe=f?f.prototype:void 0,Xe=Qe?Qe.valueOf:void 0;var an=function(a){return Xe?Object(Xe.call(a)):{}};var en=function(a,e){var n=e?Ze(a.buffer):a.buffer;return new a.constructor(n,a.byteOffset,a.length)};var nn=function(a,e,n){var r=a.constructor;switch(e){case"[object ArrayBuffer]":return Ze(a);case"[object Boolean]":case"[object Date]":return new r(+a);case"[object DataView]":return Ye(a,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return en(a,n);case"[object Map]":return new r;case"[object Number]":case"[object String]":return new r(a);case"[object RegExp]":return $e(a);case"[object Set]":return new r;case"[object Symbol]":return an(a)}},rn=Object.create,tn=function(){function a(){}return function(e){if(!W(e))return{};if(rn)return rn(e);a.prototype=e;var n=new a;return a.prototype=void 0,n}}();var on=function(a){return"function"!=typeof a.constructor||re(a)?{}:tn(B(a))};var un=function(a){return C(a)&&"[object Map]"==_e(a)},sn=$a.a&&$a.a.isMap,ln=sn?qa(sn):un;var cn=function(a){return C(a)&&"[object Set]"==_e(a)},dn=$a.a&&$a.a.isSet,hn=dn?qa(dn):cn,fn="[object Arguments]",pn="[object Function]",mn="[object Object]",Sn={};Sn[fn]=Sn["[object Array]"]=Sn["[object ArrayBuffer]"]=Sn["[object DataView]"]=Sn["[object Boolean]"]=Sn["[object Date]"]=Sn["[object Float32Array]"]=Sn["[object Float64Array]"]=Sn["[object Int8Array]"]=Sn["[object Int16Array]"]=Sn["[object Int32Array]"]=Sn["[object Map]"]=Sn["[object Number]"]=Sn["[object Object]"]=Sn["[object RegExp]"]=Sn["[object Set]"]=Sn["[object String]"]=Sn["[object Symbol]"]=Sn["[object Uint8Array]"]=Sn["[object Uint8ClampedArray]"]=Sn["[object Uint16Array]"]=Sn["[object Uint32Array]"]=!0,Sn["[object Error]"]=Sn[pn]=Sn["[object WeakMap]"]=!1;var gn=function a(e,n,r,t,i,o){var u,s=1&n,l=2&n,c=4&n;if(r&&(u=i?r(e,t,i,o):r(e)),void 0!==u)return u;if(!W(e))return e;var d=Va(e);if(d){if(u=We(e),!s)return Se(e,u)}else{var h=_e(e),f=h==pn||"[object GeneratorFunction]"==h;if(Object(_a.a)(e))return Object(me.a)(e,s);if(h==mn||h==fn||f&&!i){if(u=l||f?{}:on(e),!s)return l?Ce(e,pe(u,e)):ke(e,le(u,e))}else{if(!Sn[h])return i?e:{};u=nn(e,h,s)}}o||(o=new Ka);var p=o.get(e);if(p)return p;o.set(e,u),hn(e)?e.forEach((function(t){u.add(a(t,n,r,t,e,o))})):ln(e)&&e.forEach((function(t,i){u.set(i,a(t,n,r,i,e,o))}));var m=d?void 0:(c?l?Ne:Oe:l?fe:se)(e);return La(m||e,(function(t,i){m&&(t=e[i=t]),ja(u,i,a(t,n,r,i,e,o))})),u};var bn=function(a){return gn(a,4)};var An=function(a,e){for(var n=-1,r=null==a?0:a.length,t=Array(r);++n<r;)t[n]=e(a[n],n,a);return t};var vn=function(a){return"symbol"==typeof a||C(a)&&"[object Symbol]"==k(a)};function yn(a,e){if("function"!=typeof a||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var n=function(){var r=arguments,t=e?e.apply(this,r):r[0],i=n.cache;if(i.has(t))return i.get(t);var o=a.apply(this,r);return n.cache=i.set(t,o)||i,o};return n.cache=new(yn.Cache||Oa),n}yn.Cache=Oa;var kn=yn;var Mn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Bn=/\\(\\)?/g,Cn=function(a){var e=kn(a,(function(a){return 500===n.size&&n.clear(),a})),n=e.cache;return e}((function(a){var e=[];return 46===a.charCodeAt(0)&&e.push(""),a.replace(Mn,(function(a,n,r,t){e.push(r?t.replace(Bn,"$1"):n||a)})),e}));var Tn=function(a){if("string"==typeof a||vn(a))return a;var e=a+"";return"0"==e&&1/a==-Infinity?"-0":e},On=f?f.prototype:void 0,Nn=On?On.toString:void 0;var En=function a(e){if("string"==typeof e)return e;if(Va(e))return An(e,a)+"";if(vn(e))return Nn?Nn.call(e):"";var n=e+"";return"0"==n&&1/e==-Infinity?"-0":n};var Kn=function(a){return null==a?"":En(a)};var Ln=function(a){return Va(a)?An(a,Tn):vn(a)?[a]:Se(Cn(Kn(a)))},Pn=n(163),Rn=n(71),Dn=n.n(Rn);var jn=function(a){return gn(a,5)};function Fn(){return(Fn=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a}).apply(this,arguments)}function In(a,e){a.prototype=Object.create(e.prototype),a.prototype.constructor=a,a.__proto__=e}function Gn(a,e){if(null==a)return{};var n,r,t={},i=Object.keys(a);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(t[n]=a[n]);return t}function wn(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}var Hn=function(a){return Array.isArray(a)&&0===a.length},Un=function(a){return"function"===typeof a},zn=function(a){return null!==a&&"object"===typeof a},Vn=function(a){return String(Math.floor(Number(a)))===a},_n=function(a){return"[object String]"===Object.prototype.toString.call(a)},xn=function(a){return 0===r.Children.count(a)},Wn=function(a){return zn(a)&&Un(a.then)};function Jn(a,e,n,r){void 0===r&&(r=0);for(var t=Ln(e);a&&r<t.length;)a=a[t[r++]];return void 0===a?n:a}function Zn(a,e,n){for(var r=bn(a),t=r,i=0,o=Ln(e);i<o.length-1;i++){var u=o[i],s=Jn(a,o.slice(0,i+1));if(s&&(zn(s)||Array.isArray(s)))t=t[u]=bn(s);else{var l=o[i+1];t=t[u]=Vn(l)&&Number(l)>=0?[]:{}}}return(0===i?a:t)[o[i]]===n?a:(void 0===n?delete t[o[i]]:t[o[i]]=n,0===i&&void 0===n&&delete r[o[i]],r)}function Yn(a,e,n,r){void 0===n&&(n=new WeakMap),void 0===r&&(r={});for(var t=0,i=Object.keys(a);t<i.length;t++){var o=i[t],u=a[o];zn(u)?n.get(u)||(n.set(u,!0),r[o]=Array.isArray(u)?[]:{},Yn(u,e,n,r[o])):r[o]=e}return r}var qn=Object(r.createContext)(void 0),$n=(qn.Provider,qn.Consumer);function Qn(){var a=Object(r.useContext)(qn);return a||Object(Pn.a)(!1),a}function Xn(a,e){switch(e.type){case"SET_VALUES":return Fn({},a,{values:e.payload});case"SET_TOUCHED":return Fn({},a,{touched:e.payload});case"SET_ERRORS":return i()(a.errors,e.payload)?a:Fn({},a,{errors:e.payload});case"SET_STATUS":return Fn({},a,{status:e.payload});case"SET_ISSUBMITTING":return Fn({},a,{isSubmitting:e.payload});case"SET_ISVALIDATING":return Fn({},a,{isValidating:e.payload});case"SET_FIELD_VALUE":return Fn({},a,{values:Zn(a.values,e.payload.field,e.payload.value)});case"SET_FIELD_TOUCHED":return Fn({},a,{touched:Zn(a.touched,e.payload.field,e.payload.value)});case"SET_FIELD_ERROR":return Fn({},a,{errors:Zn(a.errors,e.payload.field,e.payload.value)});case"RESET_FORM":return Fn({},a,e.payload);case"SET_FORMIK_STATE":return e.payload(a);case"SUBMIT_ATTEMPT":return Fn({},a,{touched:Yn(a.values,!0),isSubmitting:!0,submitCount:a.submitCount+1});case"SUBMIT_FAILURE":case"SUBMIT_SUCCESS":return Fn({},a,{isSubmitting:!1});default:return a}}var ar={},er={};function nr(a){var e=a.validateOnChange,n=void 0===e||e,t=a.validateOnBlur,o=void 0===t||t,u=a.validateOnMount,s=void 0!==u&&u,l=a.isInitialValid,c=a.enableReinitialize,h=void 0!==c&&c,f=a.onSubmit,p=Gn(a,["validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit"]),m=Fn({validateOnChange:n,validateOnBlur:o,validateOnMount:s,onSubmit:f},p),S=Object(r.useRef)(m.initialValues),g=Object(r.useRef)(m.initialErrors||ar),b=Object(r.useRef)(m.initialTouched||er),A=Object(r.useRef)(m.initialStatus),v=Object(r.useRef)(!1),y=Object(r.useRef)({});Object(r.useEffect)((function(){return v.current=!0,function(){v.current=!1}}),[]);var k=Object(r.useReducer)(Xn,{values:m.initialValues,errors:m.initialErrors||ar,touched:m.initialTouched||er,status:m.initialStatus,isSubmitting:!1,isValidating:!1,submitCount:0}),M=k[0],B=k[1],C=Object(r.useCallback)((function(a,e){return new Promise((function(n,r){var t=m.validate(a,e);null==t?n(ar):Wn(t)?t.then((function(a){n(a||ar)}),(function(a){r(a)})):n(t)}))}),[m.validate]),T=Object(r.useCallback)((function(a,e){var n=m.validationSchema,r=Un(n)?n(e):n,t=e&&r.validateAt?r.validateAt(e,a):function(a,e,n,r){void 0===n&&(n=!1);void 0===r&&(r={});var t=rr(a);return e[n?"validateSync":"validate"](t,{abortEarly:!1,context:r})}(a,r);return new Promise((function(a,e){t.then((function(){a(ar)}),(function(n){"ValidationError"===n.name?a(function(a){var e={};if(a.inner){if(0===a.inner.length)return Zn(e,a.path,a.message);var n=a.inner,r=Array.isArray(n),t=0;for(n=r?n:n[Symbol.iterator]();;){var i;if(r){if(t>=n.length)break;i=n[t++]}else{if((t=n.next()).done)break;i=t.value}var o=i;Jn(e,o.path)||(e=Zn(e,o.path,o.message))}}return e}(n)):e(n)}))}))}),[m.validationSchema]),O=Object(r.useCallback)((function(a,e){return new Promise((function(n){return n(y.current[a].validate(e))}))}),[]),N=Object(r.useCallback)((function(a){var e=Object.keys(y.current).filter((function(a){return Un(y.current[a].validate)})),n=e.length>0?e.map((function(e){return O(e,Jn(a,e))})):[Promise.resolve("DO_NOT_DELETE_YOU_WILL_BE_FIRED")];return Promise.all(n).then((function(a){return a.reduce((function(a,n,r){return"DO_NOT_DELETE_YOU_WILL_BE_FIRED"===n||n&&(a=Zn(a,e[r],n)),a}),{})}))}),[O]),E=Object(r.useCallback)((function(a){return Promise.all([N(a),m.validationSchema?T(a):{},m.validate?C(a):{}]).then((function(a){var e=a[0],n=a[1],r=a[2];return d.all([e,n,r],{arrayMerge:tr})}))}),[m.validate,m.validationSchema,N,C,T]),K=or((function(a){return void 0===a&&(a=M.values),B({type:"SET_ISVALIDATING",payload:!0}),E(a).then((function(a){return v.current&&(B({type:"SET_ISVALIDATING",payload:!1}),i()(M.errors,a)||B({type:"SET_ERRORS",payload:a})),a}))}));Object(r.useEffect)((function(){s&&!0===v.current&&i()(S.current,m.initialValues)&&K(S.current)}),[s,K]);var L=Object(r.useCallback)((function(a){var e=a&&a.values?a.values:S.current,n=a&&a.errors?a.errors:g.current?g.current:m.initialErrors||{},r=a&&a.touched?a.touched:b.current?b.current:m.initialTouched||{},t=a&&a.status?a.status:A.current?A.current:m.initialStatus;S.current=e,g.current=n,b.current=r,A.current=t;var i=function(){B({type:"RESET_FORM",payload:{isSubmitting:!!a&&!!a.isSubmitting,errors:n,touched:r,status:t,values:e,isValidating:!!a&&!!a.isValidating,submitCount:a&&a.submitCount&&"number"===typeof a.submitCount?a.submitCount:0}})};if(m.onReset){var o=m.onReset(M.values,q);Wn(o)?o.then(i):i()}else i()}),[m.initialErrors,m.initialStatus,m.initialTouched]);Object(r.useEffect)((function(){!0!==v.current||i()(S.current,m.initialValues)||(h&&(S.current=m.initialValues,L()),s&&K(S.current))}),[h,m.initialValues,L,s,K]),Object(r.useEffect)((function(){h&&!0===v.current&&!i()(g.current,m.initialErrors)&&(g.current=m.initialErrors||ar,B({type:"SET_ERRORS",payload:m.initialErrors||ar}))}),[h,m.initialErrors]),Object(r.useEffect)((function(){h&&!0===v.current&&!i()(b.current,m.initialTouched)&&(b.current=m.initialTouched||er,B({type:"SET_TOUCHED",payload:m.initialTouched||er}))}),[h,m.initialTouched]),Object(r.useEffect)((function(){h&&!0===v.current&&!i()(A.current,m.initialStatus)&&(A.current=m.initialStatus,B({type:"SET_STATUS",payload:m.initialStatus}))}),[h,m.initialStatus,m.initialTouched]);var P=or((function(a){if(y.current[a]&&Un(y.current[a].validate)){var e=Jn(M.values,a),n=y.current[a].validate(e);return Wn(n)?(B({type:"SET_ISVALIDATING",payload:!0}),n.then((function(a){return a})).then((function(e){B({type:"SET_FIELD_ERROR",payload:{field:a,value:e}}),B({type:"SET_ISVALIDATING",payload:!1})}))):(B({type:"SET_FIELD_ERROR",payload:{field:a,value:n}}),Promise.resolve(n))}return m.validationSchema?(B({type:"SET_ISVALIDATING",payload:!0}),T(M.values,a).then((function(a){return a})).then((function(e){B({type:"SET_FIELD_ERROR",payload:{field:a,value:e[a]}}),B({type:"SET_ISVALIDATING",payload:!1})}))):Promise.resolve()})),R=Object(r.useCallback)((function(a,e){var n=e.validate;y.current[a]={validate:n}}),[]),D=Object(r.useCallback)((function(a){delete y.current[a]}),[]),j=or((function(a,e){return B({type:"SET_TOUCHED",payload:a}),(void 0===e?o:e)?K(M.values):Promise.resolve()})),F=Object(r.useCallback)((function(a){B({type:"SET_ERRORS",payload:a})}),[]),I=or((function(a,e){var r=Un(a)?a(M.values):a;return B({type:"SET_VALUES",payload:r}),(void 0===e?n:e)?K(r):Promise.resolve()})),G=Object(r.useCallback)((function(a,e){B({type:"SET_FIELD_ERROR",payload:{field:a,value:e}})}),[]),w=or((function(a,e,r){return B({type:"SET_FIELD_VALUE",payload:{field:a,value:e}}),(void 0===r?n:r)?K(Zn(M.values,a,e)):Promise.resolve()})),H=Object(r.useCallback)((function(a,e){var n,r=e,t=a;if(!_n(a)){a.persist&&a.persist();var i=a.target?a.target:a.currentTarget,o=i.type,u=i.name,s=i.id,l=i.value,c=i.checked,d=(i.outerHTML,i.options),h=i.multiple;r=e||(u||s),t=/number|range/.test(o)?(n=parseFloat(l),isNaN(n)?"":n):/checkbox/.test(o)?function(a,e,n){if("boolean"===typeof a)return Boolean(e);var r=[],t=!1,i=-1;if(Array.isArray(a))r=a,t=(i=a.indexOf(n))>=0;else if(!n||"true"==n||"false"==n)return Boolean(e);if(e&&n&&!t)return r.concat(n);if(!t)return r;return r.slice(0,i).concat(r.slice(i+1))}(Jn(M.values,r),c,l):h?function(a){return Array.from(a).filter((function(a){return a.selected})).map((function(a){return a.value}))}(d):l}r&&w(r,t)}),[w,M.values]),U=or((function(a){if(_n(a))return function(e){return H(e,a)};H(a)})),z=or((function(a,e,n){return void 0===e&&(e=!0),B({type:"SET_FIELD_TOUCHED",payload:{field:a,value:e}}),(void 0===n?o:n)?K(M.values):Promise.resolve()})),V=Object(r.useCallback)((function(a,e){a.persist&&a.persist();var n=a.target,r=n.name,t=n.id,i=(n.outerHTML,e||(r||t));z(i,!0)}),[z]),_=or((function(a){if(_n(a))return function(e){return V(e,a)};V(a)})),x=Object(r.useCallback)((function(a){Un(a)?B({type:"SET_FORMIK_STATE",payload:a}):B({type:"SET_FORMIK_STATE",payload:function(){return a}})}),[]),W=Object(r.useCallback)((function(a){B({type:"SET_STATUS",payload:a})}),[]),J=Object(r.useCallback)((function(a){B({type:"SET_ISSUBMITTING",payload:a})}),[]),Z=or((function(){return B({type:"SUBMIT_ATTEMPT"}),K().then((function(a){var e=a instanceof Error;if(!e&&0===Object.keys(a).length){var n;try{if(void 0===(n=$()))return}catch(r){throw r}return Promise.resolve(n).then((function(a){return v.current&&B({type:"SUBMIT_SUCCESS"}),a})).catch((function(a){if(v.current)throw B({type:"SUBMIT_FAILURE"}),a}))}if(v.current&&(B({type:"SUBMIT_FAILURE"}),e))throw a}))})),Y=or((function(a){a&&a.preventDefault&&Un(a.preventDefault)&&a.preventDefault(),a&&a.stopPropagation&&Un(a.stopPropagation)&&a.stopPropagation(),Z().catch((function(a){console.warn("Warning: An unhandled error was caught from submitForm()",a)}))})),q={resetForm:L,validateForm:K,validateField:P,setErrors:F,setFieldError:G,setFieldTouched:z,setFieldValue:w,setStatus:W,setSubmitting:J,setTouched:j,setValues:I,setFormikState:x,submitForm:Z},$=or((function(){return f(M.values,q)})),Q=or((function(a){a&&a.preventDefault&&Un(a.preventDefault)&&a.preventDefault(),a&&a.stopPropagation&&Un(a.stopPropagation)&&a.stopPropagation(),L()})),X=Object(r.useCallback)((function(a){return{value:Jn(M.values,a),error:Jn(M.errors,a),touched:!!Jn(M.touched,a),initialValue:Jn(S.current,a),initialTouched:!!Jn(b.current,a),initialError:Jn(g.current,a)}}),[M.errors,M.touched,M.values]),aa=Object(r.useCallback)((function(a){return{setValue:function(e,n){return w(a,e,n)},setTouched:function(e,n){return z(a,e,n)},setError:function(e){return G(a,e)}}}),[w,z,G]),ea=Object(r.useCallback)((function(a){var e=zn(a),n=e?a.name:a,r=Jn(M.values,n),t={name:n,value:r,onChange:U,onBlur:_};if(e){var i=a.type,o=a.value,u=a.as,s=a.multiple;"checkbox"===i?void 0===o?t.checked=!!r:(t.checked=!(!Array.isArray(r)||!~r.indexOf(o)),t.value=o):"radio"===i?(t.checked=r===o,t.value=o):"select"===u&&s&&(t.value=t.value||[],t.multiple=!0)}return t}),[_,U,M.values]),na=Object(r.useMemo)((function(){return!i()(S.current,M.values)}),[S.current,M.values]),ra=Object(r.useMemo)((function(){return"undefined"!==typeof l?na?M.errors&&0===Object.keys(M.errors).length:!1!==l&&Un(l)?l(m):l:M.errors&&0===Object.keys(M.errors).length}),[l,na,M.errors,m]);return Fn({},M,{initialValues:S.current,initialErrors:g.current,initialTouched:b.current,initialStatus:A.current,handleBlur:_,handleChange:U,handleReset:Q,handleSubmit:Y,resetForm:L,setErrors:F,setFormikState:x,setFieldTouched:z,setFieldValue:w,setFieldError:G,setStatus:W,setSubmitting:J,setTouched:j,setValues:I,submitForm:Z,validateForm:K,validateField:P,isValid:ra,dirty:na,unregisterField:D,registerField:R,getFieldProps:ea,getFieldMeta:X,getFieldHelpers:aa,validateOnBlur:o,validateOnChange:n,validateOnMount:s})}function rr(a){var e=Array.isArray(a)?[]:{};for(var n in a)if(Object.prototype.hasOwnProperty.call(a,n)){var r=String(n);!0===Array.isArray(a[r])?e[r]=a[r].map((function(a){return!0===Array.isArray(a)||L(a)?rr(a):""!==a?a:void 0})):L(a[r])?e[r]=rr(a[r]):e[r]=""!==a[r]?a[r]:void 0}return e}function tr(a,e,n){var r=a.slice();return e.forEach((function(e,t){if("undefined"===typeof r[t]){var i=!1!==n.clone&&n.isMergeableObject(e);r[t]=i?d(Array.isArray(e)?[]:{},e,n):e}else n.isMergeableObject(e)?r[t]=d(a[t],e,n):-1===a.indexOf(e)&&r.push(e)})),r}var ir="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement?r.useLayoutEffect:r.useEffect;function or(a){var e=Object(r.useRef)(a);return ir((function(){e.current=a})),Object(r.useCallback)((function(){for(var a=arguments.length,n=new Array(a),r=0;r<a;r++)n[r]=arguments[r];return e.current.apply(void 0,n)}),[])}function ur(a){var e=function(e){return Object(r.createElement)($n,null,(function(n){return n||Object(Pn.a)(!1),Object(r.createElement)(a,Object.assign({},e,{formik:n}))}))},n=a.displayName||a.name||a.constructor&&a.constructor.name||"Component";return e.WrappedComponent=a,e.displayName="FormikConnect("+n+")",Dn()(e,a)}Object(r.forwardRef)((function(a,e){var n=a.action,t=Gn(a,["action"]),i=n||"#",o=Qn(),u=o.handleReset,s=o.handleSubmit;return Object(r.createElement)("form",Object.assign({onSubmit:s,ref:e,onReset:u,action:i},t))})).displayName="Form";var sr=function(a,e,n){var r=lr(a);return r.splice(e,0,n),r},lr=function(a){if(a){if(Array.isArray(a))return[].concat(a);var e=Object.keys(a).map((function(a){return parseInt(a)})).reduce((function(a,e){return e>a?e:a}),0);return Array.from(Fn({},a,{length:e+1}))}return[]},cr=function(a){function e(e){var n;return(n=a.call(this,e)||this).updateArrayField=function(a,e,r){var t=n.props,i=t.name;(0,t.formik.setFormikState)((function(n){var t="function"===typeof r?r:a,o="function"===typeof e?e:a,u=Zn(n.values,i,a(Jn(n.values,i))),s=r?t(Jn(n.errors,i)):void 0,l=e?o(Jn(n.touched,i)):void 0;return Hn(s)&&(s=void 0),Hn(l)&&(l=void 0),Fn({},n,{values:u,errors:r?Zn(n.errors,i,s):n.errors,touched:e?Zn(n.touched,i,l):n.touched})}))},n.push=function(a){return n.updateArrayField((function(e){return[].concat(lr(e),[jn(a)])}),!1,!1)},n.handlePush=function(a){return function(){return n.push(a)}},n.swap=function(a,e){return n.updateArrayField((function(n){return function(a,e,n){var r=lr(a),t=r[e];return r[e]=r[n],r[n]=t,r}(n,a,e)}),!0,!0)},n.handleSwap=function(a,e){return function(){return n.swap(a,e)}},n.move=function(a,e){return n.updateArrayField((function(n){return function(a,e,n){var r=lr(a),t=r[e];return r.splice(e,1),r.splice(n,0,t),r}(n,a,e)}),!0,!0)},n.handleMove=function(a,e){return function(){return n.move(a,e)}},n.insert=function(a,e){return n.updateArrayField((function(n){return sr(n,a,e)}),(function(e){return sr(e,a,null)}),(function(e){return sr(e,a,null)}))},n.handleInsert=function(a,e){return function(){return n.insert(a,e)}},n.replace=function(a,e){return n.updateArrayField((function(n){return function(a,e,n){var r=lr(a);return r[e]=n,r}(n,a,e)}),!1,!1)},n.handleReplace=function(a,e){return function(){return n.replace(a,e)}},n.unshift=function(a){var e=-1;return n.updateArrayField((function(n){var r=n?[a].concat(n):[a];return e<0&&(e=r.length),r}),(function(a){var n=a?[null].concat(a):[null];return e<0&&(e=n.length),n}),(function(a){var n=a?[null].concat(a):[null];return e<0&&(e=n.length),n})),e},n.handleUnshift=function(a){return function(){return n.unshift(a)}},n.handleRemove=function(a){return function(){return n.remove(a)}},n.handlePop=function(){return function(){return n.pop()}},n.remove=n.remove.bind(wn(n)),n.pop=n.pop.bind(wn(n)),n}In(e,a);var n=e.prototype;return n.componentDidUpdate=function(a){this.props.validateOnChange&&this.props.formik.validateOnChange&&!i()(Jn(a.formik.values,a.name),Jn(this.props.formik.values,this.props.name))&&this.props.formik.validateForm(this.props.formik.values)},n.remove=function(a){var e;return this.updateArrayField((function(n){var r=n?lr(n):[];return e||(e=r[a]),Un(r.splice)&&r.splice(a,1),r}),!0,!0),e},n.pop=function(){var a;return this.updateArrayField((function(e){var n=e;return a||(a=n&&n.pop&&n.pop()),n}),!0,!0),a},n.render=function(){var a={push:this.push,pop:this.pop,swap:this.swap,move:this.move,insert:this.insert,replace:this.replace,unshift:this.unshift,remove:this.remove,handlePush:this.handlePush,handlePop:this.handlePop,handleSwap:this.handleSwap,handleMove:this.handleMove,handleInsert:this.handleInsert,handleReplace:this.handleReplace,handleUnshift:this.handleUnshift,handleRemove:this.handleRemove},e=this.props,n=e.component,t=e.render,i=e.children,o=e.name,u=Fn({},a,{form:Gn(e.formik,["validate","validationSchema"]),name:o});return n?Object(r.createElement)(n,u):t?t(u):i?"function"===typeof i?i(u):xn(i)?null:r.Children.only(i):null},e}(r.Component);cr.defaultProps={validateOnChange:!0};r.Component,r.Component},731:function(a,e,n){var r=n(227),t=n(709),i=n(414);a.exports=function(a,e){var n={};return e=i(e,3),t(a,(function(a,t,i){r(n,t,e(a,t,i))})),n}},732:function(a,e,n){"use strict";function r(a){this._maxSize=a,this.clear()}r.prototype.clear=function(){this._size=0,this._values=Object.create(null)},r.prototype.get=function(a){return this._values[a]},r.prototype.set=function(a,e){return this._size>=this._maxSize&&this.clear(),a in this._values||this._size++,this._values[a]=e};var t=/[^.^\]^[]+|(?=\[\]|\.\.)/g,i=/^\d+$/,o=/^\d/,u=/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g,s=/^\s*(['"]?)(.*?)(\1)\s*$/,l=new r(512),c=new r(512),d=new r(512);function h(a){return l.get(a)||l.set(a,f(a).map((function(a){return a.replace(s,"$2")})))}function f(a){return a.match(t)}function p(a){return"string"===typeof a&&a&&-1!==["'",'"'].indexOf(a.charAt(0))}function m(a){return!p(a)&&(function(a){return a.match(o)&&!a.match(i)}(a)||function(a){return u.test(a)}(a))}a.exports={Cache:r,split:f,normalizePath:h,setter:function(a){var e=h(a);return c.get(a)||c.set(a,(function(a,n){for(var r=0,t=e.length,i=a;r<t-1;){var o=e[r];if("__proto__"===o||"constructor"===o||"prototype"===o)return a;i=i[e[r++]]}i[e[r]]=n}))},getter:function(a,e){var n=h(a);return d.get(a)||d.set(a,(function(a){for(var r=0,t=n.length;r<t;){if(null==a&&e)return;a=a[n[r++]]}return a}))},join:function(a){return a.reduce((function(a,e){return a+(p(e)||i.test(e)?"["+e+"]":(a?".":"")+e)}),"")},forEach:function(a,e,n){!function(a,e,n){var r,t,i,o,u=a.length;for(t=0;t<u;t++)(r=a[t])&&(m(r)&&(r='"'+r+'"'),i=!(o=p(r))&&/^\d+$/.test(r),e.call(n,r,o,i,t,a))}(Array.isArray(a)?a:f(a),e,n)}}},755:function(a,e,n){var r=n(756)();a.exports=r},756:function(a,e){a.exports=function(a){return function(e,n,r){for(var t=-1,i=Object(e),o=r(e),u=o.length;u--;){var s=o[a?u:++t];if(!1===n(i[s],s,i))break}return e}}},760:function(a,e,n){var r=n(761),t=n(711),i=n(763),o=n(224);a.exports=function(a){return function(e){e=o(e);var n=t(e)?i(e):void 0,u=n?n[0]:e.charAt(0),s=n?r(n,1).join(""):e.slice(1);return u[a]()+s}}},761:function(a,e,n){var r=n(762);a.exports=function(a,e,n){var t=a.length;return n=void 0===n?t:n,!e&&n>=t?a:r(a,e,n)}},762:function(a,e){a.exports=function(a,e,n){var r=-1,t=a.length;e<0&&(e=-e>t?0:t+e),(n=n>t?t:n)<0&&(n+=t),t=e>n?0:n-e>>>0,e>>>=0;for(var i=Array(t);++r<t;)i[r]=a[r+e];return i}},763:function(a,e,n){var r=n(764),t=n(711),i=n(765);a.exports=function(a){return t(a)?i(a):r(a)}},764:function(a,e){a.exports=function(a){return a.split("")}},765:function(a,e){var n="[\\ud800-\\udfff]",r="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",t="\\ud83c[\\udffb-\\udfff]",i="[^\\ud800-\\udfff]",o="(?:\\ud83c[\\udde6-\\uddff]){2}",u="[\\ud800-\\udbff][\\udc00-\\udfff]",s="(?:"+r+"|"+t+")"+"?",l="[\\ufe0e\\ufe0f]?",c=l+s+("(?:\\u200d(?:"+[i,o,u].join("|")+")"+l+s+")*"),d="(?:"+[i+r+"?",r,o,u,n].join("|")+")",h=RegExp(t+"(?="+t+")|"+d+c,"g");a.exports=function(a){return a.match(h)||[]}},766:function(a,e,n){"use strict";(function(a){var r=n(836),t="object"==typeof exports&&exports&&!exports.nodeType&&exports,i=t&&"object"==typeof a&&a&&!a.nodeType&&a,o=i&&i.exports===t&&r.a.process,u=function(){try{var a=i&&i.require&&i.require("util").types;return a||o&&o.binding&&o.binding("util")}catch(e){}}();e.a=u}).call(this,n(161)(a))},767:function(a,e,n){var r=n(1e3),t=n(428);a.exports=function(a,e){return null!=a&&t(a,e,r)}},836:function(a,e,n){"use strict";(function(a){var n="object"==typeof a&&a&&a.Object===Object&&a;e.a=n}).call(this,n(48))},837:function(a,e,n){"use strict";(function(a){var r=n(693),t=n(997),i="object"==typeof exports&&exports&&!exports.nodeType&&exports,o=i&&"object"==typeof a&&a&&!a.nodeType&&a,u=o&&o.exports===i?r.a.Buffer:void 0,s=(u?u.isBuffer:void 0)||t.a;e.a=s}).call(this,n(161)(a))},838:function(a,e,n){var r=n(1002),t=n(1003),i=n(1006),o=RegExp("['\u2019]","g");a.exports=function(a){return function(e){return r(i(t(e).replace(o,"")),a,"")}}},845:function(a,e,n){"use strict";var r,t;n.d(e,"c",(function(){return q})),n.d(e,"a",(function(){return Sa})),n.d(e,"b",(function(){return j}));try{r=Map}catch(ga){}try{t=Set}catch(ga){}function i(a,e,n){if(!a||"object"!==typeof a||"function"===typeof a)return a;if(a.nodeType&&"cloneNode"in a)return a.cloneNode(!0);if(a instanceof Date)return new Date(a.getTime());if(a instanceof RegExp)return new RegExp(a);if(Array.isArray(a))return a.map(o);if(r&&a instanceof r)return new Map(Array.from(a.entries()));if(t&&a instanceof t)return new Set(Array.from(a.values()));if(a instanceof Object){e.push(a);var u=Object.create(a);for(var s in n.push(u),a){var l=e.findIndex((function(e){return e===a[s]}));u[s]=l>-1?n[l]:i(a[s],e,n)}return u}return a}function o(a){return i(a,[],[])}const u=Object.prototype.toString,s=Error.prototype.toString,l=RegExp.prototype.toString,c="undefined"!==typeof Symbol?Symbol.prototype.toString:()=>"",d=/^Symbol\((.*)\)(.*)$/;function h(a,e=!1){if(null==a||!0===a||!1===a)return""+a;const n=typeof a;if("number"===n)return function(a){return a!=+a?"NaN":0===a&&1/a<0?"-0":""+a}(a);if("string"===n)return e?`"${a}"`:a;if("function"===n)return"[Function "+(a.name||"anonymous")+"]";if("symbol"===n)return c.call(a).replace(d,"Symbol($1)");const r=u.call(a).slice(8,-1);return"Date"===r?isNaN(a.getTime())?""+a:a.toISOString(a):"Error"===r||a instanceof Error?"["+s.call(a)+"]":"RegExp"===r?l.call(a):null}function f(a,e){let n=h(a,e);return null!==n?n:JSON.stringify(a,(function(a,n){let r=h(this[a],e);return null!==r?r:n}),2)}let p={default:"${path} is invalid",required:"${path} is a required field",oneOf:"${path} must be one of the following values: ${values}",notOneOf:"${path} must not be one of the following values: ${values}",notType:({path:a,type:e,value:n,originalValue:r})=>{let t=null!=r&&r!==n,i=`${a} must be a \`${e}\` type, but the final value was: \`${f(n,!0)}\``+(t?` (cast from the value \`${f(r,!0)}\`).`:".");return null===n&&(i+='\n If "null" is intended as an empty value be sure to mark the schema as `.nullable()`'),i},defined:"${path} must be defined"},m={length:"${path} must be exactly ${length} characters",min:"${path} must be at least ${min} characters",max:"${path} must be at most ${max} characters",matches:'${path} must match the following: "${regex}"',email:"${path} must be a valid email",url:"${path} must be a valid URL",uuid:"${path} must be a valid UUID",trim:"${path} must be a trimmed string",lowercase:"${path} must be a lowercase string",uppercase:"${path} must be a upper case string"},S={min:"${path} must be greater than or equal to ${min}",max:"${path} must be less than or equal to ${max}",lessThan:"${path} must be less than ${less}",moreThan:"${path} must be greater than ${more}",positive:"${path} must be a positive number",negative:"${path} must be a negative number",integer:"${path} must be an integer"},g={min:"${path} field must be later than ${min}",max:"${path} field must be at earlier than ${max}"},b={isValue:"${path} field must be ${value}"},A={noUnknown:"${path} field has unspecified keys: ${unknown}"},v={min:"${path} field must have at least ${min} items",max:"${path} field must have less than or equal to ${max} items",length:"${path} must be have ${length} items"};Object.assign(Object.create(null),{mixed:p,string:m,number:S,date:g,object:A,array:v,boolean:b});var y=n(767),k=n.n(y),M=a=>a&&a.__isYupSchema__;var B=class{constructor(a,e){if(this.refs=a,this.refs=a,"function"===typeof e)return void(this.fn=e);if(!k()(e,"is"))throw new TypeError("`is:` is required for `when()` conditions");if(!e.then&&!e.otherwise)throw new TypeError("either `then:` or `otherwise:` is required for `when()` conditions");let{is:n,then:r,otherwise:t}=e,i="function"===typeof n?n:(...a)=>a.every((a=>a===n));this.fn=function(...a){let e=a.pop(),n=a.pop(),o=i(...a)?r:t;if(o)return"function"===typeof o?o(n):n.concat(o.resolve(e))}}resolve(a,e){let n=this.refs.map((a=>a.getValue(null==e?void 0:e.value,null==e?void 0:e.parent,null==e?void 0:e.context))),r=this.fn.apply(a,n.concat(a,e));if(void 0===r||r===a)return a;if(!M(r))throw new TypeError("conditions must return a schema object");return r.resolve(e)}};function C(a){return null==a?[]:[].concat(a)}function T(){return(T=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a}).apply(this,arguments)}let O=/\$\{\s*(\w+)\s*\}/g;class N extends Error{static formatError(a,e){const n=e.label||e.path||"this";return n!==e.path&&(e=T({},e,{path:n})),"string"===typeof a?a.replace(O,((a,n)=>f(e[n]))):"function"===typeof a?a(e):a}static isError(a){return a&&"ValidationError"===a.name}constructor(a,e,n,r){super(),this.name="ValidationError",this.value=e,this.path=n,this.type=r,this.errors=[],this.inner=[],C(a).forEach((a=>{N.isError(a)?(this.errors.push(...a.errors),this.inner=this.inner.concat(a.inner.length?a.inner:a)):this.errors.push(a)})),this.message=this.errors.length>1?`${this.errors.length} errors occurred`:this.errors[0],Error.captureStackTrace&&Error.captureStackTrace(this,N)}}function E(a,e){let{endEarly:n,tests:r,args:t,value:i,errors:o,sort:u,path:s}=a,l=(a=>{let e=!1;return(...n)=>{e||(e=!0,a(...n))}})(e),c=r.length;const d=[];if(o=o||[],!c)return o.length?l(new N(o,i,s)):l(null,i);for(let h=0;h<r.length;h++){(0,r[h])(t,(function(a){if(a){if(!N.isError(a))return l(a,i);if(n)return a.value=i,l(a,i);d.push(a)}if(--c<=0){if(d.length&&(u&&d.sort(u),o.length&&d.push(...o),o=d),o.length)return void l(new N(o,i,s),i);l(null,i)}}))}}var K=n(731),L=n.n(K),P=n(732);const R="$",D=".";function j(a,e){return new F(a,e)}class F{constructor(a,e={}){if("string"!==typeof a)throw new TypeError("ref must be a string, got: "+a);if(this.key=a.trim(),""===a)throw new TypeError("ref must be a non-empty string");this.isContext=this.key[0]===R,this.isValue=this.key[0]===D,this.isSibling=!this.isContext&&!this.isValue;let n=this.isContext?R:this.isValue?D:"";this.path=this.key.slice(n.length),this.getter=this.path&&Object(P.getter)(this.path,!0),this.map=e.map}getValue(a,e,n){let r=this.isContext?n:this.isValue?a:e;return this.getter&&(r=this.getter(r||{})),this.map&&(r=this.map(r)),r}cast(a,e){return this.getValue(a,null==e?void 0:e.parent,null==e?void 0:e.context)}resolve(){return this}describe(){return{type:"ref",key:this.key}}toString(){return`Ref(${this.key})`}static isRef(a){return a&&a.__isYupRef}}function I(){return(I=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a}).apply(this,arguments)}function G(a){function e(e,n){let{value:r,path:t="",label:i,options:o,originalValue:u,sync:s}=e,l=function(a,e){if(null==a)return{};var n,r,t={},i=Object.keys(a);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(t[n]=a[n]);return t}(e,["value","path","label","options","originalValue","sync"]);const{name:c,test:d,params:h,message:f}=a;let{parent:p,context:m}=o;function S(a){return F.isRef(a)?a.getValue(r,p,m):a}function g(a={}){const e=L()(I({value:r,originalValue:u,label:i,path:a.path||t},h,a.params),S),n=new N(N.formatError(a.message||f,e),r,e.path,a.type||c);return n.params=e,n}let b,A=I({path:t,parent:p,type:c,createError:g,resolve:S,options:o,originalValue:u},l);if(s){try{var v;if(b=d.call(A,r,A),"function"===typeof(null==(v=b)?void 0:v.then))throw new Error(`Validation test of type: "${A.type}" returned a Promise during a synchronous validate. This test will finish after the validate call has returned`)}catch(y){return void n(y)}N.isError(b)?n(b):b?n(null,b):n(g())}else try{Promise.resolve(d.call(A,r,A)).then((a=>{N.isError(a)?n(a):a?n(null,a):n(g())}))}catch(y){n(y)}}return e.OPTIONS=a,e}F.prototype.__isYupRef=!0;function w(a,e,n,r=n){let t,i,o;return e?(Object(P.forEach)(e,((u,s,l)=>{let c=s?(a=>a.substr(0,a.length-1).substr(1))(u):u;if((a=a.resolve({context:r,parent:t,value:n})).innerType){let r=l?parseInt(c,10):0;if(n&&r>=n.length)throw new Error(`Yup.reach cannot resolve an array item at index: ${u}, in the path: ${e}. because there is no value at that index. `);t=n,n=n&&n[r],a=a.innerType}if(!l){if(!a.fields||!a.fields[c])throw new Error(`The schema does not contain the path: ${e}. (failed at: ${o} which is a type: "${a._type}")`);t=n,n=n&&n[c],a=a.fields[c]}i=c,o=s?"["+u+"]":"."+u})),{schema:a,parent:t,parentPath:i}):{parent:t,parentPath:e,schema:a}}class H{constructor(){this.list=new Set,this.refs=new Map}get size(){return this.list.size+this.refs.size}describe(){const a=[];for(const e of this.list)a.push(e);for(const[,e]of this.refs)a.push(e.describe());return a}toArray(){return Array.from(this.list).concat(Array.from(this.refs.values()))}add(a){F.isRef(a)?this.refs.set(a.key,a):this.list.add(a)}delete(a){F.isRef(a)?this.refs.delete(a.key):this.list.delete(a)}has(a,e){if(this.list.has(a))return!0;let n,r=this.refs.values();for(;n=r.next(),!n.done;)if(e(n.value)===a)return!0;return!1}clone(){const a=new H;return a.list=new Set(this.list),a.refs=new Map(this.refs),a}merge(a,e){const n=this.clone();return a.list.forEach((a=>n.add(a))),a.refs.forEach((a=>n.add(a))),e.list.forEach((a=>n.delete(a))),e.refs.forEach((a=>n.delete(a))),n}}function U(){return(U=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a}).apply(this,arguments)}class z{constructor(a){this.deps=[],this.conditions=[],this._whitelist=new H,this._blacklist=new H,this.exclusiveTests=Object.create(null),this.tests=[],this.transforms=[],this.withMutation((()=>{this.typeError(p.notType)})),this.type=(null==a?void 0:a.type)||"mixed",this.spec=U({strip:!1,strict:!1,abortEarly:!0,recursive:!0,nullable:!1,presence:"optional"},null==a?void 0:a.spec)}get _type(){return this.type}_typeCheck(a){return!0}clone(a){if(this._mutate)return a&&Object.assign(this.spec,a),this;const e=Object.create(Object.getPrototypeOf(this));return e.type=this.type,e._typeError=this._typeError,e._whitelistError=this._whitelistError,e._blacklistError=this._blacklistError,e._whitelist=this._whitelist.clone(),e._blacklist=this._blacklist.clone(),e.exclusiveTests=U({},this.exclusiveTests),e.deps=[...this.deps],e.conditions=[...this.conditions],e.tests=[...this.tests],e.transforms=[...this.transforms],e.spec=o(U({},this.spec,a)),e}label(a){var e=this.clone();return e.spec.label=a,e}meta(...a){if(0===a.length)return this.spec.meta;let e=this.clone();return e.spec.meta=Object.assign(e.spec.meta||{},a[0]),e}withMutation(a){let e=this._mutate;this._mutate=!0;let n=a(this);return this._mutate=e,n}concat(a){if(!a||a===this)return this;if(a.type!==this.type&&"mixed"!==this.type)throw new TypeError(`You cannot \`concat()\` schema's of different types: ${this.type} and ${a.type}`);let e=this,n=a.clone();const r=U({},e.spec,n.spec);return n.spec=r,n._typeError||(n._typeError=e._typeError),n._whitelistError||(n._whitelistError=e._whitelistError),n._blacklistError||(n._blacklistError=e._blacklistError),n._whitelist=e._whitelist.merge(a._whitelist,a._blacklist),n._blacklist=e._blacklist.merge(a._blacklist,a._whitelist),n.tests=e.tests,n.exclusiveTests=e.exclusiveTests,n.withMutation((e=>{a.tests.forEach((a=>{e.test(a.OPTIONS)}))})),n}isType(a){return!(!this.spec.nullable||null!==a)||this._typeCheck(a)}resolve(a){let e=this;if(e.conditions.length){let n=e.conditions;e=e.clone(),e.conditions=[],e=n.reduce(((e,n)=>n.resolve(e,a)),e),e=e.resolve(a)}return e}cast(a,e={}){let n=this.resolve(U({value:a},e)),r=n._cast(a,e);if(void 0!==a&&!1!==e.assert&&!0!==n.isType(r)){let t=f(a),i=f(r);throw new TypeError(`The value of ${e.path||"field"} could not be cast to a value that satisfies the schema type: "${n._type}". \n\nattempted value: ${t} \n`+(i!==t?`result of cast: ${i}`:""))}return r}_cast(a,e){let n=void 0===a?a:this.transforms.reduce(((e,n)=>n.call(this,e,a,this)),a);return void 0===n&&(n=this.getDefault()),n}_validate(a,e={},n){let{sync:r,path:t,from:i=[],originalValue:o=a,strict:u=this.spec.strict,abortEarly:s=this.spec.abortEarly}=e,l=a;u||(l=this._cast(l,U({assert:!1},e)));let c={value:l,path:t,options:e,originalValue:o,schema:this,label:this.spec.label,sync:r,from:i},d=[];this._typeError&&d.push(this._typeError),this._whitelistError&&d.push(this._whitelistError),this._blacklistError&&d.push(this._blacklistError),E({args:c,value:l,path:t,sync:r,tests:d,endEarly:s},(a=>{a?n(a,l):E({tests:this.tests,args:c,path:t,sync:r,value:l,endEarly:s},n)}))}validate(a,e,n){let r=this.resolve(U({},e,{value:a}));return"function"===typeof n?r._validate(a,e,n):new Promise(((n,t)=>r._validate(a,e,((a,e)=>{a?t(a):n(e)}))))}validateSync(a,e){let n;return this.resolve(U({},e,{value:a}))._validate(a,U({},e,{sync:!0}),((a,e)=>{if(a)throw a;n=e})),n}isValid(a,e){return this.validate(a,e).then((()=>!0),(a=>{if(N.isError(a))return!1;throw a}))}isValidSync(a,e){try{return this.validateSync(a,e),!0}catch(n){if(N.isError(n))return!1;throw n}}_getDefault(){let a=this.spec.default;return null==a?a:"function"===typeof a?a.call(this):o(a)}getDefault(a){return this.resolve(a||{})._getDefault()}default(a){if(0===arguments.length)return this._getDefault();return this.clone({default:a})}strict(a=!0){var e=this.clone();return e.spec.strict=a,e}_isPresent(a){return null!=a}defined(a=p.defined){return this.test({message:a,name:"defined",exclusive:!0,test:a=>void 0!==a})}required(a=p.required){return this.clone({presence:"required"}).withMutation((e=>e.test({message:a,name:"required",exclusive:!0,test(a){return this.schema._isPresent(a)}})))}notRequired(){var a=this.clone({presence:"optional"});return a.tests=a.tests.filter((a=>"required"!==a.OPTIONS.name)),a}nullable(a=!0){return this.clone({nullable:!1!==a})}transform(a){var e=this.clone();return e.transforms.push(a),e}test(...a){let e;if(e=1===a.length?"function"===typeof a[0]?{test:a[0]}:a[0]:2===a.length?{name:a[0],test:a[1]}:{name:a[0],message:a[1],test:a[2]},void 0===e.message&&(e.message=p.default),"function"!==typeof e.test)throw new TypeError("`test` is a required parameters");let n=this.clone(),r=G(e),t=e.exclusive||e.name&&!0===n.exclusiveTests[e.name];if(e.exclusive&&!e.name)throw new TypeError("Exclusive tests must provide a unique `name` identifying the test");return e.name&&(n.exclusiveTests[e.name]=!!e.exclusive),n.tests=n.tests.filter((a=>{if(a.OPTIONS.name===e.name){if(t)return!1;if(a.OPTIONS.test===r.OPTIONS.test)return!1}return!0})),n.tests.push(r),n}when(a,e){Array.isArray(a)||"string"===typeof a||(e=a,a=".");let n=this.clone(),r=C(a).map((a=>new F(a)));return r.forEach((a=>{a.isSibling&&n.deps.push(a.key)})),n.conditions.push(new B(r,e)),n}typeError(a){var e=this.clone();return e._typeError=G({message:a,name:"typeError",test(a){return!(void 0!==a&&!this.schema.isType(a))||this.createError({params:{type:this.schema._type}})}}),e}oneOf(a,e=p.oneOf){var n=this.clone();return a.forEach((a=>{n._whitelist.add(a),n._blacklist.delete(a)})),n._whitelistError=G({message:e,name:"oneOf",test(a){if(void 0===a)return!0;let e=this.schema._whitelist;return!!e.has(a,this.resolve)||this.createError({params:{values:e.toArray().join(", ")}})}}),n}notOneOf(a,e=p.notOneOf){var n=this.clone();return a.forEach((a=>{n._blacklist.add(a),n._whitelist.delete(a)})),n._blacklistError=G({message:e,name:"notOneOf",test(a){let e=this.schema._blacklist;return!e.has(a,this.resolve)||this.createError({params:{values:e.toArray().join(", ")}})}}),n}strip(a=!0){let e=this.clone();return e.spec.strip=a,e}describe(){const a=this.clone(),{label:e,meta:n}=a.spec;return{meta:n,label:e,type:a.type,oneOf:a._whitelist.describe(),notOneOf:a._blacklist.describe(),tests:a.tests.map((a=>({name:a.OPTIONS.name,params:a.OPTIONS.params}))).filter(((a,e,n)=>n.findIndex((e=>e.name===a.name))===e))}}}z.prototype.__isYupSchema__=!0;for(const ba of["validate","validateSync"])z.prototype[`${ba}At`]=function(a,e,n={}){const{parent:r,parentPath:t,schema:i}=w(this,a,e,n.context);return i[ba](r&&r[t],U({},n,{parent:r,path:a}))};for(const ba of["equals","is"])z.prototype[ba]=z.prototype.oneOf;for(const ba of["not","nope"])z.prototype[ba]=z.prototype.notOneOf;z.prototype.optional=z.prototype.notRequired;const V=z;V.prototype;var _=a=>null==a;let x=/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i,W=/^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i,J=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,Z=a=>_(a)||a===a.trim(),Y={}.toString();function q(){return new $}class $ extends z{constructor(){super({type:"string"}),this.withMutation((()=>{this.transform((function(a){if(this.isType(a))return a;if(Array.isArray(a))return a;const e=null!=a&&a.toString?a.toString():a;return e===Y?a:e}))}))}_typeCheck(a){return a instanceof String&&(a=a.valueOf()),"string"===typeof a}_isPresent(a){return super._isPresent(a)&&!!a.length}length(a,e=m.length){return this.test({message:e,name:"length",exclusive:!0,params:{length:a},test(e){return _(e)||e.length===this.resolve(a)}})}min(a,e=m.min){return this.test({message:e,name:"min",exclusive:!0,params:{min:a},test(e){return _(e)||e.length>=this.resolve(a)}})}max(a,e=m.max){return this.test({name:"max",exclusive:!0,message:e,params:{max:a},test(e){return _(e)||e.length<=this.resolve(a)}})}matches(a,e){let n,r,t=!1;return e&&("object"===typeof e?({excludeEmptyString:t=!1,message:n,name:r}=e):n=e),this.test({name:r||"matches",message:n||m.matches,params:{regex:a},test:e=>_(e)||""===e&&t||-1!==e.search(a)})}email(a=m.email){return this.matches(x,{name:"email",message:a,excludeEmptyString:!0})}url(a=m.url){return this.matches(W,{name:"url",message:a,excludeEmptyString:!0})}uuid(a=m.uuid){return this.matches(J,{name:"uuid",message:a,excludeEmptyString:!1})}ensure(){return this.default("").transform((a=>null===a?"":a))}trim(a=m.trim){return this.transform((a=>null!=a?a.trim():a)).test({message:a,name:"trim",test:Z})}lowercase(a=m.lowercase){return this.transform((a=>_(a)?a:a.toLowerCase())).test({message:a,name:"string_case",exclusive:!0,test:a=>_(a)||a===a.toLowerCase()})}uppercase(a=m.uppercase){return this.transform((a=>_(a)?a:a.toUpperCase())).test({message:a,name:"string_case",exclusive:!0,test:a=>_(a)||a===a.toUpperCase()})}}q.prototype=$.prototype;var Q=/^(\d{4}|[+\-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,\.](\d{1,}))?)?(?:(Z)|([+\-])(\d{2})(?::?(\d{2}))?)?)?$/;let X=new Date("");function aa(){return new ea}class ea extends z{constructor(){super({type:"date"}),this.withMutation((()=>{this.transform((function(a){return this.isType(a)?a:(a=function(a){var e,n,r=[1,4,5,6,7,10,11],t=0;if(n=Q.exec(a)){for(var i,o=0;i=r[o];++o)n[i]=+n[i]||0;n[2]=(+n[2]||1)-1,n[3]=+n[3]||1,n[7]=n[7]?String(n[7]).substr(0,3):0,void 0!==n[8]&&""!==n[8]||void 0!==n[9]&&""!==n[9]?("Z"!==n[8]&&void 0!==n[9]&&(t=60*n[10]+n[11],"+"===n[9]&&(t=0-t)),e=Date.UTC(n[1],n[2],n[3],n[4],n[5]+t,n[6],n[7])):e=+new Date(n[1],n[2],n[3],n[4],n[5],n[6],n[7])}else e=Date.parse?Date.parse(a):NaN;return e}(a),isNaN(a)?X:new Date(a))}))}))}_typeCheck(a){return e=a,"[object Date]"===Object.prototype.toString.call(e)&&!isNaN(a.getTime());var e}prepareParam(a,e){let n;if(F.isRef(a))n=a;else{let r=this.cast(a);if(!this._typeCheck(r))throw new TypeError(`\`${e}\` must be a Date or a value that can be \`cast()\` to a Date`);n=r}return n}min(a,e=g.min){let n=this.prepareParam(a,"min");return this.test({message:e,name:"min",exclusive:!0,params:{min:a},test(a){return _(a)||a>=this.resolve(n)}})}max(a,e=g.max){var n=this.prepareParam(a,"max");return this.test({message:e,name:"max",exclusive:!0,params:{max:a},test(a){return _(a)||a<=this.resolve(n)}})}}ea.INVALID_DATE=X,aa.prototype=ea.prototype,aa.INVALID_DATE=X;var na=n(1001),ra=n.n(na),ta=n(1010),ia=n.n(ta),oa=n(1012),ua=n.n(oa),sa=n(1013),la=n.n(sa);function ca(a,e){let n=1/0;return a.some(((a,r)=>{var t;if(-1!==(null==(t=e.path)?void 0:t.indexOf(a)))return n=r,!0})),n}function da(a){return(e,n)=>ca(a,e)-ca(a,n)}function ha(){return(ha=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a}).apply(this,arguments)}let fa=a=>"[object Object]"===Object.prototype.toString.call(a);const pa=da([]);class ma extends z{constructor(a){super({type:"object"}),this.fields=Object.create(null),this._sortErrors=pa,this._nodes=[],this._excludedEdges=[],this.withMutation((()=>{this.transform((function(a){if("string"===typeof a)try{a=JSON.parse(a)}catch(e){a=null}return this.isType(a)?a:null})),a&&this.shape(a)}))}_typeCheck(a){return fa(a)||"function"===typeof a}_cast(a,e={}){var n;let r=super._cast(a,e);if(void 0===r)return this.getDefault();if(!this._typeCheck(r))return r;let t=this.fields,i=null!=(n=e.stripUnknown)?n:this.spec.noUnknown,o=this._nodes.concat(Object.keys(r).filter((a=>-1===this._nodes.indexOf(a)))),u={},s=ha({},e,{parent:u,__validating:e.__validating||!1}),l=!1;for(const c of o){let a=t[c],n=k()(r,c);if(a){let n,t=r[c];s.path=(e.path?`${e.path}.`:"")+c,a=a.resolve({value:t,context:e.context,parent:u});let i="spec"in a?a.spec:void 0,o=null==i?void 0:i.strict;if(null==i?void 0:i.strip){l=l||c in r;continue}n=e.__validating&&o?r[c]:a.cast(r[c],s),void 0!==n&&(u[c]=n)}else n&&!i&&(u[c]=r[c]);u[c]!==r[c]&&(l=!0)}return l?u:r}_validate(a,e={},n){let r=[],{sync:t,from:i=[],originalValue:o=a,abortEarly:u=this.spec.abortEarly,recursive:s=this.spec.recursive}=e;i=[{schema:this,value:o},...i],e.__validating=!0,e.originalValue=o,e.from=i,super._validate(a,e,((a,l)=>{if(a){if(!N.isError(a)||u)return void n(a,l);r.push(a)}if(!s||!fa(l))return void n(r[0]||null,l);o=o||l;let c=this._nodes.map((a=>(n,r)=>{let t=-1===a.indexOf(".")?(e.path?`${e.path}.`:"")+a:`${e.path||""}["${a}"]`,u=this.fields[a];u&&"validate"in u?u.validate(l[a],ha({},e,{path:t,from:i,strict:!0,parent:l,originalValue:o[a]}),r):r(null)}));E({sync:t,tests:c,value:l,errors:r,endEarly:u,sort:this._sortErrors,path:e.path},n)}))}clone(a){const e=super.clone(a);return e.fields=ha({},this.fields),e._nodes=this._nodes,e._excludedEdges=this._excludedEdges,e._sortErrors=this._sortErrors,e}concat(a){let e=super.concat(a),n=e.fields;for(let[r,t]of Object.entries(this.fields)){const a=n[r];void 0===a?n[r]=t:a instanceof z&&t instanceof z&&(n[r]=t.concat(a))}return e.withMutation((()=>e.shape(n)))}getDefaultFromShape(){let a={};return this._nodes.forEach((e=>{const n=this.fields[e];a[e]="default"in n?n.getDefault():void 0})),a}_getDefault(){return"default"in this.spec?super._getDefault():this._nodes.length?this.getDefaultFromShape():void 0}shape(a,e=[]){let n=this.clone(),r=Object.assign(n.fields,a);if(n.fields=r,n._sortErrors=da(Object.keys(r)),e.length){Array.isArray(e[0])||(e=[e]);let a=e.map((([a,e])=>`${a}-${e}`));n._excludedEdges=n._excludedEdges.concat(a)}return n._nodes=function(a,e=[]){let n=[],r=[];function t(a,t){var i=Object(P.split)(a)[0];~r.indexOf(i)||r.push(i),~e.indexOf(`${t}-${i}`)||n.push([t,i])}for(const i in a)if(k()(a,i)){let e=a[i];~r.indexOf(i)||r.push(i),F.isRef(e)&&e.isSibling?t(e.path,i):M(e)&&"deps"in e&&e.deps.forEach((a=>t(a,i)))}return la.a.array(r,n).reverse()}(r,n._excludedEdges),n}pick(a){const e={};for(const n of a)this.fields[n]&&(e[n]=this.fields[n]);return this.clone().withMutation((a=>(a.fields={},a.shape(e))))}omit(a){const e=this.clone(),n=e.fields;e.fields={};for(const r of a)delete n[r];return e.withMutation((()=>e.shape(n)))}from(a,e,n){let r=Object(P.getter)(a,!0);return this.transform((t=>{if(null==t)return t;let i=t;return k()(t,a)&&(i=ha({},t),n||delete i[a],i[e]=r(t)),i}))}noUnknown(a=!0,e=A.noUnknown){"string"===typeof a&&(e=a,a=!0);let n=this.test({name:"noUnknown",exclusive:!0,message:e,test(e){if(null==e)return!0;const n=function(a,e){let n=Object.keys(a.fields);return Object.keys(e).filter((a=>-1===n.indexOf(a)))}(this.schema,e);return!a||0===n.length||this.createError({params:{unknown:n.join(", ")}})}});return n.spec.noUnknown=a,n}unknown(a=!0,e=A.noUnknown){return this.noUnknown(!a,e)}transformKeys(a){return this.transform((e=>e&&ua()(e,((e,n)=>a(n)))))}camelCase(){return this.transformKeys(ia.a)}snakeCase(){return this.transformKeys(ra.a)}constantCase(){return this.transformKeys((a=>ra()(a).toUpperCase()))}describe(){let a=super.describe();return a.fields=L()(this.fields,(a=>a.describe())),a}}function Sa(a){return new ma(a)}Sa.prototype=ma.prototype},996:function(a,e,n){"use strict";var r=Array.isArray,t=Object.keys,i=Object.prototype.hasOwnProperty,o="undefined"!==typeof Element;function u(a,e){if(a===e)return!0;if(a&&e&&"object"==typeof a&&"object"==typeof e){var n,s,l,c=r(a),d=r(e);if(c&&d){if((s=a.length)!=e.length)return!1;for(n=s;0!==n--;)if(!u(a[n],e[n]))return!1;return!0}if(c!=d)return!1;var h=a instanceof Date,f=e instanceof Date;if(h!=f)return!1;if(h&&f)return a.getTime()==e.getTime();var p=a instanceof RegExp,m=e instanceof RegExp;if(p!=m)return!1;if(p&&m)return a.toString()==e.toString();var S=t(a);if((s=S.length)!==t(e).length)return!1;for(n=s;0!==n--;)if(!i.call(e,S[n]))return!1;if(o&&a instanceof Element&&e instanceof Element)return a===e;for(n=s;0!==n--;)if(("_owner"!==(l=S[n])||!a.$$typeof)&&!u(a[l],e[l]))return!1;return!0}return a!==a&&e!==e}a.exports=function(a,e){try{return u(a,e)}catch(n){if(n.message&&n.message.match(/stack|recursion/i)||-2146828260===n.number)return console.warn("Warning: react-fast-compare does not handle circular references.",n.name,n.message),!1;throw n}}},997:function(a,e,n){"use strict";e.a=function(){return!1}},998:function(a,e,n){"use strict";(function(a){var r=n(693),t="object"==typeof exports&&exports&&!exports.nodeType&&exports,i=t&&"object"==typeof a&&a&&!a.nodeType&&a,o=i&&i.exports===t?r.a.Buffer:void 0,u=o?o.allocUnsafe:void 0;e.a=function(a,e){if(e)return a.slice();var n=a.length,r=u?u(n):new a.constructor(n);return a.copy(r),r}}).call(this,n(161)(a))},999:function(a,e,n){"use strict";n.d(e,"a",(function(){return y})),n.d(e,"b",(function(){return k}));var r=n(0),t=n.n(r),i=n(5),o=n.n(i),u=[["Afghanistan","AF","Badakhshan~BDS|Badghis~BDG|Baghlan~BGL|Balkh~BAL|Bamyan~BAM|Daykundi~DAY|Farah~FRA|Faryab~FYB|Ghazni~GHA|Ghor~GHO|Helmand~HEL|Herat~HER|Jowzjan~JOW|Kabul~KAB|Kandahar~KAN|Kapisa~KAP|Khost~KHO|Kunar~KNR|Kunduz~KDZ|Laghman~LAG|Logar~LOW|Maidan Wardak~WAR|Nangarhar~NAN|Nimruz~NIM|Nuristan~NUR|Paktia~PIA|Paktika~PKA|Panjshir~PAN|Parwan~PAR|Samangan~SAM|Sar-e Pol~SAR|Takhar~TAK|Urozgan~ORU|Zabul~ZAB"],["\xc5land Islands","AX","Br\xe4nd\xf6~BR|Ecker\xf6~EC|Finstr\xf6m~FN|F\xf6gl\xf6~FG|Geta~GT|Hammarland~HM|Jomala~JM|Kumlinge~KM|K\xf6kar~KK|Lemland~LE|Lumparland~LU|Mariehamn~MH|Saltvik~SV|Sottunga~ST|Sund~SD|V\xe5rd\xf6~VR"],["Albania","AL","Berat~01|Dib\xebr~09|Durr\xebs~02|Elbasan~03|Fier~04|Gjirokast\xebr~05|Kor\xe7\xeb~06|Kuk\xebs~07|Lezh\xeb~08|Shkod\xebr~10|Tirana~11|Vlor\xeb~12"],["Algeria","DZ","Adrar~01|A\xefn Defla~44|A\xefn T\xe9mouchent~46|Algiers~16|Annaba~23|Batna~05|B\xe9char~08|B\xe9ja\xefa~06|Biskra~07|Blida~09|Bordj Bou Arr\xe9ridj~34|Bou\xefra~10|Boumerd\xe8s~35|Chlef~02|Constantine~25|Djelfa~17|El Bayadh~32|El Oued~39|El Tarf~36|Gharda\xefa~47|Guelma~24|Illizi~33|Jijel~18|Khenchela~40|Laghouat~03|Mascara~29|M\xe9d\xe9a~26|Mila~43|Mostaganem~27|Msila~28|Na\xe2ma~45|Oran~31|Ouargla~30|Oum el Bouaghi~04|Relizane~48|Sa\xefda~20|S\xe9tif~19|Sidi Bel Abb\xe8s~22|Skikda~21|Souk Ahras~41|Tamanghasset~11|T\xe9bessa~12|Tiaret~14|Tindouf~37|Tipaza~42|Tissemsilt~38|Tizi Ouzou~15|Tlemcen~13"],["American Samoa","AS","Tutuila~01|Aunu'u~02|Ta'\u016b~03|Ofu\u2011Olosega~04|Rose Atoll~21|Swains Island~22"],["Andorra","AD","Andorra la Vella~07|Canillo~02|Encamp~03|Escaldes-Engordany~08|La Massana~04|Ordino~05|Sant Juli\xe0 de L\xf2ria~06"],["Angola","AO","Bengo~BGO|Benguela~BGU|Bi\xe9~BIE|Cabinda~CAB|Cuando Cubango~CCU|Cuanza Norte~CNO|Cuanza Sul~CUS|Cunene~CNN|Huambo~HUA|Hu\xedla~HUI|Luanda~LUA|Lunda Norte~LNO|Lunda Sul~LSU|Malanje~MAL|Moxico~MOX|Namibe~NAM|U\xedge~UIG|Zaire~ZAI"],["Anguilla","AI","Anguilla~01|Anguillita Island~02|Blowing Rock~03|Cove Cay~04|Crocus Cay~05|Deadman's Cay~06|Dog Island~07|East Cay~08|Little Island~09|Little Scrub Island~10|Mid Cay~11|North Cay~12|Prickly Pear Cays~13|Rabbit Island~14|Sandy Island/Sand Island~15|Scilly Cay~16|Scrub Island~17|Seal Island~18|Sombrero/Hat Island~19|South Cay~20|South Wager Island~21|West Cay~22"],["Antarctica","AQ","Antarctica~AQ"],["Antigua and Barbuda","AG","Antigua Island~01|Barbuda Island~02|Bird Island~04|Bishop Island~05|Blake Island~06|Crump Island~09|Dulcina Island~10|Exchange Island~11|Five Islands~12|Great Bird Island~13|Green Island~14|Guiana Island~15|Hawes Island~17|Hells Gate Island~16|Henry Island~18|Johnson Island~19|Kid Island~20|Lobster Island~22|Maiden Island~24|Moor Island~25|Nanny Island~26|Pelican Island~27|Prickly Pear Island~28|Rabbit Island~29|Red Head Island~31|Redonda Island~03|Sandy Island~32|Smith Island~33|The Sisters~34|Vernon Island~35|Wicked Will Island~36|York Island~37"],["Argentina","AR","Buenos Aires~B|Capital Federal~C|Catamarca~K|Chaco~H|Chubut~U|C\xf3rdoba~X|Corrientes~W|Entre R\xedos~E|Formosa~P|Jujuy~Y|La Pampa~L|La Rioja~F|Mendoza~M|Misiones~N|Neuqu\xe9n~Q|R\xedo Negro~R|Salta~A|San Juan~J|San Luis~D|Santa Cruz~Z|Santa Fe~S|Santiago del Estero~G|Tierra del Fuego~V|Tucum\xe1n~T"],["Armenia","AM","Aragatsotn~AG|Ararat~AR|Armavir~AV|Gegharkunik~GR|Kotayk~KT|Lori~LO|Shirak~SH|Syunik~SU|Tavush~TV|Vayots Dzor~VD|Yerevan~ER"],["Aruba","AW","Aruba~AW"],["Australia","AU","Australian Capital Territory~ACT|New South Wales~NSW|Northern Territory~NT|Queensland~QLD|South Australia~SA|Tasmania~TAS|Victoria~VIC|Western Australia~WA"],["Austria","AT","Burgenland~1|K\xe4rnten~2|Nieder\xf6sterreich~3|Ober\xf6sterreich~4|Salzburg~5|Steiermark~6|Tirol~7|Vorarlberg~8|Wien~9"],["Azerbaijan","AZ","Ab\u015feron~ABS|A\u011fcab\u0259di~AGC|A\u011fdam~AGM|A\u011fda\u015f~AGS|A\u011fstafa~AGA|A\u011fsu~AGU|Astara~AST|Bak\u0131~BAK|Bab\u0259k~BAB|Balak\u0259n~BAL|B\u0259rd\u0259~BAR|Beyl\u0259qan~BEY|Bil\u0259suvar~BIL|C\u0259bray\u0131l~CAB|C\u0259lilabad~CAL|Culfa~CUL|Da\u015fk\u0259s\u0259n~DAS|F\xfczuli~FUZ|G\u0259d\u0259b\u0259y~GAD|Goranboy~GOR|G\xf6y\xe7ay~GOY|G\xf6yg\xf6l~GYG|Hac\u0131qabul~HAC|\u0130mi\u015fli~IMI|\u0130smay\u0131ll\u0131~ISM|K\u0259lb\u0259c\u0259r~KAL|K\u01ddng\u01ddrli~KAN|K\xfcrd\u0259mir~KUR|La\xe7\u0131n~LAC|L\u0259nk\u0259ran~LAN|Lerik~LER|Masall\u0131~MAS|Neft\xe7ala~NEF|O\u011fuz~OGU|Ordubad~ORD|Q\u0259b\u0259l\u0259~QAB|Qax~QAX|Qazax~QAZ|Qobustan~QOB|Quba~QBA|Qubadli~QBI|Qusar~QUS|Saatl\u0131~SAT|Sabirabad~SAB|\u015eabran~SBN|S\u0259d\u0259r\u0259k~SAD|\u015eahbuz~SAH|\u015e\u0259ki~SAK|Salyan~SAL|\u015eamax\u0131~SMI|\u015e\u0259mkir~SKR|Samux~SMX|\u015e\u0259rur~SAR|Siy\u0259z\u0259n~SIY|\u015eu\u015fa~SUS|T\u0259rt\u0259r~TAR|Tovuz~TOV|Ucar~UCA|Xa\xe7maz~XAC|X\u0131z\u0131~XIZ|Xocal\u0131~XCI|Xocav\u0259nd~XVD|Yard\u0131ml\u0131~YAR|Yevlax~YEV|Z\u0259ngilan~ZAN|Zaqatala~ZAQ|Z\u0259rdab~ZAR"],["Bahamas","BS","Acklins Island~01|Berry Islands~22|Bimini~02|Black Point~23|Cat Island~03|Central Abaco~24|Crooked Island and Long Cay~28|East Grand Bahama~29|Exuma~04|Freeport~05|Fresh Creek~06|Governor's Harbour~07|Green Turtle Cay~08|Harbour Island~09|High Rock~10|Inagua~11|Kemps Bay~12|Long Island~13|Marsh Harbour~14|Mayaguana~15|Moore\u2019s Island~40|New Providence~16|Nichollstown and Berry Islands~17|North Abaco~42|North Andros~41|North Eleuthera~33|Ragged Island~18|Rock Sound~19|San Salvador and Rum Cay~20|Sandy Point~21|South Abaco~35|South Andros~36|South Eleuthera~37|West Grand Bahama~39"],["Bahrain","BH","Al Jan\u016bb\u012byah~14|Al Man\u0101mah~13|Al Mu\u1e29arraq~15|Al Wus\u0163\xe1~16|Ash Sham\u0101l\u012byah~17"],["Bangladesh","BD","Barisal~A|Chittagong~B|Dhaka~C|Khulna~D|Mymensingh~M|Rajshahi~E|Rangpur~F|Sylhet~G"],["Barbados","BB","Christ Church~01|Saint Andrew~02|Saint George~03|Saint James~04|Saint John~05|Saint Joseph~06|Saint Lucy~07|Saint Michael~08|Saint Peter~09|Saint Philip~10|Saint Thomas~11"],["Belarus","BY","Brest voblast~BR|Gorod Minsk~HM|Homiel voblast~HO|Hrodna voblast~HR|Mahilyow voblast~MA|Minsk voblast~MI|Vitsebsk voblast~VI"],["Belgium","BE","Brussels~BRU|Flanders~VLG|Wallonia~WAL"],["Belize","BZ","Belize District~BZ|Cayo District~CY|Corozal District~CZL|Orange Walk District~OW|Stann Creek District~SC|Toledo District~TOL"],["Benin","BJ","Alibori~AL|Atakora~AK|Atlantique~AQ|Borgou~BO|Collines Department~CO|Donga~DO|Kouffo~KO|Littoral Department~LI|Mono Department~MO|Ou\xe9m\xe9~OU|Plateau~PL|Zou~ZO"],["Bermuda","BM","City of Hamilton~03|Devonshire Parish~01|Hamilton Parish~02|Paget Parish~04|Pembroke Parish~05|Sandys Parish~08|Smith's Parish~09|Southampton Parish~10|St. George's Parish~07|Town of St. George~06|Warwick Parish~11"],["Bhutan","BT","Bumthang~33|Chhukha~12|Dagana~22|Gasa~GA|Haa~13|Lhuntse~44|Mongar~42|Paro~11|Pemagatshel~43|Punakha~23|Samdrup Jongkhar~45|Samtse~14|Sarpang~31|Thimphu~15|Trashigang~41|Trashiyangtse~TY|Trongsa~32|Tsirang~21|Wangdue Phodrang~24|Zhemgang~34"],["Bolivia","BO","Beni~B|Chuquisaca~H|Cochabamba~C|La Paz~L|Oruro~O|Pando~N|Potos\xed~P|Santa Cruz~S|Tarija~T"],["Bonaire, Sint Eustatius and Saba","BQ","Bonaire~BO|Saba Isand~SA|Sint Eustatius~SE"],["Bosnia and Herzegovina","BA","Br\u010dko Distrikt~BRC|Federacija Bosne i Hercegovine~BIH|Republika Srpska~SRP"],["Botswana","BW","Central~CE|Ghanzi~GH|Kgalagadi~KG|Kgatleng~KL|Kweneng~KW|North West~NW|North-East~NE|South East~SE|Southern~SO"],["Bouvet Island","BV","Bouvet Island~BV"],["Brazil","BR","Acre~AC|Alagoas~AL|Amap\xe1~AP|Amazonas~AM|Bahia~BA|Cear\xe1~CE|Distrito Federal~DF|Esp\xedrito Santo~ES|Goi\xe1s~GO|Maranh\xe3o~MA|Mato Grosso~MT|Mato Grosso do Sul~MS|Minas Gerais~MG|Par\xe1~PA|Para\xedba~PB|Paran\xe1~PR|Pernambuco~PE|Piau\xed~PI|Rio de Janeiro~RJ|Rio Grande do Norte~RN|Rio Grande do Sul~RS|Rond\xf4nia~RO|Roraima~RR|Santa Catarina~SC|S\xe3o Paulo~SP|Sergipe~SE|Tocantins~TO"],["British Indian Ocean Territory","IO","British Indian Ocean Territory~IO"],["Brunei Darussalam","BN","Belait~BE|Brunei Muara~BM|Temburong~TE|Tutong~TU"],["Bulgaria","BG","Blagoevgrad~01|Burgas~02|Dobrich~08|Gabrovo~07|Jambol~28|Khaskovo~26|Kjustendil~10|Kurdzhali~09|Lovech~11|Montana~12|Pazardzhik~13|Pernik~14|Pleven~15|Plovdiv~16|Razgrad~17|Ruse~18|Shumen~27|Silistra~19|Sliven~20|Smoljan~21|Sofija~23|Sofija-Grad~22|Stara Zagora~24|Turgovishhe~25|Varna~03|Veliko Turnovo~04|Vidin~05|Vraca~06"],["Burkina Faso","BF","Bal\xe9~BAL|Bam/Lake Bam~BAM|Banwa Province~BAN|Baz\xe8ga~BAZ|Bougouriba~BGR|Boulgou Province~BLG|Boulkiemd\xe9~BLK|Como\xe9/Komoe~COM|Ganzourgou Province~GAN|Gnagna~GNA|Gourma Province~GOU|Houet~HOU|Ioba~IOB|Kadiogo~KAD|K\xe9n\xe9dougou~KEN|Komondjari~KMD|Kompienga~KMP|Kossi Province~KOS|Koulp\xe9logo~KOP|Kouritenga~KOT|Kourw\xe9ogo~KOW|L\xe9raba~LER|Loroum~LOR|Mouhoun~MOU|Namentenga~NAM|Naouri/Nahouri~NAO|Nayala~NAY|Noumbiel~NOU|Oubritenga~OUB|Oudalan~OUD|Passor\xe9~PAS|Poni~PON|Sangui\xe9~SNG|Sanmatenga~SMT|S\xe9no~SEN|Sissili~SIS|Soum~SOM|Sourou~SOR|Tapoa~TAP|Tui/Tuy~TUI|Yagha~YAG|Yatenga~YAT|Ziro~ZIR|Zondoma~ZON|Zoundw\xe9ogo~ZOU"],["Burundi","BI","Bubanza~BB|Bujumbura Mairie~BM|Bujumbura Rural~BL|Bururi~BR|Cankuzo~CA|Cibitoke~CI|Gitega~GI|Karuzi~KR|Kayanza~KY|Kirundo~KI|Makamba~MA|Muramvya~MU|Muyinga~MY|Mwaro~MW|Ngozi~NG|Rutana~RT|Ruyigi~RY"],["Cambodia","KH","Baat Dambang~2|Banteay Mean Chey~1|Kampong Chaam~3|Kampong Chhnang~4|Kampong Spueu~5|Kampong Thum~6|Kampot~7|Kandaal~8|Kaoh Kong~9|Kracheh~10|Krong Kaeb~23|Krong Pailin~24|Krong Preah Sihanouk~18|Mondol Kiri~11|Otdar Mean Chey~22|Phnom Penh~12|Pousaat~15|Preah Vihear~13|Prey Veaeng~14|Rotanah Kiri~16|Siem Reab~17|Stueng Treng~19|Svaay Rieng~20|Taakaev~21|Tbong Khmum~25"],["Cameroon","CM","Adamaoua~AD|Centre~CE|Est~ES|Extr\xeame-Nord~EN|Littoral~LT|Nord~NO|Nord-Ouest~NW|Ouest~OU|Sud~SU|Sud-Ouest~SW"],["Canada","CA","Alberta~AB|British Columbia~BC|Manitoba~MB|New Brunswick~NB|Newfoundland and Labrador~NL|Northwest Territories~NT|Nova Scotia~NS|Nunavut~NU|Ontario~ON|Prince Edward Island~PE|Quebec~QC|Saskatchewan~SK|Yukon~YT"],["Cape Verde","CV","Boa Vista~BV|Brava~BR|Calheta de S\xe3o Miguel~CS|Maio~MA|Mosteiros~MO|Pa\xfal~PA|Porto Novo~PN|Praia~PR|Ribeira Brava~RB|Ribeira Grande~RG|Sal~SL|Santa Catarina~CA|Santa Cruz~CR|S\xe3o Domingos~SD|S\xe3o Filipe~SF|S\xe3o Nicolau~SN|S\xe3o Vicente~SV|Tarrafal~TA|Tarrafal de S\xe3o Nicolau~TS"],["Cayman Islands","KY","Creek~undefined|Eastern~undefined|Midland~undefined|South Town~undefined|Spot Bay~undefined|Stake Bay~undefined|West End~undefined|Western~undefined"],["Central African Republic","CF","Bamingui-Bangoran~BB|Bangui~BGF|Basse-Kotto~BK|Haute-Kotto~HK|Haut-Mbomou~HM|K\xe9mo~KG|Lobaye~LB|Mamb\xe9r\xe9-Kad\xe9\xef~HS|Mbomou~MB|Nana-Grebizi~10|Nana-Mamb\xe9r\xe9~NM|Ombella-M'Poko~MP|Ouaka~UK|Ouham~AC|Ouham P\xe9nd\xe9~OP|Sangha-Mba\xe9r\xe9~SE|Vakaga~VK"],["Chad","TD","Bahr el Ghazal~BG|Batha~BA|Borkou~BO|Chari-Baguirmi~CB|Ennedi-Est~EE|Ennedi-Ouest~EO|Gu\xe9ra~GR|Hadjer Lamis~HL|Kanem~KA|Lac~LC|Logone Occidental~LO|Logone Oriental~LR|Mondoul~MA|Mayo-K\xe9bbi-Est~ME|Moyen-Chari~MC|Ouaddai~OD|Salamat~SA|Sila~SI|Tandjil\xe9~TA|Tibesti~TI|Ville de Ndjamena~ND|Wadi Fira~WF"],["Chile","CL","Ais\xe9n del General Carlos Ib\xe1\xf1ez del Campo~AI|Antofagasta~AN|Araucan\xeda~AR|Arica y Parinacota~AP|Atacama~AT|B\xedo-B\xedo~BI|Coquimbo~CO|Libertador General Bernardo O'Higgins~LI|Los Lagos~LL|Los R\xedos~LR|Magallanes y Antartica Chilena~MA|Marga-Marga~|Maule~ML|\xd1uble~NB|Regi\xf3n Metropolitana de Santiago~RM|Tarapac\xe1~TA|Valpara\xedso~VS"],["China","CN","Anhui~34|Beijing~11|Chongqing~50|Fujian~35|Gansu~62|Guangdong~44|Guangxi~45|Guizhou~52|Hainan~46|Hebei~13|Heilongjiang~23|Henan~41|Hong Kong~91|Hubei~42|Hunan~43|Inner Mongolia~15|Jiangsu~32|Jiangxi~36|Jilin~22|Liaoning~21|Macau~92|Ningxia~64|Qinghai~63|Shaanxi~61|Shandong~37|Shanghai~31|Shanxi~14|Sichuan~51|Tianjin~12|Tibet~54|Xinjiang~65|Yunnan~53|Zhejiang~33"],["Christmas Island","CX","Christmas Island~CX"],["Cocos (Keeling) Islands","CC","Direction Island~DI|Home Island~HM|Horsburgh Island~HR|North Keeling Island~NK|South Island~SI|West Island~WI"],["Colombia","CO","Amazonas~AMA|Antioquia~ANT|Arauca~ARA|Archipi\xe9lago de San Andr\xe9s~SAP|Atl\xe1ntico~ATL|Bogot\xe1 D.C.~DC|Bol\xedvar~BOL|Boyac\xe1~BOY|Caldas~CAL|Caquet\xe1~CAQ|Casanare~CAS|Cauca~CAU|Cesar~CES|Choc\xf3~CHO|C\xf3rdoba~COR|Cundinamarca~CUN|Guain\xeda~GUA|Guaviare~GUV|Huila~HUI|La Guajira~LAG|Magdalena~MAG|Meta~MET|Nari\xf1o~NAR|Norte de Santander~NSA|Putumayo~PUT|Quind\xedo~QUI|Risaralda~RIS|Santander~SAN|Sucre~SUC|Tolima~TOL|Valle del Cauca~VAC|Vaup\xe9s~VAU|Vichada~VID"],["Comoros","KM","Andjaz\xeedja~G|Andjou\xe2n~A|Mo\xfbh\xeel\xee~M"],["Congo, Republic of the (Brazzaville)","CG","Bouenza~11|Brazzaville~BZV|Cuvette~8|Cuvette-Ouest~15|Kouilou~5|L\xe9koumou~2|Likouala~7|Niari~9|Plateaux~14|Pointe-Noire~16|Pool~12|Sangha~13"],["Congo, the Democratic Republic of the (Kinshasa)","CD","Bandundu~BN|Bas-Congo~BC|\xc9quateur~EQ|Kasa\xef-Occidental~KE|Kasa\xef-Oriental~KW|Katanga~KA|Kinshasa~KN|Maniema~MA|Nord-Kivu~NK|Orientale~OR|Sud-Kivu~SK"],["Cook Islands","CK","Aitutaki~undefined|Atiu~undefined|Avarua~undefined|Mangaia~undefined|Manihiki~undefined|Ma'uke~undefined|Mitiaro~undefined|Nassau~undefined|Palmerston~undefined|Penrhyn~undefined|Pukapuka~undefined|Rakahanga~undefined"],["Costa Rica","CR","Alajuela~2|Cartago~3|Guanacaste~5|Heredia~4|Lim\xf3n~7|Puntarenas~6|San Jos\xe9~1"],["C\xf4te d'Ivoire, Republic of","CI","Agn\xe9by~16|Bafing~17|Bas-Sassandra~09|Dengu\xe9l\xe9~10|Dix-Huit Montagnes~06|Fromager~18|Haut-Sassandra~02|Lacs~07|Lagunes~01|Marahou\xe9~12|Moyen-Cavally~19|Moyen-Como\xe9~05|N'zi-Como\xe9~11|Savanes~03|Sud-Bandama~15|Sud-Como\xe9~13|Vall\xe9e du Bandama~04|Worodougou~14|Zanzan~08"],["Croatia","HR","Bjelovarsko-Bilogorska \u017dupanija~07|Brodsko-Posavska \u017dupanija~12|Dubrova\u010dko-Neretvanska \u017dupanija~19|Grad Zagreb~21|Istarska \u017dupanija~18|Karlova\u010dka \u017dupanija~04|Koprivni\u010dko-Krizeva\u010dka \u017dupanija~06|Krapinsko-Zagorska \u017dupanija~02|Li\u010dko-Senjska \u017dupanija~09|Me\u0111imurska \u017dupanija~20|Osje\u010dko-Baranjska \u017dupanija~14|Po\u017ee\u0161ko-Slavonska \u017dupanija~11|Primorsko-Goranska \u017dupanija~08|Sisa\u010dko-Moslava\u010dka \u017dupanija~03|Splitsko-Dalmatinska \u017dupanija~17|Sibensko-Kninska \u017dupanija~15|Vara\u017edinska \u017dupanija~05|Viroviti\u010dko-Podravska \u017dupanija~10|Vukovarsko-Srijemska \u017dupanija~16|Zadarska \u017dupanija~13|Zagrebacka Zupanija~01"],["Cuba","CU","Artemisa~15|Camag\xfcey~09|Ciego de \xc1vila~08|Cienfuegos~06|Granma~12|Guant\xe1namo~14|Holgu\xedn~11|Isla de la Juventud~99|La Habana~03|Las Tunas~10|Matanzas~04|Mayabeque~16|Pinar del R\xedo~01|Sancti Sp\xedritus~07|Santiago de Cuba~13|Villa Clara~05"],["Cura\xe7ao","CW","Cura\xe7ao~CW"],["Cyprus","CY","Ammochostos~04|Keryneia~05|Larnaka~03|Lefkosia~01|Lemesos~02|Pafos~05"],["Czech Republic","CZ","Hlavn\xed m\u011bsto Praha~PR|Jiho\u010desk\xfd kraj~JC|Jihomoravsk\xfd kraj~JM|Karlovarsk\xfd kraj~KA|Kr\xe1lov\xe9hradeck\xfd kraj~KR|Libereck\xfd kraj~LI|Moravskoslezsk\xfd kraj~MO|Olomouck\xfd kraj~OL|Pardubick\xfd kraj~PA|Plze\u0148sk\xfd kraj~PL|St\u0159edo\u010desk\xfd kraj~ST|\xdasteck\xfd kraj~US|Vyso\u010dina~VY|Zl\xednsk\xfd kraj~ZL"],["Denmark","DK","Hovedstaden~84|Kujalleq~GL-KU|Midtjylland~82|Norder\xf8erne~FO-01|Nordjylland~81|\xd8ster\xf8~FO-06|Qaasuitsup~GL-QA|Qeqqata~GL-QE|Sand\xf8~FO-02|Sermersooq~GL-SM|Sj\xe6lland~85|Str\xf8m\xf8~FO-03|Suder\xf8~FO-04|Syddanmark~83|V\xe5g\xf8~FO-05"],["Djibouti","DJ","Ali Sabieh~AS|Arta~AR|Dikhil~DI|Obock~OB|Tadjourah~TA"],["Dominica","DM","Saint Andrew Parish~02|Saint David Parish~03|Saint George Parish~04|Saint John Parish~05|Saint Joseph Parish~06|Saint Luke Parish~07|Saint Mark Parish~08|Saint Patrick Parish~09|Saint Paul Parish~10|Saint Peter Parish~11"],["Dominican Republic","DO","Cibao Central~02|Del Valle~37|Distrito Nacional~01|Enriquillo~38|Norcentral~04|Nordeste~34|Noroeste~34|Norte~35|Valdesia~42"],["Ecuador","EC","Azuay~A|Bol\xedvar~B|Ca\xf1ar~F|Carchi~C|Chimborazo~H|Cotopaxi~X|El Oro~O|Esmeraldas~E|Gal\xe1pagos~W|Guayas~G|Imbabura~I|Loja~L|Los R\xedos~R|Manab\xed~M|Morona-Santiago~S|Napo~N|Orellana~D|Pastaza~Y|Pichincha~P|Santa Elena~SE|Santo Domingo de los Ts\xe1chilas~SD|Sucumb\xedos~U|Tungurahua~T|Zamora-Chinchipe~Z"],["Egypt","EG","Alexandria~ALX|Aswan~ASN|Asyout~AST|Bani Sueif~BNS|Beheira~BH|Cairo~C|Daqahlia~DK|Dumiat~DT|El Bahr El Ahmar~BA|El Ismailia~IS|El Suez~SUZ|El Wadi El Gedeed~WAD|Fayoum~FYM|Gharbia~GH|Giza~SUZ|Helwan~HU|Kafr El Sheikh~KFS|Luxor~LX|Matrouh~MT|Menia~MN|Menofia~MNF|North Sinai~SIN|Port Said~PTS|Qalubia~KB|Qena~KN|Sharqia~SHR|Sixth of October~SU|Sohag~SHG|South Sinai~JS"],["El Salvador","SV","Ahuachap\xe1n~AH|Caba\xf1as~CA|Cuscatl\xe1n~CU|Chalatenango~CH|La Libertad~LI|La Paz~PA|La Uni\xf3n~UN|Moraz\xe1n~MO|San Miguel~SM|San Salvador~SS|Santa Ana~SA|San Vicente~SV|Sonsonate~SO|Usulut\xe1n~US"],["Equatorial Guinea","GQ","Annob\xf3n~AN|Bioko Norte~BN|Bioko Sur~BS|Centro Sur~CS|Ki\xe9-Ntem~KN|Litoral~LI|Wele-Nzas~WN"],["Eritrea","ER","Anseba~AN|Debub~DU|Debub-Keih-Bahri~DK|Gash-Barka~GB|Maekel~MA|Semien-Keih-Bahri~SK"],["Estonia","EE","Harjumaa (Tallinn)~37|Hiiumaa (Kardla)~39|Ida-Virumaa (Johvi)~44|J\xe4rvamaa (Paide)~41|J\xf5gevamaa (Jogeva)~49|L\xe4\xe4nemaa~57|L\xe4\xe4ne-Virumaa (Rakvere)~59|P\xe4rnumaa (Parnu)~67|P\xf5lvamaa (Polva)~65|Raplamaa (Rapla)~70|Saaremaa (Kuessaare)~74|Tartumaa (Tartu)~78|Valgamaa (Valga)~82|Viljandimaa (Viljandi)~84|V\xf5rumaa (Voru)~86"],["Ethiopia","ET","Addis Ababa~AA|Afar~AF|Amhara~AM|Benshangul-Gumaz~BE|Dire Dawa~DD|Gambela~GA|Harari~HA|Oromia~OR|Somali~SO|Southern Nations Nationalities and People's Region~SN|Tigray~TI"],["Falkland Islands (Islas Malvinas)","FK","Falkland Islands (Islas Malvinas)~undefined"],["Faroe Islands","FO","Bordoy~undefined|Eysturoy~undefined|Mykines~undefined|Sandoy~undefined|Skuvoy~undefined|Streymoy~undefined|Suduroy~undefined|Tvoroyri~undefined|Vagar~undefined"],["Fiji","FJ","Ba~01|Bua~01|Cakaudrove~03|Kadavu~04|Lau~05|Lomaiviti~06|Macuata~07|Nadroga and Navosa~08|Naitasiri~09|Namosi~10|Ra~011|Rewa~12|Rotuma~R|Serua~12|Tailevu~14"],["Finland","FI","Ahvenanmaan maakunta~FI-01|Etel\xe4-Karjala~FI-02|Etel\xe4-Pohjanmaa~FI-03|Etel\xe4-Savo~FI-04|Kainuu~FI-05|Kanta-H\xe4me~FI-06|Keski-Pohjanmaa~FI-07|Keski-Suomi~FI-08|Kymenlaakso~FI-09|Lappi~FI-10|Pirkanmaa~FI-11|Pohjanmaa~FI-12|Pohjois-Karjala~FI-13|Pohjois-Pohjanmaa~FI-14|Pohjois-Savo~FI-15|P\xe4ij\xe4t-H\xe4me~FI-16|Satakunta~FI-17|Uusimaa~FI-18|Varsinais-Suomi~FI-19"],["France","FR","Auvergne-Rh\xf4ne-Alpes~ARA|Bourgogne-Franche-Comt\xe9~BFC|Bretagne~BRE|Centre-Val de Loire~CVL|Corse~COR|Grand Est~GES|Hauts-de-France~HDF|\xcele-de-France~IDF|Normandie~NOR|Nouvelle-Aquitaine~NAQ|Occitanie~OCC|Pays de la Loire~PDL|Provence-Alpes-Cote d'Azur~PAC|Clipperton~CP|Guadeloupe~GP|Guyane~GF|Martinique~MQ|Mayotte~YT|Novelle-Cal\xe9donie~NC|Polyn\xe9sie~PF|Saint-Pierre-et-Miquelon~PM|Saint Barth\xe9lemy~BL|Saint Martin~MF|R\xe9union~RE|Terres Australes Fran\xe7aises~TF|Wallis-et-Futuna~WF"],["French Guiana","GF","French Guiana~undefined"],["French Polynesia","PF","Archipel des Marquises~undefined|Archipel des Tuamotu~undefined|Archipel des Tubuai~undefined|Iles du Vent~undefined|Iles Sous-le-Vent~undefined"],["French Southern and Antarctic Lands","TF","Adelie Land~undefined|Ile Crozet~undefined|Iles Kerguelen~undefined|Iles Saint-Paul et Amsterdam~undefined"],["Gabon","GA","Estuaire~1|Haut-Ogoou\xe9~2|Moyen-Ogoou\xe9~3|Ngouni\xe9~4|Nyanga~5|Ogoou\xe9-Ivindo~6|Ogoou\xe9-Lolo~7|Ogoou\xe9-Maritime~8|Woleu-Ntem~9"],["Gambia, The","GM","Banjul~B|Central River~M|Lower River~L|North Bank~N|Upper River~U|Western~W"],["Georgia","GE","Abkhazia (Sokhumi)~AB|Ajaria (Bat'umi)~AJ|Guria~GU|Imereti~IM|K'akheti~KA|Kvemo Kartli~KK|Mtshkheta-Mtianeti~MM|Rach'a-Lexhkumi-KvemoSvaneti~RL|Samegrelo-Zemo Svaneti~SZ|Samtskhe-Javakheti~SJ|Shida Kartli~SK|Tbilisi~TB"],["Germany","DE","Baden-W\xfcrttemberg~BW|Bayern~BY|Berlin~BE|Brandenburg~BB|Bremen~HB|Hamburg~HH|Hessen~HE|Mecklenburg-Vorpommern~MV|Niedersachsen~NI|Nordrhein-Westfalen~NW|Rheinland-Pfalz~RP|Saarland~SL|Sachsen~SN|Sachsen-Anhalt~ST|Schleswig-Holstein~SH|Th\xfcringen~TH"],["Ghana","GH","Ahafo~undefined|Ashanti~AH|Bono~undefined|Bono East~undefined|Central~CP|Eastern~EP|Greater Accra~AA|Northern~NP|North East~undefined|Oti~undefined|Savannah~undefined|Upper East~UE|Upper West~UW|Volta~TV|Western~WP|Western North~undefined"],["Gibraltar","GI","Gibraltar~undefined"],["Greece","GR","Anatolik\xed Makedon\xeda kai Thr\xe1ki~A|Attik\u1e2f~I|Dytik\xed Ell\xe1da~G|Dytik\xed Makedon\xeda~C|Ion\xeda N\xedsia~F|Kentrik\xed Makedon\xeda~B|Kr\xedt\xed~M|Not\xedo Aiga\xedo~L|Peloponn\xedsos~J|Stere\xe1 Ell\xe1da~H|Thessal\xeda~E|Vore\xedo Aiga\xedo~K|\xcdpeiros~D|\xc1gion \xd3ros~69"],["Greenland","GL","Kommune Kujalleq~KU|Kommuneqarfik Sermersooq~SM|Qaasuitsup Kommunia~QA|Qeqqata Kommunia~QE"],["Grenada","GD","Saint Andrew~01|Saint David~02|Saint George~03|Saint John~04|Saint Mark~05|Saint Patrick~06|Southern Grenadine Islands~10"],["Guadeloupe","GP","Guadeloupe~undefined"],["Guam","GU","Guam~undefined"],["Guatemala","GT","Alta Verapaz~AV|Baja Verapaz~BV|Chimaltenango~CM|Chiquimula~CQ|El Progreso~PR|Escuintla~ES|Guatemala~GU|Huehuetenango~HU|Izabal~IZ|Jalapa~JA|Jutiapa~JU|Pet\xe9n~PE|Quetzaltenango~QZ|Quich\xe9~QC|Retalhuleu~Re|Sacatep\xe9quez~SA|San Marcos~SM|Santa Rosa~SR|Solol\xe1~SO|Suchitep\xe9quez~SU|Totonicap\xe1n~TO|Zacapa~ZA"],["Guernsey","GG","Castel~undefined|Forest~undefined|St. Andrew~undefined|St. Martin~undefined|St. Peter Port~undefined|St. Pierre du Bois~undefined|St. Sampson~undefined|St. Saviour~undefined|Torteval~undefined|Vale~undefined"],["Guinea","GN","Bok\xe9~B|Conakry~C|Faranah~F|Kankan~K|Kindia~D|Lab\xe9~L|Mamou~M|Nz\xe9r\xe9kor\xe9~N"],["Guinea-Bissau","GW","Bafat\xe1~BA|Biombo~BM|Bissau~BS|Bolama-Bijagos~BL|Cacheu~CA|Gab\xfa~GA|Oio~OI|Quinara~QU|Tombali~TO"],["Guyana","GY","Barima-Waini~BA|Cuyuni-Mazaruni~CU|Demerara-Mahaica~DE|East Berbice-Corentyne~EB|Essequibo Islands-West Demerara~ES|Mahaica-Berbice~MA|Pomeroon-Supenaam~PM|Potaro-Siparuni~PT|Upper Demerara-Berbice~UD|Upper Takutu-Upper Essequibo~UT"],["Haiti","HT","Artibonite~AR|Centre~CE|Grand'Anse~GA|Nippes~NI|Nord~ND|Nord-Est~NE|Nord-Ouest~NO|Ouest~OU|Sud~SD|Sud-Est~SE"],["Heard Island and McDonald Islands","HM","Heard Island and McDonald Islands~undefined"],["Holy See (Vatican City)","VA","Holy See (Vatican City)~01"],["Honduras","HN","Atl\xe1ntida~AT|Choluteca~CH|Col\xf3n~CL|Comayagua~CM|Cop\xe1n~CP|Cort\xe9s~CR|El Para\xedso~EP|Francisco Morazan~FM|Gracias a Dios~GD|Intibuc\xe1~IN|Islas de la Bah\xeda~IB|La Paz~LP|Lempira~LE|Ocotepeque~OC|Olancho~OL|Santa B\xe1rbara~SB|Valle~VA|Yoro~YO"],["Hong Kong","HK","Hong Kong~HK"],["Hungary","HU","B\xe1cs-Kiskun~BK|Baranya~BA|B\xe9k\xe9s~BE|B\xe9k\xe9scsaba~BC|Borsod-Abauj-Zemplen~BZ|Budapest~BU|Csongr\xe1d~CS|Debrecen~DE|Duna\xfajv\xe1ros~DU|Eger~EG|\xc9rd~ER|Fej\xe9r~FE|Gy\u0151r~GY|Gy\u0151r-Moson-Sopron~GS|Hajd\xfa-Bihar~HB|Heves~HE|H\xf3dmez\u0151v\xe1s\xe1rhely~HV|J\xe1sz-Nagykun-Szolnok~N|Kaposv\xe1r~KV|Kecskem\xe9t~KM|Kom\xe1rom-Esztergom~KE|Miskolc~MI|Nagykanizsa~NK|N\xf3gr\xe1d~NO|Ny\xedregyh\xe1za~NY|P\xe9cs~PS|Pest~PE|Salg\xf3tarj\xe1n~ST|Somogy~SO|Sopron~SN|Szabolcs-\xe1-Bereg~SZ|Szeged~SD|Sz\xe9kesfeh\xe9rv\xe1r~SF|Szeksz\xe1rd~SS|Szolnok~SK|Szombathely~SH|Tatab\xe1nya~TB|Tolna~TO|Vas~VA|Veszpr\xe9m~VE|Veszpr\xe9m (City)~VM|Zala~ZA|Zalaegerszeg~ZE"],["Iceland","IS","Austurland~7|H\xf6fu\xf0borgarsv\xe6\xf0i utan Reykjav\xedkur~1|Nor\xf0urland eystra~6|Nor\xf0urland vestra~5|Su\xf0urland~8|Su\xf0urnes~2|Vestfir\xf0ir~4|Vesturland~3"],["India","IN","Andaman and Nicobar Islands~AN|Andhra Pradesh~AP|Arunachal Pradesh~AR|Assam~AS|Bihar~BR|Chandigarh~CH|Chhattisgarh~CT|Dadra and Nagar Haveli~DN|Daman and Diu~DD|Delhi~DL|Goa~GA|Gujarat~GJ|Haryana~HR|Himachal Pradesh~HP|Jammu and Kashmir~JK|Jharkhand~JH|Karnataka~KA|Kerala~KL|Lakshadweep~LD|Madhya Pradesh~MP|Maharashtra~MH|Manipur~MN|Meghalaya~ML|Mizoram~MZ|Nagaland~NL|Odisha~OR|Puducherry~PY|Punjab~PB|Rajasthan~RJ|Sikkim~WK|Tamil Nadu~TN|Telangana~TG|Tripura~TR|Uttarakhand~UT|Uttar Pradesh~UP|West Bengal~WB"],["Indonesia","ID","Aceh~AC|Bali~BA|Bangka Belitung~BB|Banten~BT|Bengkulu~BE|Gorontalo~GO|Jakarta Raya~JK|Jambi~JA|Jawa Barat~JB|Jawa Tengah~JT|Jawa Timur~JI|Kalimantan Barat~KB|Kalimantan Selatan~KS|Kalimantan Tengah~KT|Kalimantan Timur~KI|Kalimantan Utara~KU|Kepulauan Riau~KR|Lampung~LA|Maluku~MA|Maluku Utara~MU|Nusa Tenggara Barat~NB|Nusa Tenggara Timur~NT|Papua~PA|Papua Barat~PB|Riau~RI|Sulawesi Selatan~SR|Sulawesi Tengah~ST|Sulawesi Tenggara~SG|Sulawesi Utara~SA|Sumatera Barat~SB|Sumatera Selatan~SS|Sumatera Utara~SU|Yogyakarta~YO"],["Iran, Islamic Republic of","IR","Alborz~32|Ardab\u012bl~03|\u0100z\u0304arb\u0101yj\u0101n-e Gharb\u012b~02|\u0100z\u0304arb\u0101yj\u0101n-e Sharq\u012b~01|B\u016bshehr~06|Chah\u0101r Ma\u1e29\u0101l va Bakht\u012b\u0101r\u012b~08|E\u015ffah\u0101n~04|F\u0101rs~14|G\u012bl\u0101n~19|Golest\u0101n~27|Hamad\u0101n~24|Hormozg\u0101n~23|\u012al\u0101m~05|Kerm\u0101n~15|Kerm\u0101nsh\u0101h~17|Khor\u0101s\u0101n-e Jon\u016bb\u012b~29|Khor\u0101s\u0101n-e Ra\u1e95av\u012b~30|Khor\u0101s\u0101n-e Shom\u0101l\u012b~61|Kh\u016bzest\u0101n~10|Kohg\u012bl\u016byeh va Bowyer A\u1e29mad~18|Kordest\u0101n~16|Lorest\u0101n~20|Markazi~22|M\u0101zandar\u0101n~21|Qazv\u012bn~28|Qom~26|Semn\u0101n~12|S\u012bst\u0101n va Bal\u016bchest\u0101n~13|Tehr\u0101n~07|Yazd~25|Zanj\u0101n~11"],["Iraq","IQ","Al Anb\u0101r~AN|Al Ba\u015frah~BA|Al Muthann\xe1~MU|Al Q\u0101dis\u012byah~QA|An Najaf~NA|Arb\u012bl~AR|As Sulaym\u0101n\u012byah~SU|B\u0101bil~BB|Baghd\u0101d~BG|Dohuk~DA|Dh\u012b Q\u0101r~DQ|Diy\u0101l\xe1~DI|Karbal\u0101'~KA|Kirkuk~KI|Mays\u0101n~MA|N\u012bnaw\xe1~NI|\u015eal\u0101\u1e29 ad D\u012bn~SD|W\u0101si\u0163~WA"],["Ireland","IE","Carlow~CW|Cavan~CN|Clare~CE|Cork~CO|Donegal~DL|Dublin~D|Galway~G|Kerry~KY|Kildare~KE|Kilkenny~KK|Laois~LS|Leitrim~LM|Limerick~LK|Longford~LD|Louth~LH|Mayo~MO|Meath~MH|Monaghan~MN|Offaly~OY|Roscommon~RN|Sligo~SO|Tipperary~TA|Waterford~WD|Westmeath~WH|Wexford~WX|Wicklow~WW"],["Isle of Man","IM","Isle of Man~undefined"],["Israel","IL","HaDarom~D|HaMerkaz~M|HaTsafon~Z|H\u0331efa~HA|Tel-Aviv~TA|Yerushalayim~JM"],["Italy","IT","Abruzzo~65|Basilicata~77|Calabria~78|Campania~72|Emilia-Romagna~45|Friuli-Venezia Giulia~36|Lazio~62|Liguria~42|Lombardia~25|Marche~57|Molise~67|Piemonte~21|Puglia~75|Sardegna~88|Sicilia~82|Toscana~52|Trentino-Alto Adige~32|Umbria~55|Valle d'Aosta~23|Veneto~34"],["Jamaica","JM","Clarendon~13|Hanover~09|Kingston~01|Manchester~12|Portland~04|Saint Andrew~02|Saint Ann~06|Saint Catherine~14|Saint Elizabeth~11|Saint James~08|Saint Mary~05|Saint Thomas~03|Trelawny~07|Westmoreland~10"],["Japan","JP","Aichi~23|Akita~05|Aomori~02|Chiba~12|Ehime~38|Fukui~18|Fukuoka~40|Fukushima~07|Gifu~21|Gunma~10|Hiroshima~34|Hokkaido~01|Hyogo~28|Ibaraki~08|Ishikawa~17|Iwate~03|Kagawa~37|Kagoshima~46|Kanagawa~14|Kochi~39|Kumamoto~43|Kyoto~26|Mie~24|Miyagi~04|Miyazaki~45|Nagano~20|Nagasaki~42|Nara~29|Niigata~15|Oita~44|Okayama~33|Okinawa~47|Osaka~27|Saga~41|Saitama~11|Shiga~25|Shimane~32|Shizuoka~22|Tochigi~09|Tokushima~36|Tokyo~13|Tottori~31|Toyama~16|Wakayama~30|Yamagata~06|Yamaguchi~35|Yamanashi~19"],["Jersey","JE","Jersey~undefined"],["Jordan","JO","\u2018Ajl\u016bn~AJ|Al 'Aqabah~AQ|Al Balq\u0101\u2019~BA|Al Karak~KA|Al Mafraq~MA|Al \u2018A\u0305\u015fimah~AM|A\u0163 \u0162af\u012blah~AT|Az Zarq\u0101\u2019~AZ|Irbid~IR|Jarash~JA|Ma\u2018\u0101n~MN|M\u0101dab\u0101~MD"],["Kazakhstan","KZ","Almaty~ALA|Aqmola~AKM|Aqtobe~AKT|Astana~AST|Atyrau~ATY|Batys Qazaqstan~ZAP|Bayqongyr~undefined|Mangghystau~MAN|Ongtustik Qazaqstan~YUZ|Pavlodar~PAV|Qaraghandy~KAR|Qostanay~KUS|Qyzylorda~KZY|Shyghys Qazaqstan~VOS|Soltustik Qazaqstan~SEV|Zhambyl~ZHA"],["Kenya","KE","Baringo~01|Bomet~02|Bungoma~03|Busia~04|Eleyo/Marakwet~05|Embu~06|Garissa~07|Homa Bay~08|Isiolo~09|Kajiado~10|Kakamega~11|Kericho~12|Kiambu~13|Kilifi~14|Kirinyaga~15|Kisii~16|Kisumu~17|Kitui~18|Kwale~19|Laikipia~20|Lamu~21|Machakos~22|Makueni~23|Mandera~24|Marsabit~25|Meru~26|Migori~27|Mombasa~28|Murang'a~29|Nairobi City~30|Nakuru~31|Nandi~32|Narok~33|Nyamira~34|Nyandarua~35|Nyeri~36|Samburu~37|Siaya~38|Taita/Taveta~39|Tana River~40|Tharaka-Nithi~41|Trans Nzoia~42|Turkana~43|Uasin Gishu~44|Vihiga~45|Wajir~46|West Pokot~47"],["Kiribati","KI","Abaiang~undefined|Abemama~undefined|Aranuka~undefined|Arorae~undefined|Banaba~undefined|Beru~undefined|Butaritari~undefined|Central Gilberts~undefined|Gilbert Islands~G|Kanton~undefined|Kiritimati~undefined|Kuria~undefined|Line Islands~L|Maiana~undefined|Makin~undefined|Marakei~undefined|Nikunau~undefined|Nonouti~undefined|Northern Gilberts~undefined|Onotoa~undefined|Phoenix Islands~P|Southern Gilberts~undefined|Tabiteuea~undefined|Tabuaeran~undefined|Tamana~undefined|Tarawa~undefined|Teraina~undefined"],["Korea, Democratic People's Republic of","KP","Chagang-do (Chagang Province)~04|Hamgyong-bukto (North Hamgyong Province)~09|Hamgyong-namdo (South Hamgyong Province)~08|Hwanghae-bukto (North Hwanghae Province)~06|Hwanghae-namdo (South Hwanghae Province)~05|Kangwon-do (Kangwon Province)~07|Nas\u014fn (Najin-S\u014fnbong)~13|P'yongan-bukto (North P'yongan Province)~03|P'yongan-namdo (South P'yongan Province)~02|P'yongyang-si (P'yongyang City)~01|Yanggang-do (Yanggang Province)~10"],["Korea, Republic of","KR","Ch'ungch'ongbuk-do~43|Ch'ungch'ongnam-do~44|Cheju-do~49|Chollabuk-do~45|Chollanam-do~46|Inch'on-Kwangyokhi~28|Kang-won-do~42|Kwangju-Kwangyokshi~28|Kyonggi-do~41|Kyongsangbuk-do~47|Kyongsangnam-do~48|Pusan-Kwangyokshi~26|Seoul-T'ukpyolshi~11|Sejong~50|Taegu-Kwangyokshi~27|Taejon-Kwangyokshi~30|Ulsan-Kwangyokshi~31"],["Kuwait","KW","Al A\u1e29madi~AH|Al Farw\u0101n\u012byah~FA|Al Jahr\u0101\u2019~JA|Al \u2018\u0100\u015fimah~KU|\u1e28awall\u012b~HA|Mub\u0101rak al Kabir~MU"],["Kyrgyzstan","KG","Batken Oblasty~B|Bishkek Shaary~GB|Chuy Oblasty (Bishkek)~C|Jalal-Abad Oblasty~J|Naryn Oblasty~N|Osh Oblasty~O|Talas Oblasty~T|Ysyk-Kol Oblasty (Karakol)~Y"],["Laos","LA","Attapu~AT|Bok\xe8o~BK|Bolikhamxai~BL|Champasak~CH|Houaphan~HO|Khammouan~KH|Louang Namtha~LM|Louangphabang~LP|Oud\xf4mxai~OU|Ph\xf4ngsali~PH|Salavan~SL|Savannakh\xe9t~SV|Vientiane~VI|Xaignabouli~XA|X\xe9kong~XE|Xaisomboun~XS|Xiangkhouang~XI"],["Latvia","LV","Aglona~001|Aizkraukle~002|Aizpute~003|Akn\u012bste~004|Aloja~005|Alsunga~06|Al\u016bksne~007|Amata~008|Ape~009|Auce~010|\u0100da\u017ei~011|Bab\u012bte~012|Baldone~013|Baltinava~014|Balvi~015|Bauska~016|Bever\u012bna~017|Broc\u0113ni~018|Burtnieki~019|Carnikava~020|Cesvaine~021|C\u0113sis~022|Cibla~023|Dagda~024|Daugavpils~025|Daugavpils (City)~DGV|Dobele~026|Dundaga~027|Durbe~028|Engure~029|\u0112rg\u013ci~030|Garkalne~031|Grobi\u0146a~032|Gulbene~033|Iecava~034|Ik\u0161\u0137ile~035|Il\u016bkste~036|In\u010dukalns~037|Jaunjelgava~038|Jaunpiebalga~039|Jaunpils~040|Jelgava~041|Jelgava (City)~JEL|J\u0113kabpils~042|J\u0113kabpils (City)~JKB|J\u016brmala (City)~JUR|Kandava~043|K\u0101rsava~044|Koc\u0113ni~045|Koknese~046|Kr\u0101slava~047|Krimulda~048|Krustpils~049|Kuld\u012bga~050|\u0136egums~051|\u0136ekava~052|Lielv\u0101rde~053|Liep\u0101ja~LPX|Limba\u017ei~054|L\u012bgatne~055|L\u012bv\u0101ni~056|Lub\u0101na~057|Ludza~058|Madona~059|Mazsalaca~060|M\u0101lpils~061|M\u0101rupe~062|M\u0113rsrags~063|Nauk\u0161\u0113ni~064|Nereta~065|N\u012bca~066|Ogre~067|Olaine~068|Ozolnieki~069|P\u0101rgauja~070|P\u0101vilosta~071|P\u013cavi\u0146as~072|Prei\u013ci~073|Priekule~074|Prieku\u013ci~075|Rauna~076|R\u0113zekne~077|R\u0113zekne (City)~REZ|Riebi\u0146i~078|R\u012bga~RIX|Roja~079|Ropa\u017ei~080|Rucava~081|Rug\u0101ji~082|Rund\u0101le~083|R\u016bjiena~084|Sala~085|Salacgr\u012bva~086|Salaspils~087|Saldus~088|Saulkrasti~089|S\u0113ja~090|Sigulda~091|Skr\u012bveri~092|Skrunda~093|Smiltene~094|Stopi\u0146i~095|Stren\u010di~096|Talsi~097|T\u0113rvete~098|Tukums~099|Vai\u0146ode~100|Valka~101|Valmiera~VMR|Varak\u013c\u0101ni~102|V\u0101rkava~103|Vecpiebalga~104|Vecumnieki~105|Ventspils~106|Ventspils (City)~VEN|Vies\u012bte~107|Vi\u013caka~108|Vi\u013c\u0101ni~109|Zilupe~110"],["Lebanon","LB","Aakk\xe2r~AK|Baalbelk-Hermel~BH|B\xe9qaa~BI|Beyrouth~BA|Liban-Nord~AS|Liban-Sud~JA|Mont-Liban~JL|Nabat\xeey\xe9~NA"],["Lesotho","LS","Berea~D|Butha-Buthe~B|Leribe~C|Mafeteng~E|Maseru~A|Mohales Hoek~F|Mokhotlong~J|Qacha's Nek~H|Quthing~G|Thaba-Tseka~K"],["Liberia","LR","Bomi~BM|Bong~BG|Gbarpolu~GP|Grand Bassa~GB|Grand Cape Mount~CM|Grand Gedeh~GG|Grand Kru~GK|Lofa~LO|Margibi~MG|Maryland~MY|Montserrado~MO|Nimba~NI|River Cess~RI|River Geee~RG|Sinoe~SI"],["Libya","LY","Al Bu\u0163n\u0101n~BU|Al Jabal al Akh\u1e11ar~JA|Al Jabal al Gharb\u012b~JG|Al Jaf\u0101rah~JA|Al Jufrah~JU|Al Kufrah~FK|Al Marj~MJ|Al Marquab~MB|Al W\u0101\u1e29\u0101t~WA|An Nuqa\u0163 al Khams~NQ|Az Z\u0101wiyah~ZA|Bangh\u0101z\u012b~BA|Darnah~DR|Gh\u0101t~GH|Mi\u015fr\u0101tah~MI|Murzuq~MQ|N\u0101l\u016bt~NL|Sabh\u0101~SB|Surt~SR|\u0162ar\u0101bulus~TB|Yafran~WD|W\u0101d\u012b ash Sh\u0101\u0163i\u02be~WS"],["Liechtenstein","LI","Balzers~01|Eschen~02|Gamprin~03|Mauren~04|Planken~05|Ruggell~06|Schaan~07|Schellenberg~08|Triesen~09|Triesenberg~10|Vaduz~11"],["Lithuania","LT","Alytaus~AL|Kauno~KU|Klaip\u0117dos~KL|Marijampol\u0117s~MR|Panev\u0117\u017eio~PN|\u0160iauli\u0173~SA|Taurag\u0117s~TA|Tel\u0161i\u0173~TE|Utenos~UT|Vilniaus~VL"],["Luxembourg","LU","Capellen~CA|Clevaux~CL|Diekirch~DI|Echternach~EC|Esch-sur-Alzette~ES|Grevenmacher~GR|Luxembourg~LU|Mersch~ME|Redange~RD|Remich~RM|Vianden~VD|Wiltz~WI"],["Macao","MO","Macao~undefined"],["Macedonia, Republic of","MK","Ara\u010dinovo~02|Berovo~03|Bitola~04|Bogdanci~05|Bogovinje~06|Bosilovo~07|Brvenica~08|Centar \u017dupa~78|\u010ca\u0161ka~08|\u010ce\u0161inovo-Oble\u0161evo~81|\u010cu\u010der Sandevo~82|Debar~21|Debarca~22|Del\u010devo~23|Demir Hisar~25|Demir Kapija~24|Doran~26|Dolneni~27|Gevgelija~18|Gostivar~19|Gradsko~20|Ilinden~34|Jegunovce~35|Karbinci~37|Kavadarci~36|Ki\u010devo~40|Ko\u010dani~42|Kon\u010de~41|Kratovo~43|Kriva Palanka~44|Krivoga\u0161tani~45|Kru\u0161evo~46|Kumanovo~47|Lipkovo~48|Lozovo~49|Makedonska Kamenica~51|Makedonski Brod~52|Mavrovo i Rostu\u0161a~50|Mogila~53|Negotino~54|Novaci~55|Novo Selo~56|Ohrid~58|Peh\u010devo~60|Petrovec~59|Plasnica~61|Prilep~62|Probi\u0161tip~63|Radovi\u0161~|Rankovce~65|Resen~66|Rosoman~67|Skopje~85|Sopi\u0161te~70|Staro Nagori\u010dane~71|Struga~72|Strumica~73|Studeni\u010dani~74|Sveti Nikole~69|\u0160tip~83|Tearce~75|Tetovo~76|Valandovo~10|Vasilevo~11|Veles~13|Vev\u010dani~12|Vinica~14|Vrap\u010di\u0161te~16|Zelenikovo~32|Zrnovci~33|\u017delino~30"],["Madagascar","MG","Antananarivo~T|Antsiranana~D|Fianarantsoa~F|Mahajanga~M|Toamasina~A|Toliara~U"],["Malawi","MW","Balaka~BA|Blantyre~BL|Chikwawa~CK|Chiradzulu~CR|Chitipa~CT|Dedza~DE|Dowa~DO|Karonga~KR|Kasungu~KS|Likoma~LK|Lilongwe~LI|Machinga~MH|Mangochi~MG|Mchinji~MC|Mulanje~MU|Mwanza~MW|Mzimba~MZ|Nkhata Bay~NE|Nkhotakota~NB|Nsanje~NS|Ntcheu~NU|Ntchisi~NI|Phalombe~PH|Rumphi~RU|Salima~SA|Thyolo~TH|Zomba~ZO"],["Malaysia","MY","Johor~01|Kedah~02|Kelantan~03|Melaka~04|Negeri Sembilan~05|Pahang~06|Perak~08|Perlis~09|Pulau Pinang~07|Sabah~12|Sarawak~13|Selangor~10|Terengganu~11|Wilayah Persekutuan (Kuala Lumpur)~14|Wilayah Persekutuan (Labuan)~15|Wilayah Persekutuan (Putrajaya)~16"],["Maldives","MV","Alifu Alifu~02|Alifu Dhaalu~00|Baa~20|Dhaalu~17|Faafu~14|Gaafu Alifu~27|Gaafu Dhaalu~28|Gnaviyani~29|Haa Alifu~07|Haa Dhaalu~23|Kaafu~29|Laamu~05|Lhaviyani~03|Mal\xe9~MLE|Meemu~12|Noonu~25|Raa~13|Seenu~01|Shaviyani~24|Thaa~08|Vaavu~04"],["Mali","ML","Bamako~BKO|Gao~7|Kayes~1|Kidal~8|Koulikoro~2|Mopti~5|Segou~4|Sikasso~3|Tombouctou~6"],["Malta","MT","Attard~01|Balzan~02|Birgu~03|Birkirkara~04|Bir\u017cebbu\u0121a~05|Bormla~06|Dingli~07|Fgura~08|Floriana~09|Fontana~10|Guda~11|G\u017cira~12|G\u0127ajnsielem~13|G\u0127arb~14|G\u0127arg\u0127ur~15|G\u0127asri~16|G\u0127axaq~17|\u0126amrun~18|Iklin~19|Isla~20|Kalkara~21|Ker\u010bem~22|Kirkop~23|Lija~24|Luqa~25|Marsa~26|Marsaskala~27|Marsaxlokk~28|Mdina~29|Mellie\u0127a~30|M\u0121arr~31|Mosta~32|Mqabba~33|Msida~34|Mtarfa~35|Munxar~36|Nadur~37|Naxxar~38|Paola~39|Pembroke~40|Piet\xe0~41|Qala~42|Qormi~43|Qrendi~44|Rabat G\u0127awdex~45|Rabat Malta~46|Safi~47|San \u0120iljan~48|San \u0120wann~49|San Lawrenz~50|San Pawl il-Ba\u0127ar~51|Sannat~52|Santa Lu\u010bija~53|Santa Venera~54|Si\u0121\u0121iewi~55|Sliema~56|Swieqi~57|Tai Xbiex~58|Tarzien~59|Valletta~60|Xag\u0127ra~61|Xewkija~62|Xg\u0127ajra~63|\u017babbar~64|\u017bebbu\u0121 G\u0127awde~65|\u017bebbu\u0121 Malta~66|\u017bejtun~67|\u017burrieq~68"],["Marshall Islands","MH","Ailinglaplap~ALL|Ailuk~ALK|Arno~ARN|Aur~AUR|Bikini and Kili~KIL|Ebon~EBO|Jabat~JAB|Jaluit~JAL|Kwajalein~KWA|Lae~LAE|Lib~LIB|Likiep~LIK|Majuro~MAJ|Maloelap~MAL|Mejit~MEJ|Namdrik~NMK|Namu~NMU|Rongelap~RON|Ujae~UJA|Utrik~UTI|Wotho~WTH|Wotje~WTJ"],["Martinique","MQ","Martinique~undefined"],["Mauritania","MR","Adrar~07|Assaba~03|Brakna~05|Dakhlet Nouadhibou~08|Gorgol~04|Guidimaka~10|Hodh Ech Chargui~01|Hodh El Gharbi~02|Inchiri~12|Nouakchott Nord~14|Nouakchott Ouest~13|Nouakchott Sud~15|Tagant~09|Tiris Zemmour~11|Trarza~06"],["Mauritius","MU","Agalega Islands~AG|Beau Bassin-Rose Hill~BR|Black River~BL|Cargados Carajos Shoals~CC|Curepipe~CU|Flacq~FL|Grand Port~GP|Moka~MO|Pamplemousses~PA|Plaines Wilhems~PW|Port Louis (City)~PU|Port Louis~PL|Riviere du Rempart~RR|Rodrigues Island~RO|Savanne~SA|Vacoas-Phoenix~CP"],["Mayotte","YT","Dzaoudzi~01|Pamandzi~02|Mamoudzou~03|Dembeni~04|Bandr\xe9l\xe9~05|Kani-K\xe9li~06|Bou\xe9ni~07|Chirongui~08|Sada~09|Ouangani~10|Chiconi~11|Tsingoni~12|M'Tsangamouji~13|Acoua~14|Mtsamboro~15|Bandraboua~16|Koungou~17"],["Mexico","MX","Aguascalientes~AGU|Baja California~BCN|Baja California Sur~BCS|Campeche~CAM|Ciudad de M\xe9xico~DIF|Chiapas~CHP|Chihuahua~CHH|Coahuila de Zaragoza~COA|Colima~COL|Durango~DUR|Estado de M\xe9xico~MEX|Guanajuato~GUA|Guerrero~GRO|Hidalgo~HID|Jalisco~JAL|Michoac\xe1n de Ocampo~MIC|Morelos~MOR|Nayarit~NAY|Nuevo Le\xf3n~NLE|Oaxaca~OAX|Puebla~PUE|Quer\xe9taro de Arteaga~QUE|Quintana Roo~ROO|San Luis Potos\xed~SLP|Sinaloa~SIN|Sonora~SON|Tabasco~TAB|Tamaulipas~TAM|Tlaxcala~TLA|Veracruz~VER|Yucat\xe1n~YUC|Zacatecas~ZAC"],["Micronesia, Federated States of","FM","Chuuk (Truk)~TRK|Kosrae~KSA|Pohnpei~PNI|Yap~YAP"],["Moldova","MD","Aenii Noi~AN|Basarabeasca~BS|B\u0103l\u021bi~BA|Bender~BD|Briceni~BR|Cahul~CA|Cantemir~CT|C\u0103l\u0103ra\u0219i~CL|C\u0103u\u0219eni~CS|Chi\u0219in\u0103u~CU|Cimi\u0219lia~CM|Criuleni~CR|Dondu\u0219eni~DO|Drochia~DR|Dub\u0103sari~DU|Edine\u021b~ED|F\u0103le\u0219ti~FA|Flore\u0219ti~FL|G\u0103g\u0103uzia~GA|Glodeni~GL|H\xeence\u0219ti~HI|Ialoveni~IA|Leova~LE|Nisporeni~NI|Ocni\u021ba~OC|Orhei~OR|Rezina~RE|R\xee\u0219cani~RI|S\xeengerei~SI|Soroca~SO|St\xeenga Nistrului~SN|Str\u0103\u0219eni~ST|\u0218old\u0103ne\u0219ti~SD|\u0218tefan Vod\u0103~SV|Taraclia~TA|Telene\u0219ti~TE|Ungheni~UN"],["Monaco","MC","Colle~CL|Condamine~CO|Fontvieille~FO|Gare~GA|Jardin Exotique~JE|Larvotto~LA|Malbousquet~MA|Monaco-Ville~MO|Moneghetti~MG|Monte-Carlo~MC|Moulins~MU|Port-Hercule~PH|Saint-Roman~SR|Sainte-D\xe9vote~SD|Source~SO|Sp\xe9lugues~SP|Vallon de la Rousse~VR"],["Mongolia","MN","Arhangay~073|Bayan-Olgiy~071|Bayanhongor~069|Bulgan~067|Darhan~037|Dornod~061|Dornogovi~063|Dundgovi~059|Dzavhan~065|Govi-Altay~065|Govi-Sumber~064|Hovd~043|Hovsgol~041|Omnogovi~053|Ovorhangay~055|Selenge~049|Suhbaatar~051|Tov~047|Ulaanbaatar~1|Uvs~046"],["Montenegro","ME","Andrijevica~01|Bar~02|Berane~03|Bijelo Polje~04|Budva~05|Cetinje~06|Danilovgrad~07|Gusinje~22|Herceg Novi~08|Kola\u0161in~09|Kotor~10|Mojkovac~11|Nik\u0161i\u0107~12|Petnica~23|Plav~13|Plu\u017eine~14|Pljevlja~15|Podgorica~16|Ro\u017eaje~17|\u0160avnik~18|Tivat~19|Ulcinj~20|\u017dabljak~21"],["Montserrat","MS","Saint Anthony~undefined|Saint Georges~undefined|Saint Peter's~undefined"],["Morocco","MA","Chaouia-Ouardigha~09|Doukhala-Abda~10|F\xe8s-Boulemane~05|Gharb-Chrarda-Beni Hssen~02|Grand Casablanca~08|Guelmim-Es Semara~14|La\xe2youne-Boujdour-Sakia el Hamra~15|Marrakech-Tensift-Al Haouz~11|Mekn\xe8s-Tafilalet~06|Oriental~04|Oued ed Dahab-Lagouira~16|Souss-Massa-Dr\xe2a~13|Tadla-Azilal~12|Tanger-T\xe9touan~01|Taza-Al Hoceima-Taounate~03"],["Mozambique","MZ","Cabo Delgado~P|Gaza~G|Inhambane~I|Manica~B|Maputo~L|Maputo (City)~MPM|Nampula~N|Niassa~A|Sofala~S|Tete~T|Zambezia~Q"],["Myanmar","MM","Ayeyarwady~07|Bago~02|Chin~14|Kachin~11|Kayah~12|Kayin~13|Magway~03|Mandalay~04|Mon~15|Nay Pyi Taw~18|Rakhine~16|Sagaing~01|Shan~17|Tanintharyi~05|Yangon~06"],["Namibia","NA","Erongo~ER|Hardap~HA|Kavango East~KE|Kavango West~KW|Karas~KA|Khomas~KH|Kunene~KU|Ohangwena~OW|Omaheke~OH|Omusati~OS|Oshana~ON|Oshikoto~OT|Otjozondjupa~OD|Zambezi~CA"],["Nauru","NR","Aiwo~01|Anabar~02|Anetan~03|Anibare~04|Baiti~05|Boe~06|Buada~07|Denigomodu~08|Ewa~09|Ijuw~10|Meneng~11|Nibok~12|Uaboe~13|Yaren~14"],["Nepal","NP","Bagmati~BA|Bheri~BH|Dhawalagiri~DH|Gandaki~GA|Janakpur~JA|Karnali~KA|Kosi~KO|Lumbini~LU|Mahakali~MA|Mechi~ME|Narayani~NA|Rapti~RA|Sagarmatha~SA|Seti~SE"],["Netherlands","NL","Drenthe~DR|Flevoland~FL|Friesland~FR|Gelderland~GE|Groningen~GR|Limburg~LI|Noord-Brabant~NB|Noord-Holland~NH|Overijssel~OV|Utrecht~UT|Zeeland~ZE|Zuid-Holland~ZH"],["New Caledonia","NC","Iles Loyaute~undefined|Nord~undefined|Sud~undefined"],["New Zealand","NZ","Auckland~AUK|Bay of Plenty~BOP|Canterbury~CAN|Gisborne~GIS|Hawke's Bay~HKB|Marlborough~MBH|Manawatu-Wanganui~MWT|Northland~NTL|Nelson~NSN|Otago~OTA|Southland~STL|Taranaki~TKI|Tasman~TAS|Waikato~WKO|Wellington~WGN|West Coast~WTC|Chatham Islands Territory~CIT"],["Nicaragua","NI","Boaco~BO|Carazo~CA|Chinandega~CI|Chontales~CO|Estel\xed~ES|Granada~GR|Jinotega~JI|Le\xf3n~LE|Madriz~MD|Managua~MN|Masaya~MS|Matagalpa~MT|Nueva Segovia~NS|R\xedo San Juan~SJ|Rivas~RI|Atl\xe1ntico Norte~AN|Atl\xe1ntico Sur~AS"],["Niger","NE","Agadez~1|Diffa~2|Dosso~3|Maradi~4|Niamey~8|Tahoua~5|Tillab\xe9ri~6|Zinder~7"],["Nigeria","NG","Abia~AB|Abuja Federal Capital Territory~FC|Adamawa~AD|Akwa Ibom~AK|Anambra~AN|Bauchi~BA|Bayelsa~BY|Benue~BE|Borno~BO|Cross River~CR|Delta~DE|Ebonyi~EB|Edo~ED|Ekiti~EK|Enugu~EN|Gombe~GO|Imo~IM|Jigawa~JI|Kaduna~KD|Kano~KN|Katsina~KT|Kebbi~KE|Kogi~KO|Kwara~KW|Lagos~LA|Nassarawa~NA|Niger~NI|Ogun~OG|Ondo~ON|Osun~OS|Oyo~OY|Plateau~PL|Rivers~RI|Sokoto~SO|Taraba~TA|Yobe~YO|Zamfara~ZA"],["Niue","NU","Niue~undefined"],["Norfolk Island","NF","Norfolk Island~undefined"],["Northern Mariana Islands","MP","Northern Islands~undefined|Rota~undefined|Saipan~undefined|Tinian~undefined"],["Norway","NO","Akershus~02|Aust-Agder~09|Buskerud~06|Finnmark~20|Hedmark~04|Hordaland~12|M\xf8re og Romsdal~15|Nordland~18|Nord-Tr\xf8ndelag~17|Oppland~05|Oslo~03|Rogaland~11|Sogn og Fjordane~14|S\xf8r-Tr\xf8ndelag~16|Telemark~08|Troms~19|Vest-Agder~10|Vestfold~07|\xd8stfold~01|Jan Mayen~22|Svalbard~21"],["Oman","OM","Ad Dakhiliyah~DA|Al Buraymi~BU|Al Wusta~WU|Az Zahirah~ZA|Janub al Batinah~BS|Janub ash Sharqiyah~SS|Masqat~MA|Musandam~MU|Shamal al Batinah~BJ|Shamal ash Sharqiyah~SJ|Zufar~ZU"],["Pakistan","PK","\u0100z\u0101d Kashm\u012br~JK|Bal\u014dchist\u0101n~BA|Gilgit-Baltist\u0101n~GB|Isl\u0101m\u0101b\u0101d~IS|Kha\u012bbar Pakht\u016bnkhw\u0101s~KP|Punj\u0101b~PB|Sindh~SD|Federally Administered Tribal Areas~TA"],["Palau","PW","Aimeliik~002|Airai~004|Angaur~010|Hatobohei~050|Kayangel~100|Koror~150|Melekeok~212|Ngaraard~214|Ngarchelong~218|Ngardmau~222|Ngatpang~224|Ngchesar~226|Ngeremlengui~227|Ngiwal~228|Peleliu~350|Sonsoral~350"],["Palestine, State of","PS","Ak Khal\u012bl~HBN|Al Quds~JEM|Ar\u012b\u1e29\u0101 wal Aghw\u0101r~JRH|Bayt La\u1e29m~BTH|Dayr al Bala\u1e29~DEB|Ghazzah~GZA|Jan\u012bn~JEN|Kh\u0101n Y\u016bnis~KYS|N\u0101blus~NBS|Qalq\u012byah~QQA|Rafa\u1e29~RFH|R\u0101m All\u0101h wal B\u012brah~RBH|Salf\u012bt~SLT|Sham\u0101l Ghazzah~NGZ|\u0162\u016bb\u0101s~TBS|\u0162\u016blkarm~TKM"],["Panama","PA","Bocas del Toro~1|Chiriqu\xed~4|Cocl\xe9~2|Col\xf3n~3|Dari\xe9n~5|Ember\xe1~EM|Herrera~6|Kuna Yala~KY|Los Santos~7|Ng\xe4be-Bugl\xe9~NB|Panam\xe1~8|Panam\xe1 Oeste~10|Veraguas~9"],["Papua New Guinea","PG","Bougainville~NSB|Central~CPM|Chimbu~CPK|East New Britain~EBR|East Sepik~ESW|Eastern Highlands~EHG|Enga~EPW|Gulf~GPK|Hela~HLA|Jiwaka~JWK|Madang~MOM|Manus~MRL|Milne Bay~MBA|Morobe~MPL|Port Moresby~NCD|New Ireland~NIK|Northern~NPP|Southern Highlands~SHM|West New Britain~WBK|West Sepik~SAN|Western~WPD|Western Highlands~WHM"],["Paraguay","PY","Alto Paraguay~16|Alto Parana~10|Amambay~13|Asuncion~ASU|Caaguazu~5|Caazapa~6|Canindeyu~14|Central~11|Concepcion~1|Cordillera~3|Guaira~4|Itapua~7|Misiones~8|Neembucu~12|Paraguari~9|Presidente Hayes~15|San Pedro~2"],["Peru","PE","Amazonas~AMA|Ancash~ANC|Apurimac~APU|Arequipa~ARE|Ayacucho~AYA|Cajamarca~CAJ|Callao~CAL|Cusco~CUS|Huancavelica~HUV|Huanuco~HUC|Ica~ICA|Junin~JUN|La Libertad~LAL|Lambayeque~LAM|Lima~LIM|Loreto~LOR|Madre de Dios~MDD|Moquegua~MOQ|Municipalidad Metropolitana de Lima~LMA|Pasco~PAS|Piura~PIU|Puno~PUN|San Martin~SAM|Tacna~TAC|Tumbes~TUM|Ucayali~UCA"],["Philippines","PH","Abra~ABR|Agusan del Norte~AGN|Agusan del Sur~AGS|Aklan~AKL|Albay~ALB|Antique~ANT|Apayao~APA|Aurora~AUR|Basilan~BAS|Bataan~BAN|Batanes~BTN|Batangas~BTG|Benguet~BEN|Biliran~BIL|Bohol~BOH|Bukidnon~BUK|Bulacan~BUL|Cagayan~CAG|Camarines Norte~CAN|Camarines Sur~CAS|Camiguin~CAM|Capiz~CAP|Catanduanes~CAT|Cavite~CAV|Cebu~CEB|Compostela~COM|Cotabato~NCO|Davao del Norte~DAV|Davao del Sur~DAS|Davao Occidental~DVO|Davao Oriental~DAO|Dinagat Islands~DIN|Eastern Samar~EAS|Guimaras~GUI|Ifugao~IFU|Ilocos Norte~ILN|Ilocos Sur~ILS|Iloilo~ILI|Isabela~ISA|Kalinga~KAL|La Union~LUN|Laguna~LAG|Lanao del Norte~LAN|Lanao del Sur~LAS|Leyte~LEY|Maguindanao~MAG|Masbate~MAS|Metro Manila~00|Mindoro Occidental~MDC|Mindoro Oriental~MDR|Misamis Occidental~MSC|Misamis Oriental~MSR|Mountain Province~MOU|Negros Occidental~NEC|Negros Oriental~NER|Northern Samar~NSA|Nueva Ecija~NUE|Nueva Vizcaya~NUV|Palawan~PLW|Pampanga~PAM|Pangasinan~PAN|Quezon~QUE|Quirino~QUI|Rizal~RIZ|Romblon~ROM|Samar~WSA|Sarangani~SAR|Siquijor~SIG|Sorsogon~SOR|Southern Leyte~SLE|Sultan Kudarat~AUK|Sulu~SLU|Surigao del Norte~SUN|Surigao del Sur~SUR|Tarlac~TAR|Tawi-Tawi~TAW|Zambales~ZMB|Zamboanga del Norte~ZAN|Zamboanga del Sur~ZAS|Zamboanga Sibugay~ZSI"],["Pitcairn","PN","Pitcairn Islands~undefined"],["Poland","PL","Dolno\u015bl\u0105skie~DS|Kujawsko-pomorskie~KP|\u0141\xf3dzkie~LD|Lubelskie~LU|Lubuskie~LB|Ma\u0142opolskie~MA|Mazowieckie~MZ|Opolskie~OP|Podkarpackie~PK|Podlaskie~PD|Pomorskie~PM|\u015al\u0105skie~SL|\u015awi\u0119tokrzyskie~SK|Warmi\u0144sko-mazurskie~WN|Wielkopolskie~WP|Zachodniopomorskie~ZP"],["Portugal","PT","A\xe7ores~20|Aveiro~01|Beja~02|Braga~03|Bragan\xe7a~04|Castelo Branco~05|Coimbra~06|\xc9vora~07|Faro~08|Guarda~09|Leiria~10|Lisboa~11|Madeira~30|Portalegre~12|Porto~13|Santar\xe9m~14|Set\xfabal~15|Viana do Castelo~16|Vila Real~17|Viseu~18"],["Puerto Rico","PR","Adjuntas~undefined|Aguada~undefined|Aguadilla~undefined|Aguas Buenas~undefined|Aibonito~undefined|Anasco~undefined|Arecibo~undefined|Arroyo~undefined|Barceloneta~undefined|Barranquitas~undefined|Bayamon~undefined|Cabo Rojo~undefined|Caguas~undefined|Camuy~undefined|Canovanas~undefined|Carolina~undefined|Cat~undefined|Ceiba~undefined|Ciales~undefined|Cidra~undefined|Coamo~undefined|Comerio~undefined|Corozal~undefined|Culebra~undefined|Dorado~undefined|Fajardo~undefined|Florida~undefined|Guanica~undefined|Guayama~undefined|Guayanilla~undefined|Guaynabo~undefined|Gurabo~undefined|Hatillo~undefined|Hormigueros~undefined|Humacao~undefined|Isabe~undefined|Juana Diaz~undefined|Juncos~undefined|Lajas~undefined|Lares~undefined|Las Marias~undefined|Las oiza~undefined|Luquillo~undefined|Manati~undefined|Maricao~undefined|Maunabo~undefined|Mayaguez~undefined|Moca~undefined|Morovis~undefined|Naguabo~undefined|Naranjito~undefined|Orocovis~undefined|Patillas~undefined|Penuelas~undefined|Ponce~undefined|Quebradillas~undefined|Rincon~undefined|Rio Grande~undefined|Sabana linas~undefined|San German~undefined|San Juan~undefined|San Lorenzo~undefined|San Sebastian~undefined|Santa Isabel~undefined|Toa Alta~undefined|Toa Baja~undefined|Trujillo Alto~undefined|Utuado~undefined|Vega Alta~undefined|Vega ues~undefined|Villalba~undefined|Yabucoa~undefined|Yauco~undefined"],["Qatar","QA","Ad Daw\u1e29ah~DA|Al Khawr wa adh Dhakh\u012brah~KH|Al Wakrah~WA|Ar Rayy\u0101n~RA|Ash Sham\u0101l~MS|Az\u0327 Za\u0327`\u0101yin~ZA|Umm \u015eal\u0101l~US"],["R\xe9union","RE","R\xe9union~undefined"],["Romania","RO","Alba~AB|Arad~AR|Arges~AG|Bacau~BC|Bihor~BH|Bistrita-Nasaud~BN|Botosani~BT|Braila~BR|Brasov~BV|Bucuresti~B|Buzau~BZ|Calarasi~CL|Caras-Severin~CS|Cluj~CJ|Constanta~CT|Covasna~CV|Dambovita~DB|Dolj~DJ|Galati~GL|Giurgiu~GR|Gorj~GJ|Harghita~HR|Hunedoara~HD|Ialomita~IL|Iasi~IS|Maramures~MM|Mehedinti~MH|Mures~MS|Neamt~NT|Olt~OT|Prahova~PH|Salaj~SJ|Satu Mare~SM|Sibiu~SB|Suceava~SV|Teleorman~TR|Timis~TM|Tulcea~TL|Valcea~VL|Vaslui~VS|Vrancea~VN"],["Russian Federation","RU","Republic of Adygea~AD|Republic of Altai (Gorno-Altaysk)~AL|Altai Krai~ALT|Amur Oblast~AMU|Arkhangelsk Oblast~ARK|Astrakhan Oblast~AST|Republic of Bashkortostan~BA|Belgorod Oblast~BEL|Bryansk Oblast~BRY|Republic of Buryatia~BU|Chechen Republic~CE|Chelyabinsk Oblast~CHE|Chukotka Autonomous Okrug~CHU|Chuvash Republic~CU|Republic of Dagestan~DA|Republic of Ingushetia~IN|Irkutsk Oblast~IRK|Ivanovo Oblast~IVA|Jewish Autonomous Oblast~JEW|Kabardino-Balkar Republic~KB|Kaliningrad Oblast~KLN|Republic of Kalmykia~KL|Kaluga Oblast~KLU|Kamchatka Krai~KAM|Karachay-Cherkess Republic~KC|Republic of Karelia~KR|Khabarovsk Krai~KHA|Republic of Khakassia~KK|Khanty-Mansi Autonomous Okrug - Yugra~KHM|Kemerovo Oblast~KEM|Kirov Oblast~KIR|Komi Republic~KO|Kostroma Oblast~KOS|Krasnodar Krai~KDA|Krasnoyarsk Krai~KYA|Kurgan Oblast~KGN|Kursk Oblast~KRS|Leningrad Oblast~LEN|Lipetsk Oblast~LIP|Magadan Oblast~MAG|Mari El Republic~ME|Republic of Mordovia~MO|Moscow Oblast~MOS|Moscow~MOW|Murmansk Oblast~MU|Nenets Autonomous Okrug~NEN|Nizhny Novgorod Oblast~NIZ|Novgorod Oblast~NGR|Novosibirsk Oblast~NVS|Omsk Oblast~OMS|Orenburg Oblast~ORE|Oryol Oblast~ORL|Penza Oblast~PNZ|Perm Krai~PER|Primorsky Krai~PRI|Pskov Oblast~PSK|Rostov Oblast~ROS|Ryazan Oblast~RYA|Saint Petersburg~SPE|Sakha (Yakutia) Republic~SA|Sakhalin Oblast~SAK|Samara Oblast~SAM|Saratov Oblast~SAR|Republic of North Ossetia-Alania~NOA|Smolensk Oblast~SMO|Stavropol Krai~STA|Sverdlovsk Oblast~SVE|Tambov Oblast~TAM|Republic of Tatarstan~TA|Tomsk Oblast~TOM|Tuva Republic~TU|Tula Oblast~TUL|Tver Oblast~TVE|Tyumen Oblast~TYU|Udmurt Republic~UD|Ulyanovsk Oblast~ULY|Vladimir Oblast~VLA|Volgograd Oblast~VGG|Vologda Oblast~VLG|Voronezh Oblast~VOR|Yamalo-Nenets Autonomous Okrug~YAN|Yaroslavl Oblast~YAR|Zabaykalsky Krai~ZAB"],["Rwanda","RW","Kigali~01|Eastern~02|Northern~03|Western~04|Southern~05"],["Saint Barth\xe9lemy","BL","Au Vent~02|Sous le Vent~01"],["Saint Helena, Ascension and Tristan da Cunha","SH","Ascension~AC|Saint Helena~HL|Tristan da Cunha~TA"],["Saint Kitts and Nevis","KN","Saint Kitts~K|Nevis~N"],["Saint Lucia","LC","Anse-la-Raye~01|Canaries~12|Castries~02|Choiseul~03|Dennery~05|Gros Islet~06|Laborie~07|Micoud~08|Soufriere~10|Vieux Fort~11"],["Saint Martin","MF","Saint Martin~undefined"],["Saint Pierre and Miquelon","PM","Miquelon~undefined|Saint Pierre~undefined"],["Saint Vincent and the Grenadines","VC","Charlotte~01|Grenadines~06|Saint Andrew~02|Saint David~03|Saint George~04|Saint Patrick~05"],["Samoa","WS","A'ana~AA|Aiga-i-le-Tai~AL|Atua~AT|Fa'asaleleaga~FA|Gaga'emauga~GE|Gagaifomauga~GI|Palauli~PA|Satupa'itea~SA|Tuamasaga~TU|Va'a-o-Fonoti~VF|Vaisigano~VS"],["San Marino","SM","Acquaviva~01|Borgo Maggiore~06|Chiesanuova~02|Domagnano~03|Faetano~04|Fiorentino~05|Montegiardino~08|San Marino~07|Serravalle~09"],["Sao Tome and Principe","ST","Principe~P|Sao Tome~S"],["Saudi Arabia","SA","'Asir~14|Al Bahah~11|Al Hudud ash Shamaliyah~08|Al Jawf~12|Al Madinah al Munawwarah~03|Al Qasim~05|Ar Riyad~01|Ash Sharqiyah~04|Ha'il~06|Jazan~09|Makkah al Mukarramah~02|Najran~10|Tabuk~07"],["Senegal","SN","Dakar~DK|Diourbel~DB|Fatick~FK|Kaffrine~KA|Kaolack~KL|Kedougou~KE|Kolda~KD|Louga~LG|Matam~MT|Saint-Louis~SL|Sedhiou~SE|Tambacounda~TC|Thies~TH|Ziguinchor~ZG"],["Serbia","RS","Beograd (Belgrade)~00|Borski~14|Brani\u010devski~11|Jablani\u010dki~23|Ju\u017enoba\u010dki~06|Ju\u017enobanatski~04|Kolubarski~09|Kosovski~25|Kosovsko-Mitrova\u010dki~28|Kosovsko-Pomoravski~29|Ma\u010dvanski~08|Moravi\u010dki~17|Ni\u0161avski~20|P\u010dinjski~24|Pe\u0107ki~26|Pirotski~22|Podunavski~10|Pomoravski~13|Prizrenski~27|Rasinski~19|Ra\u0161ki~18|Severnoba\u010dki~01|Severnobanatski~03|Srednjebanatski~02|Sremski~07|\u0160umadijski~12|Topli\u010dki~21|Zaje\u010darski~15|Zapadnoba\u010dki~05|Zlatiborski~16"],["Seychelles","SC","Anse aux Pins~01|Anse Boileau~02|Anse Etoile~03|Anse Royale~05|Anu Cap~04|Baie Lazare~06|Baie Sainte Anne~07|Beau Vallon~08|Bel Air~09|Bel Ombre~10|Cascade~11|Glacis~12|Grand'Anse Mahe~13|Grand'Anse Praslin~14|La Digue~15|La Riviere Anglaise~16|Les Mamelles~24|Mont Buxton~17|Mont Fleuri~18|Plaisance~19|Pointe La Rue~20|Port Glaud~21|Roche Caiman~25|Saint Louis~22|Takamaka~23"],["Sierra Leone","SL","Eastern~E|Northern~N|Southern~S|Western~W"],["Singapore","SG","Central Singapore~01|North East~02|North West~03|South East~04|South West~05"],["Sint Maarten (Dutch part)","SX","Sint Maarten~undefined"],["Slovakia","SK","Banskobystricky~BC|Bratislavsky~BL|Kosicky~KI|Nitriansky~NI|Presovsky~PV|Trenciansky~TC|Trnavsky~TA|Zilinsky~ZI"],["Slovenia","SI","Ajdovscina~001|Apace~195|Beltinci~002|Benedikt~148|Bistrica ob Sotli~149|Bled~003|Bloke~150|Bohinj~004|Borovnica~005|Bovec~006|Braslovce~151|Brda~007|Brezice~009|Brezovica~008|Cankova~152|Celje~011|Cerklje na Gorenjskem~012|Cerknica~013|Cerkno~014|Cerkvenjak~153|Cirkulane~196|Crensovci~015|Crna na Koroskem~016|Crnomelj~017|Destrnik~018|Divaca~019|Dobje~154|Dobrepolje~020|Dobrna~155|Dobrova-Polhov Gradec~021|Dobrovnik~156|Dol pri Ljubljani~022|Dolenjske Toplice~157|Domzale~023|Dornava~024|Dravograd~025|Duplek~026|Gorenja Vas-Poljane~027|Gorisnica~028|Gorje~207|Gornja Radgona~029|Gornji Grad~030|Gornji Petrovci~031|Grad~158|Grosuplje~032|Hajdina~159|Hoce-Slivnica~160|Hodos~161|Horjul~162|Hrastnik~034|Hrpelje-Kozina~035|Idrija~036|Ig~037|Ilirska Bistrica~038|Ivancna Gorica~039|Izola~040s|Jesenice~041|Jursinci~042|Kamnik~043|Kanal~044|Kidricevo~045|Kobarid~046|Kobilje~047|Kocevje~048|Komen~049|Komenda~164|Koper~050|Kodanjevica na Krki~197|Kostel~165|Kozje~051|Kranj~052|Kranjska Gora~053|Krizevci~166|Krsko~054|Kungota~055|Kuzma~056|Lasko~057|Lenart~058|Lendava~059|Litija~068|Ljubljana~061|Ljubno~062|Ljutomer~063|Log-Dragomer~208|Logatec~064|Loska Dolina~065|Loski Potok~066|Lovrenc na Pohorju~167|Lukovica~068|Luce~067|Majsperk~069|Makole~198|Maribor~070|Markovci~168|Medvode~071|Menges~072|Metlika~073|Mezica~074|Miklavz na Dravskem Polju~169|Miren-Kostanjevica~075|Mirna~212|Mirna Pec~170|Mislinja~076|Mokronog-Trebelno~199|Moravce~077|Moravske Toplice~078|Mozirje~079|Murska Sobota~080|Naklo~082|Nazarje~083|Nova Gorica~084|Novo Mesto~085|Odranci~086|Ormoz~087|Osilnica~088|Pesnica~089|Piran~090|Pivka~091|Podcetrtek~092|Podlehnik~172|Podvelka~093|Poljcane~200|Postojna~094|Prebold~174|Preddvor~095|Prevalje~175|Ptuj~096|Race-Fram~098|Radece~099|Radenci~100|Radlje ob Dravi~101|Radovljica~102|Ravne na Koroskem~103|Razkrizje~176|Recica ob Savinji~209|Rence-Vogrsko~201|Ribnica~104|Ribnica na Poboriu~177|Rogaska Slatina~106|Rogasovci~105|Rogatec~107|Ruse~108|Salovci~033|Selnica ob Dravi~178|Semic~109|Sempeter-Vrtojba~183|Sencur~117|Sentilj~118|Sentjernej~119|Sentjur~120|Sentrupert~211|Sevnica~110|Sezana~111|Skocjan~121|Skofja Loka~122|Skofljica~123|Slovenj Gradec~112|Slovenska Bistrica~113|Slovenske Konjice~114|Smarje pri elsah~124|Smarjeske Toplice~206|Smartno ob Paki~125|Smartno pri Litiji~194|Sodrazica~179|Solcava~180|Sostanj~126|Sredisce ob Dravi~202|Starse~115|Store~127|Straza~203|Sveta Ana~181|Sveta Trojica v Slovenskih Goricah~204|Sveta Andraz v Slovenskih Goricah~182|Sveti Jurij~116|Sveti Jurij v Slovenskih Goricah~210|Sveti Tomaz~205|Tabor~184|Tisina~128|Tolmin~128|Trbovlje~129|Trebnje~130|Trnovska Vas~185|Trzin~186|Trzic~131|Turnisce~132|Velenje~133|Velika Polana~187|Velike Lasce~134|Verzej~188|Videm~135|Vipava~136|Vitanje~137|Vodice~138|Vojnik~139|Vransko~189|Vrhnika~140|Vuzenica~141|Zagorje ob Savi~142|Zavrc~143|Zrece~144|Zalec~190|Zelezniki~146|Zetale~191|Ziri~147|Zirovnica~192|Zuzemberk~193"],["Solomon Islands","SB","Central~CE|Choiseul~CH|Guadalcanal~GU|Honiara~CT|Isabel~IS|Makira-Ulawa~MK|Malaita~ML|Rennell and Bellona~RB|Temotu~TE|Western~WE"],["Somalia","SO","Awdal~AW|Bakool~BK|Banaadir~BN|Bari~BR|Bay~BY|Galguduud~GA|Gedo~GE|Hiiraan~HI|Jubbada Dhexe~JD|Jubbada Hoose~JH|Mudug~MU|Nugaal~NU|Sanaag~SA|Shabeellaha Dhexe~SD|Shabeellaha Hoose~SH|Sool~SO|Togdheer~TO|Woqooyi Galbeed~WO"],["South Africa","ZA","Eastern Cape~EC|Free State~FS|Gauteng~GT|KwaZulu-Natal~NL|Limpopo~LP|Mpumalanga~MP|Northern Cape~NC|North West~NW|Western Cape~WC"],["South Georgia and South Sandwich Islands","GS","Bird Island~undefined|Bristol Island~undefined|Clerke Rocks~undefined|Montagu Island~undefined|Saunders Island~undefined|South Georgia~undefined|Southern Thule~undefined|Traversay Islands~undefined"],["South Sudan","SS","Central Equatoria~CE|Eastern Equatoria~EE|Jonglei~JG|Lakes~LK|Northern Bahr el Ghazal~BN|Unity~UY|Upper Nile~NU|Warrap~WR|Western Bahr el Ghazal~BW|Western Equatoria~EW"],["Spain","ES","Albacete~AB|Alicante~A|Almer\xeda~AN|Araba/\xc1lava~VI|Asturias~O|\xc1vila~AV|Badajoz~BA|Barcelona~B|Bizkaia~BI|Burgos~BU|C\xe1ceres~CC|C\xe1diz~CA|Cantabria~S|Castell\xf3n/Castell\xf3~CS|Ceuta~CE|Ciudad Real~CR|C\xf3rdoba~CO|A Coru\xf1a~C|Cuenca~CU|Gipuzkoa~SS|Girona~GI|Granada~GR|Guadalajara~GU|Huelva~H|Huesca~HU|Illes Balears~PM|Ja\xe9n~J|Le\xf3n~LE|Lleida~L|Lugo~LU|Madrid~M|M\xe1laga~MA|Melilla~ML|Murcia~MU|Navarra/Nafarroa~NA|Ourense~OR|Palencia~P|Las Palmas~GC|Pontevedra~PO|La Rioja~LO|Salamanca~SA|Santa Cruz de Tenerife~TF|Segovia~SG|Sevilla~SE|Soria~SO|Tarragona~T|Teruel~TE|Toledo~TO|Valencia/Val\xe8ncia~V|Valladolid~VA|Zamora~ZA|Zaragoza~Z"],["Sri Lanka","LK","Basnahira~1|Dakunu~3|Madhyama~2|Naegenahira~5|Sabaragamuwa~9|Uturu~4|Uturumaeda~7|Vayamba~6|Uva~8"],["Sudan","SD","Al Bahr al Ahmar~RS|Al Jazirah~GZ|Al Khartum~KH|Al Qadarif~GD|An Nil al Abyad~NW|An Nil al Azraq~NB|Ash Shamaliyah~NO|Gharb Darfur~DW|Gharb Kurdufan~GK|Janub Darfur~DS|Janub Kurdufan~KS|Kassala~KA|Nahr an Nil~NR|Shamal Darfur~DN|Sharq Darfur~DE|Shiamal Kurdufan~KN|Sinnar~SI|Wasat Darfur Zalinjay~DC"],["Suriname","SR","Brokopondo~BR|Commewijne~CM|Coronie~CR|Marowijne~MA|Nickerie~NI|Para~PR|Paramaribo~PM|Saramacca~SA|Sipaliwini~SI|Wanica~WA"],["Swaziland","SZ","Hhohho~HH|Lubombo~LU|Manzini~MA|Shiselweni~SH"],["Sweden","SE","Blekinge~K|Dalarna~W|G\xe4vleborg~X|Gotland~I|Halland~N|J\xe4mtland~Z|J\xf6nk\xf6ping~F|Kalmar~H|Kronoberg~G|Norrbotten~BD|\xd6rebro~T|\xd6sterg\xf6tland~E|Sk\xe5ne~M|S\xf6dermanland~D|Stockholm~AB|Uppsala~C|V\xe4rmland~S|V\xe4sterbotten~AC|V\xe4sternorrland~Y|V\xe4stmanland~U|V\xe4stra G\xf6taland~O"],["Switzerland","CH","Aargau~AG|Appenzell Ausserrhoden~AR|Appenzell Innerhoden~AI|Basel-Landschaft~BL|Basel-Stadt~BS|Bern~BE|Fribourg~FR|Gen\xe8ve~GE|Glarus~GL|Graub\xfcnden~GR|Jura~JU|Luzern~LU|Neuch\xe2tel~NE|Nidwalden~NW|Obwalden~OW|Sankt Gallen~SG|Schaffhausen~SH|Schwyz~SZ|Solothurn~SO|Thurgau~TG|Ticino~TI|Uri~UR|Valais~VS|Vaud~VD|Zug~ZG|Z\xfcrich~ZH"],["Syrian Arab Republic","SY","Al Hasakah~HA|Al Ladhiqiyah~LA|Al Qunaytirah~QU|Ar Raqqah~RA|As Suwayda'~SU|Dar'a~DR|Dayr az Zawr~DY|Dimashq~DI|Halab~HL|Hamah~HM|Hims~HI|Idlib~ID|Rif Dimashq~RD|Tartus~TA"],["Taiwan","TW","Chang-hua~CHA|Chia-i~CYQ|Hsin-chu~HSQ|Hua-lien~HUA|Kao-hsiung~KHH|Keelung~KEE|Kinmen~KIN|Lienchiang~LIE|Miao-li~MIA|Nan-t'ou~NAN|P'eng-hu~PEN|New Taipei~NWT|P'ing-chung~PIF|T'ai-chung~TXG|T'ai-nan~TNN|T'ai-pei~TPE|T'ai-tung~TTT|T'ao-yuan~TAO|Yi-lan~ILA|Yun-lin~YUN"],["Tajikistan","TJ","Dushanbe~DU|K\u016dhistoni Badakhshon~GB|Khatlon~KT|Sughd~SU"],["Tanzania, United Republic of","TZ","Arusha~01|Coast~19|Dar es Salaam~02|Dodoma~03|Iringa~04|Kagera~05|Kigoma~08|Kilimanjaro~09|Lindi~12|Manyara~26|Mara~13|Mbeya~14|Morogoro~16|Mtwara~17|Mwanza~18|Pemba North~06|Pemba South~10|Rukwa~20|Ruvuma~21|Shinyanga~22|Singida~23|Tabora~24|Tanga~25|Zanzibar North~07|Zanzibar Central/South~11|Zanzibar Urban/West~15"],["Thailand","TH","Amnat Charoen~37|Ang Thong~15|Bueng Kan~38|Buri Ram~31|Chachoengsao~24|Chai Nat~18|Chaiyaphum~36|Chanthaburi~22|Chiang Mai~50|Chiang Rai~57|Chon Buri~20|Chumphon~86|Kalasin~46|Kamphaeng Phet~62|Kanchanaburi~71|Khon Kaen~40|Krabi~81|Krung Thep Mahanakhon (Bangkok)~10|Lampang~52|Lamphun~51|Loei~42|Lop Buri~16|Mae Hong Son~58|Maha Sarakham~44|Mukdahan~49|Nakhon Nayok~26|Nakhon Phathom~73|Nakhon Phanom~48|Nakhon Ratchasima~30|Nakhon Sawan~60|Nakhon Si Thammarat~80|Nan~55|Narathiwat~96|Nong Bua Lam Phu~39|Nong Khai~43|Nonthaburi~12|Pathum Thani~13|Pattani~94|Phangnga~82|Phatthalung~93|Phayao~56|Phetchabun~76|Phetchaburi~76|Phichit~66|Phitsanulok~65|Phra Nakhon Si Ayutthaya~14|Phrae~54|Phuket~83|Prachin Buri~25|Prachuap Khiri Khan~77|Ranong~85|Ratchaburi~70|Rayong~21|Roi Et~45|Sa Kaeo~27|Sakon Nakhon~47|Samut Prakan~11|Samut Sakhon~74|Samut Songkhram~75|Saraburi~19|Satun~91|Sing Buri~17|Si Sa ket~33|Songkhla~90|Sukhothai~64|Suphan Buri~72|Surat Thani~84|Surin~32|Tak~63|Trang~92|Trat~23|Ubon Ratchathani~34|Udon Thani~41|Uthai Thani~61|Uttaradit~53|Yala~95|Yasothon~35"],["Timor-Leste","TL","Aileu~AL|Ainaro~AN|Baucau~BA|Bobonaro~BO|Cova Lima~CO|Dili~DI|Ermera~ER|Lautem~LA|Liquica~LI|Manatuto~MT|Manufahi~MF|Oecussi~OE|Viqueque~VI"],["Togo","TG","Centre~C|Kara~K|Maritime~M|Plateaux~P|Savannes~S"],["Tokelau","TK","Atafu~undefined|Fakaofo~undefined|Nukunonu~undefined"],["Tonga","TO","'Eua~01|Ha'apai~02|Niuas~03|Tongatapu~04|Vava'u~05"],["Trinidad and Tobago","TT","Arima~ARI|Chaguanas~CHA|Couva-Tabaquite-Talparo~CTT|Diefo Martin~DMN|Mayaro-Rio Claro~MRC|Penal-Debe~PED|Point Fortin~PTF|Port-of-Spain~POS|Princes Town~PRT|San Fernando~SFO|San Juan-Laventille~SJL|Sangre Grande~SGE|Siparia~SIP|Tobago~TOB|Tunapuna-Piarco~TUP"],["Tunisia","TN","Ariana~12|Beja~31|Ben Arous~13|Bizerte~23|Gabes~81|Gafsa~71|Jendouba~32|Kairouan~41|Kasserine~42|Kebili~73|Kef~33|Mahdia~53|Medenine~82|Monastir~52|Nabeul~21|Sfax~61|Sidi Bouzid~43|Siliana~34|Sousse~51|Tataouine~83|Tozeur~72|Tunis~11|Zaghouan~22"],["Turkey","TR","Adana~01|Adiyaman~02|Afyonkarahisar~03|Agri~04|Aksaray~68|Amasya~05|Ankara~06|Antalya~07|Ardahan~75|Artvin~08|Aydin~09|Balikesir~10|Bartin~74|Batman~72|Bayburt~69|Bilecik~11|Bingol~12|Bitlis~13|Bolu~14|Burdur~15|Bursa~16|Canakkale~17|Cankiri~18|Corum~19|Denizli~20|Diyarbakir~21|Duzce~81|Edirne~22|Elazig~23|Erzincan~24|Erzurum~25|Eskisehir~26|Gaziantep~27|Giresun~28|Gumushane~29|Hakkari~30|Hatay~31|Igdir~76|Isparta~32|Istanbul~34|Izmir~35|Kahramanmaras~46|Karabuk~78|Karaman~70|Kars~36|Kastamonu~37|Kayseri~38|Kilis~79|Kirikkale~71|Kirklareli~39|Kirsehir~40|Kocaeli~41|Konya~42|Kutahya~43|Malatya~44|Manisa~45|Mardin~47|Mersin~33|Mugla~48|Mus~49|Nevsehir~50|Nigde~51|Ordu~52|Osmaniye~80|Rize~53|Sakarya~54|Samsun~55|Sanliurfa~63|Siirt~56|Sinop~57|Sirnak~73|Sivas~58|Tekirdag~59|Tokat~60|Trabzon~61|Tunceli~62|Usak~64|Van~65|Yalova~77|Yozgat~66|Zonguldak~67"],["Turkmenistan","TM","Ahal~A|Asgabat~S|Balkan~B|Dashoguz~D|Lebap~L|Mary~M"],["Turks and Caicos Islands","TC","Turks and Caicos Islands~undefined"],["Tuvalu","TV","Funafuti~FUN|Nanumanga~NMG|Nanumea~NMA|Niutao~NIT|Nui~NUI|Nukufetau~NKF|Nukulaelae~NKL|Vaitupu~VAU"],["Uganda","UG","Abim~317|Adjumani~301|Amolatar~314|Amuria~216|Amuru~319|Apac~302|Arua~303|Budaka~217|Bududa~223|Bugiri~201|Bukedea~224|Bukwa~218|Buliisa~419|Bundibugyo~401|Bushenyi~402|Busia~202|Butaleja~219|Dokolo~318|Gulu~304|Hoima~403|Ibanda~416|Iganga~203|Isingiro~417|Jinja~204|Kaabong~315|Kabale~404|Kabarole~405|Kaberamaido~213|Kalangala~101|Kaliro~220|Kampala~102|Kamuli~205|Kamwenge~413|Kanungu~414|Kapchorwa~206|Kasese~406|Katakwi~207|Kayunga~112|Kibaale~407|Kiboga~103|Kiruhura~418|Kisoro~408|Kitgum~305|Koboko~316|Kotido~306|Kumi~208|Kyenjojo~415|Lira~307|Luwero~104|Lyantonde~116|Manafwa~221|Maracha~320|Masaka~105|Masindi~409|Mayuge~214|Mbale~209|Mbarara~410|Mityana~114|Moroto~308|Moyo~309|Mpigi~106|Mubende~107|Mukono~108|Nakapiripirit~311|Nakaseke~115|Nakasongola~109|Namutumba~222|Nebbi~310|Ntungamo~411|Oyam~321|Pader~312|Pallisa~210|Rakai~110|Rukungiri~412|Sembabule~111|Sironko~215|Soroti~211|Tororo~212|Wakiso~113|Yumbe~313"],["Ukraine","UA","Cherkasy~71|Chernihiv~74|Chernivtsi~77|Dnipropetrovsk~12|Donetsk~14|Ivano-Frankivsk~26|Kharkiv~63|Kherson~65|Khmelnytskyi~68|Kiev~32|Kirovohrad~35|Luhansk~09|Lviv~46|Mykolaiv~48|Odessa~51|Poltava~53|Rivne~56|Sumy~59|Ternopil~61|Vinnytsia~05|Volyn~07|Zakarpattia~21|Zaporizhia~23|Zhytomyr~18|Avtonomna Respublika Krym~43|Ky\xefv~30|Sevastopol~40"],["United Arab Emirates","AE","Abu Dhabi~AZ|Ajman~AJ|Dubai~DU|Fujairah~FU|Ras al Khaimah~RK|Sharjah~SH|Umm Al Quwain~UQ"],["United Kingdom","GB","Aberdeen City~ABE|Aberdeenshire~ABD|Angus~ANS|Antrim and Newtownabbey~ANN|Ards and North Down~AND|Argyll and Bute~AGB|Armagh, Banbridge and Craigavon~ABC|Barking and Dagenham~BDG|Barnet~BNE|Barnsley~BNS|Bath and North East Somerset~BAS|Bedford~BDF|Belfast~BFS|Bexley~BEX|Birmingham~BIR|Blackburn with Darwen~BBD|Blackpool~BPL|Blaenau Gwent~BGW|Bolton~BOL|Bournemouth~BMH|Bracknell Forest~BRC|Bradford~BRD|Brent~BEN|Bridgend~BGE|Brighton and Hove~BNH|Bristol, City of~BST|Bromley~BRY|Buckinghamshire~BKM|Bury~BUR|Caerphilly~CAY|Calderdale~CLD|Cambridgeshire~CAM|Camden~CMD|Cardiff~CRF|Carmarthenshire~CMN|Causeway Coast and Glens~CCG|Central Bedfordshire~CBF|Ceredigion~CGN|Cheshire East~CHE|Cheshire West and Chester~CHW|Clackmannanshire~CLK|Conwy~CWY|Cornwall~CON|Coventry~COV|Croydon~CRY|Cumbria~CMA|Darlington~DAL|Denbighshire~DEN|Derby~DER|Derbyshire~DBY|Derry and Strabane~DRS|Devon~DEV|Doncaster~DNC|Dorset~DOR|Dudley~DUD|Dumfries and Galloway~DGY|Dundee City~DND|Durham County~DUR|Ealing~EAL|East Ayrshire~EAY|East Dunbartonshire~EDU|East Lothian~ELN|East Renfrewshire~ERW|East Riding of Yorkshire~ERY|East Sussex~ESX|Edinburgh, City of~EDH|Eilean Siar~ELS|Enfield~ENF|Essex~ESS|Falkirk~FAL|Fermanagh and Omagh~FMO|Fife~FIF|Flintshire~FLN|Gateshead~GAT|Glasgow City~GLG|Gloucestershire~GLS|Greenwich~GRE|Gwynedd~GWN|Hackney~HCK|Halton~HAL|Hammersmith and Fulham~HMF|Hampshire~HAM|Haringey~HRY|Harrow~HRW|Hartlepool~HPL|Havering~HAV|Herefordshire~HEF|Hertfordshire~HRT|Highland~HLD|Hillingdon~HIL|Hounslow~HNS|Inverclyde~IVC|Isle of Anglesey~AGY|Isle of Wight~IOW|Isles of Scilly~IOS|Islington~ISL|Kensington and Chelsea~KEC|Kent~KEN|Kingston upon Hull~KHL|Kingston upon Thames~KTT|Kirklees~KIR|Knowsley~KWL|Lambeth~LBH|Lancashire~LAN|Leeds~LDS|Leicester~LCE|Leicestershire~LEC|Lewisham~LEW|Lincolnshire~LIN|Lisburn and Castlereagh~LBC|Liverpool~LIV|London, City of~LND|Luton~LUT|Manchester~MAN|Medway~MDW|Merthyr Tydfil~MTY|Merton~MRT|Mid and East Antrim~MEA|Mid Ulster~MUL|Middlesbrough~MDB|Midlothian~MLN|Milton Keynes~MIK|Monmouthshire~MON|Moray~MRY|Neath Port Talbot~NTL|Newcastle upon Tyne~NET|Newham~NWM|Newport~NWP|Newry, Mourne and Down~NMD|Norfolk~NFK|North Ayrshire~NAY|North East Lincolnshire~NEL|North Lanarkshire~NLK|North Lincolnshire~NLN|North Somerset~NSM|North Tyneside~NTY|North Yorkshire~NYK|Northamptonshire~NTH|Northumberland~NBL|Nottingham~NGM|Nottinghamshire~NTT|Oldham~OLD|Orkney Islands~ORK|Oxfordshire~OXF|Pembrokeshire~PEM|Perth and Kinross~PKN|Peterborough~PTE|Plymouth~PLY|Poole~POL|Portsmouth~POR|Powys~POW|Reading~RDG|Redbridge~RDB|Redcar and Cleveland~RCC|Renfrewshire~RFW|Rhondda, Cynon, Taff~RCT|Richmond upon Thames~RIC|Rochdale~RCH|Rotherham~ROT|Rutland~RUT|St. Helens~SHN|Salford~SLF|Sandwell~SAW|Scottish Borders, The~SCB|Sefton~SFT|Sheffield~SHF|Shetland Islands~ZET|Shropshire~SHR|Slough~SLG|Solihull~SOL|Somerset~SOM|South Ayrshire~SAY|South Gloucestershire~SGC|South Lanarkshire~SLK|South Tyneside~STY|Southampton~STH|Southend-on-Sea~SOS|Southwark~SWK|Staffordshire~STS|Stirling~STG|Stockport~SKP|Stockton-on-Tees~STT|Stoke-on-Trent~STE|Suffolk~SFK|Sunderland~SND|Surrey~SRY|Sutton~STN|Swansea~SWA|Swindon~SWD|Tameside~TAM|Telford and Wrekin~TFW|Thurrock~THR|Torbay~TOB|Torfaen~TOF|Tower Hamlets~TWH|Trafford~TRF|Vale of Glamorgan, The~VGL|Wakefield~WKF|Walsall~WLL|Waltham Forest~WFT|Wandsworth~WND|Warrington~WRT|Warwickshire~WAR|West Berkshire~WBK|West Dunbartonshire~WDU|West Lothian~WLN|West Sussex~WSX|Westminster~WSM|Wigan~WGN|Wiltshire~WIL|Windsor and Maidenhead~WNM|Wirral~WRL|Wokingham~WOK|Wolverhampton~WLV|Worcestershire~WOR|Wrexham~WRX|York~YOR"],["United States","US","Alabama~AL|Alaska~AK|American Samoa~AS|Arizona~AZ|Arkansas~AR|California~CA|Colorado~CO|Connecticut~CT|Delaware~DE|District of Columbia~DC|Micronesia~FM|Florida~FL|Georgia~GA|Guam~GU|Hawaii~HI|Idaho~ID|Illinois~IL|Indiana~IN|Iowa~IA|Kansas~KS|Kentucky~KY|Louisiana~LA|Maine~ME|Marshall Islands~MH|Maryland~MD|Massachusetts~MA|Michigan~MI|Minnesota~MN|Mississippi~MS|Missouri~MO|Montana~MT|Nebraska~NE|Nevada~NV|New Hampshire~NH|New Jersey~NJ|New Mexico~NM|New York~NY|North Carolina~NC|North Dakota~ND|Northern Mariana Islands~MP|Ohio~OH|Oklahoma~OK|Oregon~OR|Palau~PW|Pennsylvania~PA|Puerto Rico~PR|Rhode Island~RI|South Carolina~SC|South Dakota~SD|Tennessee~TN|Texas~TX|Utah~UT|Vermont~VT|Virgin Islands~VI|Virginia~VA|Washington~WA|West Virginia~WV|Wisconsin~WI|Wyoming~WY|Armed Forces Americas~AA|Armed Forces Europe, Canada, Africa and Middle East~AE|Armed Forces Pacific~AP"],["United States Minor Outlying Islands","UM","Baker Island~81|Howland Island~84|Jarvis Island~86|Johnston Atoll~67|Kingman Reef~89|Midway Islands~71|Navassa Island~76|Palmyra Atoll~95|Wake Island~79|Bajo Nuevo Bank~BN|Serranilla Bank~SB"],["Uruguay","UY","Artigas~AR|Canelones~CA|Cerro Largo~CL|Colonia~CO|Durazno~DU|Flores~FS|Florida~FD|Lavalleja~LA|Maldonado~MA|Montevideo~MO|Paysand\xfa~PA|R\xedo Negro~RN|Rivera~RV|Rocha~RO|Salto~SA|San Jos\xe9~SJ|Soriano~SO|Tacuaremb\xf3~TA|Treinta y Tres~TT"],["Uzbekistan","UZ","Toshkent shahri~TK|Andijon~AN|Buxoro~BU|Farg\u2018ona~FA|Jizzax~JI|Namangan~NG|Navoiy~NW|Qashqadaryo (Qarshi)~QA|Samarqand~SA|Sirdaryo (Guliston)~SI|Surxondaryo (Termiz)~SU|Toshkent wiloyati~TO|Xorazm (Urganch)~XO|Qoraqalpog\u2018iston Respublikasi (Nukus)~QR"],["Vanuatu","VU","Malampa~MAP|P\xe9nama~PAM|Sanma~SAM|Sh\xe9fa~SEE|Taf\xe9a~TAE|Torba~TOB"],["Venezuela, Bolivarian Republic of","VE","Dependencias Federales~W|Distrito Federal~A|Amazonas~Z|Anzo\xe1tegui~B|Apure~C|Aragua~D|Barinas~E|Bol\xedvar~F|Carabobo~G|Cojedes~H|Delta Amacuro~Y|Falc\xf3n~I|Gu\xe1rico~J|Lara~K|M\xe9rida~L|Miranda~M|Monagas~N|Nueva Esparta~O|Portuguesa~P|Sucre~R|T\xe1chira~S|Trujillo~T|Vargas~X|Yaracuy~U|Zulia~V"],["Vietnam","VN","\u0110\u1ed3ng Nai~39|\u0110\u1ed3ng Th\xe1p~45|Gia Lai~30|H\xe0 Giang~03|H\xe0 Nam~63|H\xe0 T\xe2y~15|H\xe0 T\u0129nh~23|H\u1ea3i D\u01b0\u01a1ng~61|H\u1eadu Giang~73|H\xf2a B\xecnh~14|H\u01b0ng Y\xean~66|Kh\xe1nh H\xf2a~34|Ki\xean Giang~47|Kon Tum~28|Lai Ch\xe2u~01|L\xe2m \u0110\u1ed3ng~35|L\u1ea1ng S\u01a1n~09|L\xe0o Cai~02|Long An~41|Nam \u0110\u1ecbnh~67|Ngh\u1ec7 An~22|Ninh B\xecnh~18|Ninh Thu\u1eadn~36|Ph\xfa Th\u1ecd~68|Ph\xfa Y\xean~32|Qu\u1ea3ng B\xecnh~24|Qu\u1ea3ng Nam~27|Qu\u1ea3ng Ng\xe3i~29|Qu\u1ea3ng Ninh~13|Qu\u1ea3ng Tr\u1ecb~25|S\xf3c Tr\u0103ng~52|S\u01a1n La~05|T\xe2y Ninh~37|Th\xe1i B\xecnh~20|Th\xe1i Nguy\xean~69|Thanh H\xf3a~21|Th\u1eeba Thi\xean\u2013Hu\u1ebf~26|Ti\u1ec1n Giang~46|Tr\xe0 Vinh~51|Tuy\xean Quang~07|V\u0129nh Long~49|V\u0129nh Ph\xfac~70|Y\xean B\xe1i~06|C\u1ea7n Th\u01a1~CT|\u0110\xe0 N\u1eb5ng~DN|H\xe0 N\u1ed9i~HN|H\u1ea3i Ph\xf2ng~HP|H\u1ed3 Ch\xed Minh (S\xe0i G\xf2n)~SG"],["Virgin Islands, British","VG","Anegada~ANG|Jost Van Dyke~JVD|Tortola~TTA|Virgin Gorda~VGD"],["Virgin Islands, U.S.","VI","St. Thomas~STH|St. John~SJO|St. Croix~SCR"],["Wallis and Futuna","WF","Alo~ALO|Sigave~SIG|Wallis~WAL"],["Western Sahara","EH","Es Smara~ESM|Boujdour~BOD|La\xe2youne~LAA|Aousserd~AOU|Oued ed Dahab~OUD"],["Yemen","YE","Aby\u0101n~AB|'Adan~AD|A\u1e11 \u1e10\u0101li'~DA|Al Bay\u1e11\u0101'~BA|Al \u1e28udaydah~HU|Al Jawf~JA|Al Mahrah~MR|Al Ma\u1e29w\u012bt~MW|'Amr\u0101n~AM|Dham\u0101r~DH|\u1e28a\u1e11ramawt~HD|\u1e28ajjah~HJ|Ibb~IB|La\u1e29ij~LA|Ma'rib~MA|Raymah~RA|\u015e\u0101\u2018dah~SD|\u015ean\u2018\u0101'~SN|Shabwah~SH|T\u0101\u2018izz~TA"],["Zambia","ZM","Central~02|Copperbelt~08|Eastern~03|Luapula~04|Lusaka~09|Northern~05|North-Western~06|Southern~07|Western~01"],["Zimbabwe","ZW","Bulawayo~BU|Harare~HA|Manicaland~MA|Mashonaland Central~MC|Mashonaland East~ME|Mashonaland West~MW|Masvingo~MV|Matabeleland North~MN|Matabeleland South~MS|Midlands~MI"]],s="full",l="short",c="|",d="~",h=function(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")},f=function(){function a(a,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(a,r.key,r)}}return function(e,n,r){return n&&a(e.prototype,n),r&&a(e,r),e}}(),p=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(a[r]=n[r])}return a},m=function(a,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);a.prototype=Object.create(e&&e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(a,e):a.__proto__=e)},S=function(a,e){var n={};for(var r in a)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(a,r)&&(n[r]=a[r]);return n},g=function(a,e){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!==typeof e&&"function"!==typeof e?a:e},b=function(a,e){if(Array.isArray(a))return a;if(Symbol.iterator in Object(a))return function(a,e){var n=[],r=!0,t=!1,i=void 0;try{for(var o,u=a[Symbol.iterator]();!(r=(o=u.next()).done)&&(n.push(o.value),!e||n.length!==e);r=!0);}catch(s){t=!0,i=s}finally{try{!r&&u.return&&u.return()}finally{if(t)throw i}}return n}(a,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")},A=function(a){if(Array.isArray(a)){for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n}return Array.from(a)},v=function(a,e,n,r){var t=[],i=a;return n.length>0?i=a.filter((function(a){var e=b(a,2)[1];return n.indexOf(e)>-1})):r.length>0&&(i=a.filter((function(a){var e=b(a,2)[1];return-1===r.indexOf(e)}))),e.length>0&&(e.forEach((function(a){var e=i.find((function(e){return b(e,2)[1]===a}));e&&t.push(e)})),i=i.filter((function(a){var n=b(a,2)[1];return-1===e.indexOf(n)}))),t.length?[].concat(t,A(i)):i},y=function(a){function e(a){h(this,e);var n=g(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={countries:v(u,a.priorityOptions,a.whitelist,a.blacklist)},n}return m(e,a),f(e,[{key:"getCountries",value:function(){var a=this.props,e=a.valueType,n=a.labelType;return this.state.countries.map((function(a){var r=b(a,2),i=r[0],o=r[1];return t.a.createElement("option",{value:e===l?o:i,key:o},n===l?o:i)}))}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.showDefaultOption,n=a.defaultOptionLabel;return e?t.a.createElement("option",{value:"",key:"default"},n):null}},{key:"render",value:function(){var a=this.props,e=a.name,n=a.id,r=a.classes,i=a.value,o=a.onChange,u=a.onBlur,s=a.disabled,l=(a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.whitelist,a.blacklist,a.customOptions,a.priorityOptions,S(a,["name","id","classes","value","onChange","onBlur","disabled","showDefaultOption","defaultOptionLabel","labelType","valueType","whitelist","blacklist","customOptions","priorityOptions"])),c=p({},l,{name:e,value:i,onChange:function(a){return o(a.target.value,a)},onBlur:function(a){return u(a.target.value,a)},disabled:s});return n&&(c.id=n),r&&(c.className=r),t.a.createElement("select",c,this.getDefaultOption(),this.getCountries())}}]),e}(r.Component);y.propTypes={value:o.a.oneOfType([o.a.string,o.a.number]),name:o.a.string,id:o.a.string,classes:o.a.string,showDefaultOption:o.a.bool,defaultOptionLabel:o.a.oneOfType([o.a.string,o.a.number]),priorityOptions:o.a.array,onChange:o.a.func,onBlur:o.a.func,labelType:o.a.oneOf([s,l]),valueType:o.a.oneOf([s,l]),whitelist:o.a.array,blacklist:o.a.array,disabled:o.a.bool},y.defaultProps={value:"",name:"rcrs-country",id:"",classes:"",showDefaultOption:!0,defaultOptionLabel:"Select Country",priorityOptions:[],onChange:function(){},onBlur:function(){},labelType:s,valueType:s,whitelist:[],blacklist:[],disabled:!1};var k=function(a){function e(a){h(this,e);var n=g(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a));return n.state={regions:n.getRegions(a.country)},n.getRegions=n.getRegions.bind(n),n}return m(e,a),f(e,[{key:"componentDidUpdate",value:function(a){var e=this.props.country;if(e!==a.country){var n=this.getRegions(e);this.setState({regions:[].concat(A(n),A(this.getCustomOptions(n)))})}}},{key:"getCustomOptions",value:function(a){var e=this.props.customOptions,n=this.getDuplicates(a);return n.length?(console.error("Error: Duplicate regions present: "+n.toString()+".\nThe above item(s) is/are already getting added to the region dropdown by the library."),[]):e.map((function(a){if(a)return{regionName:a,regionShortCode:a}}))}},{key:"getDuplicates",value:function(a){var e=this.props,n=e.customOptions,r=e.valueType===s?"regionName":"regionShortCode";return a.filter((function(a){return-1!==n.indexOf(a[r])})).map((function(a){return a[r]}))}},{key:"getRegions",value:function(a){if(!a)return[];var e=this.props,n=e.countryValueType,r=e.whitelist,t=e.blacklist,i=n===s?0:1,o=[];return u.forEach((function(e){e[i]===a&&(o=e)})),o&&0!==o.length?function(a,e,n){var r=b(a,3),t=r[0],i=r[1],o=r[2],u=e.hasOwnProperty(i)?e[i]:[],s=n.hasOwnProperty(i)?n[i]:[],l=o.split("|");return u.length>0&&l.length>0?l=l.filter((function(a){for(var e=0,n=u.length;e<n;e++)if(a.indexOf(u[e])>-1)return!0;return!1})):s.length>0&&l.length>0&&(l=l.filter((function(a){for(var e=0,n=s.length;e<n;e++)if(a.indexOf(s[e])>-1)return!1;return!0}))),[t,i,l.join("|")]}(o,r,t)[2].split(c).map((function(a){var e=a.split(d),n=b(e,2),r=n[0],t=n[1];return{regionName:r,regionShortCode:void 0===t?null:t}})):(console.error("Error. Unknown country passed: "+a+'. If you\'re passing a country shortcode, be sure to include countryValueType="short" on the RegionDropdown'),[])}},{key:"getRegionList",value:function(){var a=this.props,e=a.labelType,n=a.valueType;return this.state.regions.map((function(a){var r=a.regionName,i=a.regionShortCode,o=e===s?r:i,u=n===s?r:i;return t.a.createElement("option",{value:u,key:r},o)}))}},{key:"getDefaultOption",value:function(){var a=this.props,e=a.blankOptionLabel,n=a.showDefaultOption,r=a.defaultOptionLabel;return a.country?n?t.a.createElement("option",{value:""},r):null:t.a.createElement("option",{value:""},e)}},{key:"render",value:function(){var a=this.props,e=a.value,n=a.country,r=a.onChange,i=a.onBlur,o=a.id,u=a.name,s=a.classes,l=a.disabled,c=(a.blankOptionLabel,a.showDefaultOption,a.defaultOptionLabel,a.labelType,a.valueType,a.countryValueType,a.disableWhenEmpty),d=(a.customOptions,S(a,["value","country","onChange","onBlur","id","name","classes","disabled","blankOptionLabel","showDefaultOption","defaultOptionLabel","labelType","valueType","countryValueType","disableWhenEmpty","customOptions"])),h=p({},d,{name:u,value:e,onChange:function(a){return r(a.target.value,a)},onBlur:function(a){return i(a.target.value,a)},disabled:l||c&&""===n});return o&&(h.id=o),s&&(h.className=s),t.a.createElement("select",h,this.getDefaultOption(),this.getRegionList())}}]),e}(r.PureComponent);k.propTypes={country:o.a.string,countryValueType:o.a.oneOf([s,l]),value:o.a.oneOfType([o.a.string,o.a.number]),name:o.a.string,id:o.a.string,classes:o.a.string,blankOptionLabel:o.a.string,showDefaultOption:o.a.bool,defaultOptionLabel:o.a.string,onChange:o.a.func,onBlur:o.a.func,labelType:o.a.string,valueType:o.a.string,whitelist:o.a.object,blacklist:o.a.object,disabled:o.a.bool,disableWhenEmpty:o.a.bool,customOptions:o.a.array},k.defaultProps={country:"",value:"",name:"rcrs-region",id:"",classes:"",blankOptionLabel:"-",showDefaultOption:!0,defaultOptionLabel:"Select Region",onChange:function(){},onBlur:function(){},countryValueType:s,labelType:s,valueType:s,whitelist:{},blacklist:{},disabled:!1,disableWhenEmpty:!1,customOptions:[]}}}]);
//# sourceMappingURL=13.72126530.chunk.js.map