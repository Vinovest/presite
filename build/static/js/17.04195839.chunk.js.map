{"version":3,"sources":["assets/shared/feeFree.svg","shared/ui/Dropdown/DropdownMobile.js","shared/ui/Dropdown/styled/DropDownContainer.js","screens/transactions/transactions-section/FeeFreeBtn.tsx","screens/transactions/transactionsContext.js","screens/transactions/transactions-section/TransactionsHeader.tsx","shared/ui/FormatAmount.js","screens/transactions/helpers.js","screens/transactions/transactions-section/styled.js","screens/transactions/transactions-section/DepositElements.tsx","screens/transactions/transactions-section/TransactionItem.tsx","screens/transactions/transactions-section/SkelotonDesktop.tsx","screens/transactions/transactions-section/PendingDepositList.tsx","screens/transactions/transactions-section/SourcingWineItem.tsx","screens/transactions/transactions-section/TransactionsList.tsx","screens/transactions/transactions-section/index.tsx","assets/shared/download.js","screens/transactions/details-of-transaction/DownloadWineCertificate.tsx","screens/transactions/details-of-transaction/DetailsOfTransaction.js","screens/transactions/details-of-transaction/ModalWrapper.js","screens/transactions/index.js","shared/hooks/useIntersect.js","shared/ui/TransactionType/index.js","shared/ui/TransactionType/adjustment.svg","shared/ui/TransactionType/buy.svg","shared/ui/TransactionType/deposit.svg","shared/ui/TransactionType/fee.svg","shared/ui/TransactionType/feeCredit.svg","shared/ui/TransactionType/sell.svg","shared/ui/TransactionType/withdrawal.svg","shared/ui/TransactionType/empty.svg","shared/ui/TransactionType/sourcingWine.svg","shared/ui/TransactionType/foundWineForYou.svg"],"names":["module","exports","DropdownMobileWrapper","styled","div","Selected","Menu","OptionsWrapper","Options","Option","DropdownMobile","options","selected","selectedLabel","onChange","isOpen","setIsOpen","React","useState","toggleMenu","e","currentTarget","target","o","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","map","option","i","key","label","stopPropagation","style","length","border","value","DropDownContainer","p","theme","media","greaterThan","desktopWidth","FeeFreeBtn","observer","withAnimation","maxWidth","empty","t","useTranslation","s","useRootStore","GetFeeFreeBtn","disabled","className","referral","toggleReferralInviteModalWindowOpen","src","feeFreeSvg","alt","button","TransactionsContext","createContext","TransactionsHeader","depositsPending","typeOptions","TransactionTypes","wine_purchase","wine_sold","funds_added","funds_withdrew","vinovest_monthly_fee","rangeOptions","range","type","transfer","deposits","detailsId","setDetailsId","useContext","isMounted","useRef","isMobile","useMobile","isTablet","resetSideMenu","fees","some","id","onFilterByTypeHandler","fetchDeposits","pageToken","onFilterByDateHandler","currentRangeOption","find","currentTypeOption","useEffect","current","HeadContainer","display","marginRight","selectedInParent","selectedBackground","MobileSkeletonWrapper","position","FormatAmount","colors","amount","color","currencyFormatter","types","trade_settlement_purchase","transfer_in","vinovest_monthly_fee_waived","TransactionsListWrapper","TransactionsTitle","GridDesktop","GridMobile","TransactionTypeWrapper","GridWrapper","GridDesktopTitle","Empty","TransactionFailed","span","DepositElemMobile","typeLabel","description","date","TransactionType","TransactionTypeIcon","overflow","DepositElemDesktop","skeleton","index","TransactionItem","createdAt","meta","money","status","name","amountData","quantity","bottles","includes","charAt","toUpperCase","slice","early_withdrawl_60_day","getListDescription","transactionStatus","formatDate","formatDatePP","Fragment","data","SkeletonDesktop","margin","PendingDepositsList","pendingLength","pendingItems","useMemo","SourcingWineItem","itemsSourcing","TransactionsList","title","transactions","emptyMessage","isPending","sourcingWine","conditionalValue","sourcingWineNumber","item","TransactionsSection","oktaAuth","useOktaAuth","depositsEntityStatus","getStatus","depositsEntity","isDone","pendingTransfers","setPendingTransfers","setSourcingWine","async","user","requestUserDetailsFromOkta","Promise","all","fetchPendingTransfers","fetchBidsActive","pendingDeposits","sourcingWines","fetchData","completedTransactions","TransactionsListContainer","TransactionsTitleWrapper","padding","isSuccess","h1","IconDownload","props","DownloadWineCertificate","isDesktop","wineCertificate","documents","accountWineCertificateEntity","transactionDocumentID","WineLink","getDocumentItem","getDescription","language","locale","DetailsOfTransaction","details","certificateDocID","DetailsOfTransactionContainer","uppercase","Amount","Divider","Description","i18n","get","WineDataList","lwin18","ListItem","getCaseSizeFromLwin18","sizeByML","getBottleMLFromLwin18","Math","abs","ModalContainer","ModalWrapper","children","onClose","ModalBase","borderRadius","additionalStyles","TransactionsPage","providerData","auth","isAuthenticated","oktaUserInfo","sub","fetchWineCertificates","fetchAccountStatements","year","pageSize","bidsActive","setNode","entry","useIntersect","intersectionRatio","in","TransactionsPageContainer","TransactionsPageInnerContainer","Provider","TransactionsDetailsContainer","ref","TransactionsDetailsContainerModal","box","root","rootMargin","threshold","updateEntry","node","window","IntersectionObserver","newEntry","currentObserver","disconnect","observe","transactionsSrc","sourcing_wine","sourcingWineSvg","buySvg","depositSvg","pending_deposit","feeSvg","wine_shipped","sellSvg","withdrawalSvg","feeCredit","feeCreditSvg","rebalance_add","adjustmentSvg","foundWineForYou","foundWineForYouSvg","getLabel","transactionLabels","TransactionIcon","emptySvg","WithLabelWrapper","TransactionTypeText","img"],"mappings":"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","file":"static/js/17.04195839.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feeFree.668a80a4.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DropdownMobile = ({ options, selected, selectedLabel, onChange }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const toggleMenu = (e) => e.currentTarget === e.target && setIsOpen((o) => !o);\n    return (\n        <DropdownMobileWrapper>\n            <Selected onClick={toggleMenu}>\n                <span>{selectedLabel || selected}</span>{\" \"}\n                <svg width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M1 1L7 7L13 1\"\n                        stroke=\"#242E35\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    />\n                </svg>\n            </Selected>\n            {isOpen && (\n                <Menu onClick={toggleMenu}>\n                    <OptionsWrapper>\n                        <Options>\n                            {options.map((option, i) => (\n                                <Option\n                                    key={option.label}\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        onChange(option);\n                                        setIsOpen((o) => !o);\n                                    }}\n                                    style={i === options.length - 1 ? { border: 0 } : {}}\n                                >\n                                    <span>{option.label}</span>\n                                    {selected === option.value && (\n                                        <svg\n                                            width=\"12\"\n                                            height=\"10\"\n                                            viewBox=\"0 0 12 10\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <path\n                                                d=\"M1 5.23529L4.80952 9L11 1\"\n                                                stroke=\"#242E35\"\n                                                strokeWidth=\"2\"\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                            />\n                                        </svg>\n                                    )}\n                                </Option>\n                            ))}\n                        </Options>\n                    </OptionsWrapper>\n                </Menu>\n            )}\n        </DropdownMobileWrapper>\n    );\n};\n\nexport const DropdownMobileWrapper = styled.div`\n    position: relative;\n    width: 100%;\n`;\n\nexport const Selected = styled.div`\n    padding: 0 15px;\n    height: 40px;\n    font-family: VinovestMono;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    text-transform: uppercase;\n    color: #242e35;\n    border: 1px solid #a8abad;\n`;\n\nexport const Menu = styled.div`\n    position: fixed;\n    background: rgba(0, 0, 0, 0.5);\n    height: 100%;\n    width: 100%;\n    top: 0;\n    left: 0;\n    z-index: 999;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n`;\n\nexport const OptionsWrapper = styled.div`\n    padding-bottom: 85px;\n    background: #fff;\n`;\n\nexport const Options = styled.div`\n    padding: 19px 29px 14px;\n    border-bottom: 1px solid #eeeeee;\n`;\n\nexport const Option = styled.div`\n    height: 43px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid #eeeeee;\n    padding: 5px;\n`;\n\nexport default DropdownMobile;\n","import styled from \"styled-components\";\n\nconst DropDownContainer = styled.div`\n    margin-top: 55px;\n    width: 100%;\n    flex-shrink: 0;\n    font-family: VinovestMono;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: 0.025em;\n\n    span {\n        text-transform: uppercase;\n        margin-bottom: -2px;\n        white-space: nowrap;\n    }\n\n    button {\n        border: 1px solid #a8abad;\n        width: 100%;\n        height: 40px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 16px;\n    }\n\n    ul {\n        min-width: 100%;\n        box-shadow: unset;\n        filter: drop-shadow(0px 4px 10px rgba(0, 0, 0, 0.1));\n        border-top: 1px solid #eeeeee;\n        padding: 0;\n        margin-top: 9px;\n        ${(p) => p.theme.media.greaterThan(\"768px\")`\n            min-width: ${({ desktopWidth }) => desktopWidth || \"132px\"};\n            width: ${({ desktopWidth }) => desktopWidth || \"132px\"};\n        `}\n    }\n\n    li {\n        border: 1px solid #eeeeee;\n        border-top: 0;\n        border-bottom: 1px solid #eeeeee;\n        height: 40px;\n        padding: 0 16px;\n\n        span {\n            text-transform: uppercase;\n            white-space: nowrap;\n        }\n    }\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        margin: 0;\n        width: ${({ desktopWidth }) => desktopWidth || \"132px\"};\n    `}\n`;\n\nexport default DropDownContainer;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useRootStore } from \"#shared/hooks\";\nimport feeFreeSvg from \"#assets/shared/feeFree.svg\";\n\ninterface FeeFreeBtnProps {\n    withAnimation?: string;\n    maxWidth: string;\n    empty: boolean;\n}\n\nconst FeeFreeBtn = observer(({ withAnimation, maxWidth, empty }: FeeFreeBtnProps) => {\n    const { t } = useTranslation([\"transactions\"]);\n    const s = useRootStore();\n    return (\n        <GetFeeFreeBtn\n            disabled={empty}\n            className={withAnimation ? \"withAnimation\" : \"\"}\n            maxWidth={maxWidth}\n            onClick={s.referral.toggleReferralInviteModalWindowOpen}\n        >\n            {!empty && (\n                <>\n                    <span>{t(\"buttons.fee_free\")} </span> <img src={feeFreeSvg} alt=\"fee free icon\" />\n                </>\n            )}\n        </GetFeeFreeBtn>\n    );\n});\n\nconst GetFeeFreeBtn = styled.button`\n    padding: 11px 0;\n    max-width: ${({ maxWidth }) => maxWidth || \"334px\"};\n    width: 100%;\n    min-height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #242e35;\n    outline: 0;\n    border: 0;\n    padding: 5px;\n    font-family: VinovestMono;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: 0.025em;\n    text-transform: uppercase;\n    color: #fae8d1;\n    transition: 0.3s;\n\n    img {\n        margin-left: 10px;\n    }\n\n    span {\n        display: block;\n        margin-bottom: -2.5px;\n    }\n\n    &:hover {\n        cursor: pointer;\n        opacity: 0.5;\n    }\n\n    &.withAnimation {\n        animation: GetFeeFreeBtnAnimation 300ms;\n\n        @media screen and (min-width: 1024px) {\n            position: absolute;\n            right: 25px;\n\n            @keyframes GetFeeFreeBtnAnimation {\n                0% {\n                    opacity: 0;\n                }\n                99% {\n                    opacity: 0;\n                }\n                100% {\n                    opacity: 1;\n                }\n            }\n        }\n    }\n`;\n\nexport default FeeFreeBtn;\n","import React from \"react\";\n\nexport const TransactionsContext = React.createContext(null);\n","import React, { useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { Dropdown } from \"#shared/ui\";\nimport DropdownMobile from \"#shared/ui/Dropdown/DropdownMobile\";\nimport { useMobile, useRootStore } from \"#shared/hooks\";\nimport { TransactionTypes } from \"#utils/constants\";\nimport DropDownContainer from \"#shared/ui/Dropdown/styled/DropDownContainer\";\nimport GetFeeFreeBtn from \"./FeeFreeBtn\";\nimport { TransactionsContext } from \"../transactionsContext\";\n\ninterface TransactionsHeaderProps {\n    depositsPending: boolean;\n}\n\nconst TransactionsHeader = observer(({ depositsPending }: TransactionsHeaderProps) => {\n    const { t } = useTranslation([\"transactions\"]);\n\n    const typeOptions = [\n        { label: t(\"transactions-header.all_transactions\"), value: \"\" },\n        { label: t(\"transactions-header.buy\"), value: TransactionTypes.wine_purchase },\n        { label: t(\"transactions-header.sell\"), value: TransactionTypes.wine_sold },\n        { label: t(\"transactions-header.deposit\"), value: TransactionTypes.funds_added },\n        { label: t(\"transactions-header.withdraw\"), value: TransactionTypes.funds_withdrew },\n        { label: t(\"transactions-header.fee\"), value: TransactionTypes.vinovest_monthly_fee },\n    ];\n\n    const rangeOptions = [\n        { label: t(\"transactions-header.all_time\"), value: \"\" },\n        { label: t(\"transactions-header.month\"), value: \"month\" },\n        { label: t(\"transactions-header.last_month\"), value: \"last_month\" },\n        { label: t(\"transactions-header.last_90\"), value: \"last_90\" },\n        { label: t(\"transactions-header.current_year\"), value: \"current_year\" },\n        { label: t(\"transactions-header.previous_year\"), value: \"previous_year\" },\n    ];\n\n    const s = useRootStore();\n    const { range, type } = s.transfer.deposits;\n\n    const { detailsId, setDetailsId } = React.useContext(TransactionsContext);\n    const isMounted = React.useRef(null);\n    const isMobile = useMobile(767);\n    const isTablet = useMobile(1024);\n\n    const resetSideMenu = () => {\n        if (s.transfer.deposits.fees.some(({ id }) => id === detailsId)) {\n            setDetailsId(null);\n        }\n    };\n\n    const onFilterByTypeHandler = (option: { value: any }) => {\n        resetSideMenu();\n        s.transfer.fetchDeposits({ pageToken: 0, type: option.value, range });\n    };\n\n    const onFilterByDateHandler = (option: { value: any }) => {\n        resetSideMenu();\n        s.transfer.fetchDeposits({ pageToken: 0, type, range: option.value });\n    };\n\n    const currentRangeOption = rangeOptions.find(({ value }) => value === range);\n    const currentTypeOption = typeOptions.find(({ value }) => value === type);\n    useEffect(() => {\n        isMounted.current = true;\n    }, []);\n\n    return (\n        <HeadContainer>\n            {!isMobile && (\n                <>\n                    {depositsPending ? (\n                        <Skeleton\n                            style={{\n                                height: \"40px\",\n                                width: \"240px\",\n                                display: \"block\",\n                                marginRight: \"34px\",\n                            }}\n                        />\n                    ) : (\n                        <DropDownContainer desktopWidth=\"240px\">\n                            <Dropdown\n                                options={typeOptions}\n                                selectedInParent={type}\n                                selectedLabel={currentTypeOption.label}\n                                onChange={onFilterByTypeHandler}\n                                selectedBackground=\"#EEF2F7\"\n                            />\n                        </DropDownContainer>\n                    )}\n                    <div className=\"TransactionsDropDownWide\">\n                        {depositsPending ? (\n                            <Skeleton\n                                style={{\n                                    height: \"40px\",\n                                    width: \"173px\",\n                                    display: \"block\",\n                                }}\n                            />\n                        ) : (\n                            <DropDownContainer desktopWidth=\"173px\">\n                                <Dropdown\n                                    options={rangeOptions}\n                                    selectedInParent={range}\n                                    selectedLabel={currentRangeOption.label}\n                                    onChange={onFilterByDateHandler}\n                                    selectedBackground=\"#EEF2F7\"\n                                />\n                            </DropDownContainer>\n                        )}\n                    </div>\n                </>\n            )}\n\n            {isMobile && (\n                <>\n                    {depositsPending ? (\n                        <MobileSkeletonWrapper>\n                            <Skeleton\n                                style={{\n                                    position: \"static\",\n                                    height: \"39px\",\n                                    width: \"100%\",\n                                    display: \"block\",\n                                }}\n                            />\n                        </MobileSkeletonWrapper>\n                    ) : (\n                        <DropdownMobileWrapper>\n                            <DropdownMobile\n                                options={typeOptions}\n                                selected={type}\n                                selectedLabel={currentTypeOption.label}\n                                onChange={onFilterByTypeHandler}\n                            />\n                        </DropdownMobileWrapper>\n                    )}\n                    {depositsPending ? (\n                        <MobileSkeletonWrapper>\n                            <Skeleton\n                                style={{\n                                    position: \"static\",\n                                    height: \"39px\",\n                                    width: \"100%\",\n                                    display: \"block\",\n                                }}\n                            />\n                        </MobileSkeletonWrapper>\n                    ) : (\n                        <DropdownMobileWrapper>\n                            <DropdownMobile\n                                options={rangeOptions}\n                                selected={range}\n                                selectedLabel={currentRangeOption.label}\n                                onChange={onFilterByDateHandler}\n                            />\n                        </DropdownMobileWrapper>\n                    )}\n                </>\n            )}\n\n            {(!detailsId || isMobile) && (!isTablet || isMobile) && (\n                <GetFeeFreeBtn\n                    withAnimation={isMounted.current ? \"withAnimation\" : \"\"}\n                    maxWidth={isMobile ? \"100%\" : \"334px\"}\n                    empty={depositsPending}\n                />\n            )}\n        </HeadContainer>\n    );\n});\n\nconst filtersPadding = \"padding: 11px 0;\";\n\nconst HeadContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 14px;\n    padding: 0 25px;\n    position: relative;\n    z-index: 1;\n\n    .TransactionsDropDownWide {\n        flex-grow: 1;\n    }\n\n    ${DropDownContainer} {\n        ${filtersPadding};\n        margin: 0 30px 0 0 !important;\n    }\n\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n        padding: 0 30px;\n        margin-bottom: 0;\n    }\n\n    @media screen and (max-width: 767px) {\n        margin: 14px 0 0;\n        margin-top: 30px;\n        padding: 0 20px;\n    }\n`;\n\nconst DropdownMobileWrapper = styled.div`\n    width: 100%;\n    padding: 0 0 30px;\n`;\n\nconst MobileSkeletonWrapper = styled.div`\n    width: 100%;\n    height: 39px;\n    margin: 0 0 30px;\n`;\n\nexport default TransactionsHeader;\n","import React from \"react\";\nimport { currencyFormatter } from \"#utils/shared\";\n\nconst FormatAmount = ({ colors = [], amount }) => (\n    <span style={{ color: +amount >= 0 ? colors[0] || \"#448B47\" : colors[1] || \"#953536\" }}>\n        {+amount >= 0 && \"+\"}\n        {currencyFormatter(+amount)}\n    </span>\n);\n\nexport default FormatAmount;\n","import i18n from \"i18next\";\nimport TransactionType from \"#shared/ui/TransactionType\";\nimport { TransactionTypes } from \"#utils/constants\";\n\nexport const types = [\n    TransactionTypes.trade_settlement_purchase,\n    TransactionTypes.transfer_in,\n    TransactionTypes.vinovest_monthly_fee_waived,\n];\n\nexport const getListDescription = ({ type, name, meta, t }) => {\n    let description = TransactionType.typeLabel(type, t);\n    if (type === \"wine_purchase\") {\n        description = meta?.name;\n    }\n    if (types.includes(type) && name) {\n        description = `${name.charAt(0).toUpperCase()}${name.slice(1)}`;\n    }\n\n    if (type === TransactionTypes.early_withdrawl_60_day) {\n        description = t(\"details.early_withdrawal\");\n    }\n\n    return description;\n};\n\nexport const getDetailsDescription = ({ details, t }) => {\n    const getDescr = (type) => {\n        if ([TransactionTypes.funds_added, TransactionTypes.funds_withdrew].includes(type)) {\n            return t(`currency:${i18n.language}`, { locale: \"en\" });\n        }\n        if ([TransactionTypes.vinovest_monthly_fee].includes(type)) return t(\"details:management\");\n\n        return TransactionType.typeLabel(type, t);\n    };\n\n    let description = getDescr(details.type);\n\n    if (types.includes(details.type) && details.name) {\n        description = `${details.name.charAt(0).toUpperCase()}${details.name.slice(1)}`;\n    }\n\n    if (details.type === TransactionTypes.early_withdrawl_60_day) {\n        description = t(\"details.early_withdrawal\");\n    }\n\n    return description;\n};\n","import styled from \"styled-components\";\n\nexport const TransactionsListWrapper = styled.div`\n    width: 100%;\n    padding: 36px 0 0;\n`;\n\nexport const TransactionsTitle = styled.div`\n    padding: 0 25px 40px;\n    font-family: RoslindaleDisplayCondensed;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 32px;\n    color: #242e35;\n\n    @media screen and (max-width: 767px) {\n        padding: 0 20px 40px;\n    }\n\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n        padding: 0 30px 23px;\n    }\n`;\n\nexport const GridDesktop = styled.div`\n    display: grid;\n    grid-template-columns: 135fr 225fr 202fr 138fr;\n    grid-template-areas: \". . . .\";\n    font-family: VinovestMedium;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.005em;\n    color: #242e35;\n    white-space: nowrap;\n    border-bottom: 1px solid #eeeeee;\n    padding: 13px 3px 13px 0;\n\n    &.shrinkGridDesktop {\n        @media screen and (min-width: 1025px) and (max-width: 1200px) {\n            font-size: 13px;\n        }\n    }\n\n    .gridCell,\n    .gridCellOverflow {\n        height: 100%;\n        max-width: 100%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n    }\n\n    .gridCellOverflow {\n        overflow: hidden;\n    }\n\n    span.ellipsis {\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .lastGridCell {\n        text-align: right;\n        padding-right: 0;\n    }\n`;\n\nexport const GridMobile = styled(GridDesktop)`\n    grid-template-columns: 222fr 93fr;\n    grid-template-areas: \". .\";\n    gap: 0 5px;\n`;\n\nexport const TransactionTypeWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    overflow: hidden;\n\n    img {\n        margin-right: 15px;\n    }\n`;\n\nexport const GridWrapper = styled.div`\n    padding: 0 25px;\n    background-color: transparent;\n    transition: 0.3s;\n    border-radius: 10px;\n\n    &:hover {\n        opacity: 0.7;\n        cursor: pointer;\n    }\n\n    &.withTitles:hover {\n        opacity: 1;\n        cursor: default;\n    }\n\n    &.selectedGridWrapper {\n        background-color: #eef2f7;\n        opacity: 1;\n        position: relative;\n\n        @media screen and (min-width: 1025px) {\n            &:after {\n                position: absolute;\n                top: 50%;\n                right: -50px;\n                transform: translateY(-50%);\n                content: \" \";\n                display: block;\n                width: 0px;\n                height: 0px;\n                border-top: 9px solid transparent;\n                border-bottom: 9px solid transparent;\n                border-left: 9px solid #c5d5e4;\n            }\n        }\n\n        ${GridDesktop} {\n            border-bottom: 1px solid transparent;\n        }\n    }\n\n    .textEllipsis {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        width: 100%;\n        white-space: nowrap;\n        display: block;\n    }\n\n    .underText {\n        font-size: 14px;\n        line-height: 21px;\n    }\n\n    @media screen and (max-width: 767px) {\n        padding: 0 20px;\n    }\n\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n        padding: 0 30px;\n    }\n`;\n\nexport const GridDesktopTitle = styled(GridDesktop)`\n    font-size: 14px;\n    line-height: 18px;\n    padding-top: 0;\n    padding-bottom: 8px;\n    font-family: VinovestMono;\n    text-transform: uppercase;\n`;\n\nexport const Empty = styled.div`\n    font-family: VinovestMedium;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 16px;\n    line-height: 26px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    letter-spacing: 0.005em;\n    color: #242e35;\n    width: 80%;\n    height: 205px;\n    margin: 0 auto;\n    text-align: center;\n\n    @media screen and (max-width: 767px) {\n        height: 236px;\n    }\n`;\n\nexport const TransactionFailed = styled.span`\n    color: #ff4d00;\n`;\n","import React from \"react\";\nimport { GridDesktop, GridMobile, TransactionTypeWrapper } from \"./styled\";\nimport TransactionType from \"#shared/ui/TransactionType\";\n\ninterface DepositElementProps {\n    type: string;\n    description: JSX.Element | string;\n    amount: JSX.Element | string;\n    date: JSX.Element;\n}\n\ninterface DesktopDepositElementProps extends DepositElementProps {\n    detailsId?: number;\n}\n\ninterface MobileDepositElementProps extends DepositElementProps {\n    typeLabel: JSX.Element;\n}\n\nexport const DepositElemMobile = ({ type, typeLabel, description, amount, date }: MobileDepositElementProps) => (\n    <GridMobile>\n        <TransactionTypeWrapper>\n            <TransactionType.TransactionTypeIcon type={type} />\n            <div style={{ overflow: \"hidden\", width: \"100%\" }}>\n                <div className=\"textEllipsis\">{typeLabel}</div>\n                <span className=\"underText textEllipsis\">{description}</span>\n            </div>\n        </TransactionTypeWrapper>\n        <div className=\"gridCell lastGridCell\">\n            {amount}\n            <span className=\"underText\"> {date} </span>\n        </div>\n    </GridMobile>\n);\n\nexport const DepositElemDesktop = ({ type, description, amount, date, detailsId }: DesktopDepositElementProps) => (\n    <GridDesktop className={detailsId ? \"shrinkGridDesktop\" : \"\"}>\n        <div className=\"gridCell\">{date}</div>\n        <div className=\"gridCell\">\n            <TransactionType type={type} skeleton={type === \"show-skeleton\"} index={detailsId} />\n        </div>\n        <div className=\"gridCell gridCellOverflow\">\n            <span className=\"ellipsis\">{description} </span>\n        </div>\n        <div className=\"gridCell lastGridCell\">{amount}</div>\n    </GridDesktop>\n);\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { formatDatePP } from \"#utils/shared\";\nimport { useMobile } from \"#shared/hooks\";\nimport FormatAmount from \"#shared/ui/FormatAmount\";\nimport TransactionType from \"#shared/ui/TransactionType\";\nimport { TransactionsContext } from \"../transactionsContext\";\nimport { getListDescription } from \"../helpers\";\nimport { DepositElemMobile, DepositElemDesktop } from \"./DepositElements\";\nimport { GridWrapper, TransactionFailed } from \"./styled\";\n\ninterface TransactionItemProps {\n    createdAt?: number;\n    type: string;\n    meta: {\n        quantity: number;\n        bottles: number;\n    };\n    money: { amount: string };\n    id: number;\n    status: string;\n    name: string;\n}\n\nexport const TransactionItem = ({\n    createdAt,\n    type,\n    meta,\n    money: { amount },\n    id,\n    status,\n    name,\n}: TransactionItemProps) => {\n    const { setDetailsId, detailsId } = React.useContext(TransactionsContext);\n    const isMobile = useMobile(767);\n    const { t } = useTranslation([\"transactions\"]);\n    const clickHandler = () => setDetailsId((data: number) => (data === id ? null : id));\n    const amountData = meta?.quantity ? (\n        `${meta.quantity} ${t(\"wine-details.of\")} ${meta.bottles}`\n    ) : (\n        <FormatAmount amount={+amount / 100} colors={[null, \"#242E35\"]} />\n    );\n    const description = getListDescription({ type, name, meta, t });\n\n    const transactionStatus =\n        status === \"failed\" ? (\n            <TransactionFailed>{t(\"transactions-list.failed\")} </TransactionFailed>\n        ) : (\n            t(\"transactions-list.pending\")\n        );\n    const formatDate = createdAt ? formatDatePP(createdAt) : transactionStatus;\n    return (\n        <React.Fragment key={id}>\n            <GridWrapper onClick={clickHandler} className={detailsId === id ? \"selectedGridWrapper\" : \"\"}>\n                {isMobile ? (\n                    <DepositElemMobile\n                        type={type}\n                        typeLabel={TransactionType.typeLabel(type, t)}\n                        description={description}\n                        amount={amountData}\n                        date={formatDate}\n                    />\n                ) : (\n                    <DepositElemDesktop\n                        detailsId={detailsId}\n                        type={type}\n                        description={description}\n                        amount={amountData}\n                        date={formatDate}\n                    />\n                )}\n            </GridWrapper>\n        </React.Fragment>\n    );\n};\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\ninterface SkeletonProps {\n    maxWidth?: string;\n    height?: string;\n}\n\nexport const SkeletonDesktop = ({ maxWidth, height }: SkeletonProps) => (\n    <Skeleton\n        style={{\n            height: height || \"20px\",\n            maxWidth: maxWidth || \"58px\",\n            width: \"100%\",\n            display: \"inline-block\",\n            margin: \"0\",\n        }}\n    />\n);\n","import React, { useMemo } from \"react\";\nimport { range } from \"lodash\";\nimport { DepositElemMobile, DepositElemDesktop } from \"./DepositElements\";\nimport { SkeletonDesktop } from \"./SkelotonDesktop\";\nimport { GridWrapper } from \"./styled\";\n\ninterface PendingDepositsListProps {\n    isMobile: boolean;\n    pendingLength: number;\n}\n\nexport const PendingDepositsList = ({ isMobile, pendingLength = 0 }: PendingDepositsListProps) => {\n    const pendingItems = useMemo(() => range(pendingLength), [pendingLength]);\n\n    return (\n        <>\n            {pendingItems.map((id: number) => (\n                <React.Fragment key={id}>\n                    {isMobile ? (\n                        <GridWrapper>\n                            <DepositElemMobile\n                                type=\"show-skeleton\"\n                                typeLabel={<SkeletonDesktop />}\n                                description={<SkeletonDesktop maxWidth=\"81px\" />}\n                                amount={<SkeletonDesktop />}\n                                date={<SkeletonDesktop />}\n                            />\n                        </GridWrapper>\n                    ) : (\n                        <GridWrapper>\n                            <DepositElemDesktop\n                                type=\"show-skeleton\"\n                                description={<SkeletonDesktop maxWidth=\"81px\" />}\n                                amount={<SkeletonDesktop />}\n                                date={<SkeletonDesktop />}\n                            />\n                        </GridWrapper>\n                    )}\n                </React.Fragment>\n            ))}\n        </>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { DepositElemMobile, DepositElemDesktop } from \"./DepositElements\";\nimport { TransactionsContext } from \"../transactionsContext\";\nimport { GridWrapper } from \"./styled\";\nimport { useMobile } from \"#shared/hooks\";\n\ninterface SourcingWineItemProps {\n    itemsSourcing: number;\n    id: number;\n}\n\nexport const SourcingWineItem = ({ itemsSourcing, id }: SourcingWineItemProps) => {\n    const { setDetailsId, detailsId } = useContext(TransactionsContext);\n    const isMobile = useMobile(767);\n    const { t } = useTranslation([\"transactions\"]);\n    const clickHandler = () => setDetailsId((data: number) => (data === id ? null : id));\n\n    const description = `${t(\"wine-details.sourcing\")} ${itemsSourcing} ${\n        itemsSourcing > 1 ? `${t(\"wine-details.more_cases\")}` : `${t(\"wine-details.more_case\")}`\n    }`;\n    return (\n        <React.Fragment key={id}>\n            <GridWrapper onClick={clickHandler} className={detailsId === id ? \"selectedGridWrapper\" : \"\"}>\n                {isMobile ? (\n                    <DepositElemMobile\n                        type=\"sourcing_wine\"\n                        typeLabel={t(\"items.sourcing\")}\n                        description={description}\n                        amount={t(\"messages.pending\")}\n                        date={<span className=\"underText\">{t(\"messages.pending\")}</span>}\n                    />\n                ) : (\n                    <DepositElemDesktop\n                        detailsId={detailsId}\n                        type=\"sourcing_wine\"\n                        description={description}\n                        amount={t(\"messages.pending\")}\n                        date={t(\"messages.pending\")}\n                    />\n                )}\n            </GridWrapper>\n        </React.Fragment>\n    );\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMobile } from \"#shared/hooks\";\nimport { TransactionItem } from \"./TransactionItem\";\nimport { SkeletonDesktop } from \"./SkelotonDesktop\";\nimport { PendingDepositsList } from \"./PendingDepositList\";\nimport { TransactionsListWrapper, TransactionsTitle, GridWrapper, GridDesktopTitle, Empty } from \"./styled\";\nimport { SourcingWineItem } from \"./SourcingWineItem\";\n\ninterface TransactionsListProps {\n    title: string;\n    transactions: any;\n    emptyMessage: string;\n    isPending?: boolean;\n    pendingLength: number;\n    sourcingWine?: any;\n    isDone?: boolean;\n}\n\nconst TransactionsList = ({\n    title,\n    transactions = [],\n    emptyMessage,\n    isPending,\n    pendingLength,\n    sourcingWine,\n}: TransactionsListProps) => {\n    const isMobile = useMobile(767);\n    const { t } = useTranslation([\"transactions\"]);\n    const conditionalValue = (value: string, height?: string, width?: string) =>\n        isPending && !transactions?.length ? <SkeletonDesktop height={height} maxWidth={width} /> : value;\n\n    const sourcingWineNumber = sourcingWine?.length;\n\n    return (\n        <TransactionsListWrapper>\n            <TransactionsTitle>{conditionalValue(title, \"27px\", \"111px\")}</TransactionsTitle>\n            {!isMobile && (\n                <GridWrapper className=\"withTitles\">\n                    <GridDesktopTitle>\n                        <div>{conditionalValue(t(\"transactions-list.date\"))}</div>\n                        <div>{conditionalValue(t(\"transactions-list.type\"))}</div>\n                        <div>{conditionalValue(t(\"transactions-list.description\"))}</div>\n                        <div className=\"lastGridCell title\">{conditionalValue(t(\"transactions-list.amount\"))}</div>\n                    </GridDesktopTitle>\n                </GridWrapper>\n            )}\n            {sourcingWineNumber > 0 && <SourcingWineItem id={sourcingWine[0]?.id} itemsSourcing={sourcingWineNumber} />}\n            {transactions ? (\n                transactions.map((item) => (\n                    <TransactionItem\n                        createdAt={item.createdAt}\n                        type={item.type}\n                        meta={item.meta}\n                        money={item.money}\n                        id={item.id}\n                        status={item.status}\n                        name={item.name}\n                        key={item.id}\n                    />\n                ))\n            ) : (\n                <PendingDepositsList isMobile={isMobile} pendingLength={pendingLength} />\n            )}\n            {transactions?.length === 0 && <Empty>{emptyMessage}</Empty>}\n            {isPending && <PendingDepositsList isMobile={isMobile} pendingLength={pendingLength} />}\n        </TransactionsListWrapper>\n    );\n};\n\nexport default TransactionsList;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { observer } from \"mobx-react-lite\";\nimport { useTranslation } from \"react-i18next\";\nimport { useOktaAuth } from \"@okta/okta-react\";\nimport { getStatus } from \"#models/FetchStatus\";\nimport { useMobile, useRootStore } from \"#shared/hooks\";\nimport TransactionsHeader from \"./TransactionsHeader\";\nimport TransactionsList from \"./TransactionsList\";\nimport GetFeeFreeBtn from \"./FeeFreeBtn\";\n\nconst TransactionsSection = observer(() => {\n    const { t } = useTranslation([\"transactions\"]);\n    const s = useRootStore();\n    const isTablet = useMobile(1024);\n    const isMobile = useMobile(767);\n    const { oktaAuth } = useOktaAuth();\n    const { type, range } = s.transfer.deposits;\n    const depositsEntityStatus = getStatus(s.transfer.depositsEntity);\n    const depositsPending =\n        (depositsEntityStatus.isPending() || !depositsEntityStatus.isDone()) && !s.transfer.deposits.fees.length;\n    const [pendingTransfers, setPendingTransfers] = useState(null);\n    const [sourcingWine, setSourcingWine] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await s.user.requestUserDetailsFromOkta(oktaAuth);\n            await Promise.all([s.transfer.fetchPendingTransfers(), s.transfer.fetchBidsActive()]);\n            setPendingTransfers(s.transfer.pendingDeposits);\n            setSourcingWine(s.transfer.sourcingWines);\n        };\n\n        fetchData();\n    }, [oktaAuth, s.transfer, s.user]);\n\n    const completedTransactions = s.transfer.deposits.fees;\n    return (\n        <TransactionsListContainer>\n            <TransactionsTitleWrapper>\n                <TransactionsTitle>\n                    {depositsPending ? (\n                        <Skeleton\n                            style={{\n                                height: \"39px\",\n                                width: \"187px\",\n                                display: \"inline-block\",\n                                padding: \"10px 0 9px\",\n                            }}\n                        />\n                    ) : (\n                        t(\"title\")\n                    )}\n                </TransactionsTitle>\n                {isTablet && !isMobile && <GetFeeFreeBtn maxWidth=\"308px\" empty={depositsPending} />}\n            </TransactionsTitleWrapper>\n            <TransactionsHeader depositsPending={depositsPending} />\n            <TransactionsList\n                title={t(\"messages.pending\")}\n                pendingLength={3}\n                emptyMessage={t(\"messages.empty_transaction\")}\n                transactions={pendingTransfers}\n                sourcingWine={sourcingWine}\n            />\n\n            <TransactionsList\n                pendingLength={10}\n                title={t(\"items.completed\")}\n                transactions={completedTransactions}\n                emptyMessage={\n                    (type || range) && depositsEntityStatus.isSuccess() ? t(\"messages.no_match\") : t(\"messages.empty\")\n                }\n                isPending={depositsEntityStatus.isPending() || !depositsEntityStatus.isDone()}\n                isDone={depositsEntityStatus.isDone()}\n            />\n        </TransactionsListContainer>\n    );\n});\n\nconst TransactionsListContainer = styled.div`\n    width: 100%;\n`;\n\nconst TransactionsTitleWrapper = styled.div`\n    width: 100%;\n    padding: 0 25px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n        margin-bottom: 14px;\n        padding: 0 30px;\n    }\n\n    @media screen and (max-width: 767px) {\n        padding: 0 20px;\n    }\n`;\n\nconst TransactionsTitle = styled.h1`\n    font-family: RoslindaleDisplayCondensed;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 45px;\n    line-height: 60px;\n    color: #242e35;\n    margin-bottom: 35px;\n    margin-top: 0;\n\n    @media screen and (max-width: 767px) {\n        font-size: 32px;\n        line-height: 41px;\n        margin-bottom: 50px;\n        padding: 0;\n    }\n`;\n\nexport default TransactionsSection;\n","import React from \"react\";\n\nexport const IconDownload = (props) => {\n    return (\n        <svg width=\"19\" height=\"17\" viewBox=\"0 0 19 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M9.32043 1V12.7124\"\n                stroke={props.stroke}\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n            <path\n                d=\"M4.9259 8.52942L9.32057 12.7124L13.7152 8.52942\"\n                stroke={props.stroke}\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n            <path\n                d=\"M1.19043 12.2942V16.0589H18V12.2942\"\n                stroke={props.stroke}\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n};\n","import React from \"react\";\nimport { IconDownload } from \"../../../assets/shared/download\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { useRootStore, useMobile } from \"#shared/hooks\";\n\ninterface ButtonInterface {\n    transactionDocumentID: number;\n}\n\nexport const DownloadWineCertificate = (props: ButtonInterface) => {\n    const { t } = useTranslation([\"transactions\"]);\n    const s = useRootStore();\n    const isDesktop = !useMobile(1024);\n\n    const wineCertificate = s.documents.accountWineCertificateEntity.data.documents.find(\n        ({ id }) => id === props.transactionDocumentID,\n    );\n\n    return (\n        <WineLink\n            onClick={() => {\n                s.documents.getDocumentItem(wineCertificate.id, wineCertificate.name, isDesktop);\n            }}\n        >\n            <IconDownload stroke=\"#4f81b0\" />\n            {t(\"buttons.wine_certificate\")}\n        </WineLink>\n    );\n};\n\nconst WineLink = styled.button`\n    background: none;\n    border: none;\n    color: #4f81b0;\n    cursor: pointer;\n    padding: 1rem 0;\n\n    svg {\n        margin-right: 0.5rem;\n        vertical-align: bottom;\n    }\n`;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { get } from \"lodash\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport { formatDatePP, currencyFormatter, getBottleMLFromLwin18, getCaseSizeFromLwin18 } from \"#utils/shared\";\nimport { useRootStore, useMobile } from \"#shared/hooks\";\nimport FormatAmount from \"#shared/ui/FormatAmount\";\nimport TransactionType from \"#shared/ui/TransactionType\";\nimport { TransactionTypes } from \"#utils/constants\";\nimport { DownloadWineCertificate } from \"./DownloadWineCertificate\";\n\nconst getDescription = (type, t, language) => {\n    if ([\"funds_added\", \"funds_withdrew\"].includes(type)) return t(`currency:${language}`, { locale: \"en\" });\n    if ([\"vinovest_monthly_fee\"].includes(type)) return t(\"details.management\");\n    if (type === \"sourcing_wine\") return t(\"wine-details.sourcing_wine_statement\");\n\n    return TransactionType.typeLabel(type, t);\n};\n\nconst DetailsOfTransaction = observer(({ detailsId }) => {\n    const { t } = useTranslation([\"transactions\"]);\n    const s = useRootStore();\n    let details = null;\n    if (detailsId) {\n        details =\n            (s.transfer.deposits.fees && s.transfer.deposits.fees.find(({ id }) => id === detailsId)) ||\n            (s.transfer.pendingDeposits && s.transfer.pendingDeposits.find(({ id }) => id === detailsId)) ||\n            (s.transfer.sourcingWines && s.transfer.sourcingWines.find(({ id }) => id === detailsId));\n    }\n    if (!details) return null;\n    const transactionDocumentID = details?.meta?.certificateDocID;\n\n    return (\n        <DetailsOfTransactionContainer>\n            <TransactionType type={details.type} uppercase />\n            {!details.meta?.quantity && (\n                <Amount>\n                    <FormatAmount amount={+details.money.amount / 100} colors={[null, \"#242E35\"]} />\n                </Amount>\n            )}\n            <Divider />\n\n            <Description>\n                {details.type === \"sourcing_wine\"\n                    ? getDescription(details.type, t, i18n.language)\n                    : get(details.meta, \"name\", getDescription(details.type, t, i18n.language))}\n                {get(details.meta, \"vintage\", \"\")}\n            </Description>\n\n            {details.meta && [TransactionTypes.wine_purchase, TransactionTypes.wine_sold].includes(details.type) && (\n                <WineDataList lwin18={details.meta.lwin18} amount={details.money.amount} meta={details.meta} t={t} />\n            )}\n\n            {details.status === \"failed\" ? (\n                <ListItem className=\"failed\">{t(\"messages.failed\")}</ListItem>\n            ) : (\n                <ListItem>\n                    {t(\"labels.date\")}: {details.createdAt ? formatDatePP(details.createdAt) : t(\"messages.pending\")}\n                </ListItem>\n            )}\n            {details.type === \"sourcing_wine\" && (\n                <ListItem>\n                    {t(\"transactions-list.amount\")}: {t(\"messages.pending\")}\n                </ListItem>\n            )}\n\n            {transactionDocumentID && <DownloadWineCertificate transactionDocumentID={transactionDocumentID} />}\n        </DetailsOfTransactionContainer>\n    );\n});\n\nconst WineDataList = ({ lwin18, amount, t }) => {\n    const quantity = +getCaseSizeFromLwin18(lwin18);\n    const sizeByML = +getBottleMLFromLwin18(lwin18) + t(\"labels.ml\");\n\n    return (\n        <>\n            <ListItem>\n                {t(\"labels.size\")}: {sizeByML}\n            </ListItem>\n            <ListItem>\n                {t(\"labels.quantity\")}: {t(\"labels.case_size\")} {quantity} {t(\"labels.bottles\")}\n            </ListItem>\n            {+amount ? (\n                <ListItem>\n                    {t(\"labels.price_per_bottle\")}: {currencyFormatter(+Math.abs(amount) / 100 / quantity)}\n                </ListItem>\n            ) : null}\n        </>\n    );\n};\n\nconst DetailsOfTransactionContainer = styled.div`\n    width: 100%;\n    max-width: 400px;\n    padding: 28px 39px 82px;\n    margin: 0 auto;\n`;\n\nconst Amount = styled.div`\n    font-family: RoslindaleDisplayCondensed;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 45px;\n    line-height: 60px;\n    display: flex;\n    align-items: center;\n    padding: 33px 0 0;\n`;\n\nconst Divider = styled.div`\n    padding: 0 0 28px;\n    border-bottom: 1px solid #eeeeee;\n`;\n\nconst Description = styled.div`\n    font-family: VinovestMedium;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 36px;\n    letter-spacing: 0.005em;\n    color: #242e35;\n    margin: 20px 0 18px;\n\n    &:first-letter {\n        text-transform: uppercase;\n    }\n`;\n\nconst ListItem = styled.div`\n    font-family: VinovestMedium;\n    font-style: normal;\n    font-weight: 300;\n    font-size: 16px;\n    line-height: 26px;\n    padding: 4px 0;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.005em;\n    color: #5b646b;\n\n    &.failed {\n        color: #ff4d00;\n    }\n`;\n\nexport default DetailsOfTransaction;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ModalBase } from \"#shared/components/ModalBase\";\n\nconst modalBaseStyles = `\n    background: transparent;\n    border-radius: 0px;\n    box-shadow: none;\n    width: 100%;\n    max-width: 400px;\n    margin: auto;\n\n    .closeIcon {\n        top: 31px;\n        right: 31px\n    }\n\n`;\n\nconst ModalWrapper = ({ children, onClose }) => (\n    <>\n        <ModalBase isOpen onClose={onClose} borderRadius={0} additionalStyles={modalBaseStyles}>\n            <ModalContainer>{children}</ModalContainer>\n        </ModalBase>\n    </>\n);\n\nconst ModalContainer = styled.div`\n    width: 100%;\n    padding: 11px;\n    margin: 0 auto;\n    border-radius: 0px;\n`;\n\nexport default ModalWrapper;\n","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport { useMobile, useRootStore } from \"#shared/hooks\";\nimport useIntersect from \"#shared/hooks/useIntersect\";\nimport { Fade } from \"#shared/ui\";\nimport TransactionsSection from \"./transactions-section\";\nimport { TransactionsContext } from \"./transactionsContext\";\nimport { DetailsOfTransaction, ModalWrapper } from \"./details-of-transaction\";\n\nconst TransactionsPage = observer(() => {\n    const s = useRootStore();\n    const [detailsId, setDetailsId] = useState(null);\n    const isMobile = useMobile(1024);\n\n    const providerData = { detailsId, setDetailsId };\n\n    useEffect(() => {\n        if (s.auth.isAuthenticated && s.user.oktaUserInfo && s.user.oktaUserInfo.sub) {\n            if (!s.transfer.deposits.fees || !s.transfer.deposits.fees.length) {\n                s.transfer.fetchDeposits({ type: \"\", range: \"\" });\n                s.documents.fetchWineCertificates({ type: \"\", range: \"\" });\n                s.documents.fetchAccountStatements({ year: \"\", pageSize: 10 });\n            }\n\n            if (!s.transfer.bidsActive.length) {\n                s.transfer.fetchBidsActive();\n            }\n        }\n    }, [s.auth.isAuthenticated, s.documents, s.transfer, s.user.oktaUserInfo, s.user.oktaUserInfo.sub]);\n\n    const [setNode, entry] = useIntersect({});\n\n    useEffect(() => {\n        if (entry.intersectionRatio) {\n            s.transfer.fetchDeposits({}, true);\n            s.documents.fetchWineCertificates({}, true);\n        }\n    }, [entry.intersectionRatio, s.documents, s.transfer]);\n\n    return (\n        <Fade in>\n            <TransactionsPageContainer>\n                <TransactionsPageInnerContainer>\n                    <TransactionsContext.Provider value={providerData}>\n                        <TransactionsListContainer className={detailsId && !isMobile ? \"narrow\" : \"\"}>\n                            <TransactionsSection />\n                        </TransactionsListContainer>\n                        <TransactionsDetailsContainer className={detailsId && !isMobile ? \"open\" : \"\"}>\n                            <DetailsOfTransaction detailsId={detailsId} />\n                        </TransactionsDetailsContainer>\n                    </TransactionsContext.Provider>\n                </TransactionsPageInnerContainer>\n                <div ref={setNode} />\n                {detailsId && isMobile && (\n                    <ModalWrapper onClose={() => setDetailsId(null)}>\n                        <TransactionsDetailsContainerModal>\n                            <DetailsOfTransaction detailsId={detailsId} />\n                        </TransactionsDetailsContainerModal>\n                    </ModalWrapper>\n                )}\n            </TransactionsPageContainer>\n        </Fade>\n    );\n});\nexport default TransactionsPage;\n\nconst TransactionsPageContainer = styled.div`\n    width: 100%;\n    max-width: 1260px;\n    padding: 0;\n    margin: 0 auto;\n`;\n\nconst TransactionsPageInnerContainer = styled.div`\n    margin: 58px 10px 0;\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n`;\n\nconst box = `\n    background: #ffffff;\n    border: 1px solid #eeeeee;\n    box-sizing: border-box;\n    box-shadow: 0px 4px 40px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n`;\n\nconst TransactionsListContainer = styled.div`\n    ${box};\n    width: 100%;\n    transition: width 0.3s;\n    padding: 48px 25px 138px;\n\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\n        padding: 56px 0 58px;\n    }\n\n    @media screen and (max-width: 767px) {\n        padding: 33px 0 58px;\n    }\n\n    &.narrow {\n        width: 64.5%;\n    }\n`;\n\nconst TransactionsDetailsContainerModal = styled.div`\n    ${box};\n    max-width: 400px;\n    padding: 11px;\n    width: 100%;\n    min-height: 400px;\n    height: fit-content;\n`;\n\nconst TransactionsDetailsContainer = styled.div`\n    width: 0%;\n    overflow: hidden;\n    transition: width 0.3s;\n\n    &.open {\n        position: sticky;\n        top: 100px;\n        ${box};\n        width: 32.25%;\n        overflow: auto;\n        transition: width 0.3s;\n        min-height: 400px;\n        height: fit-content;\n    }\n`;\n","import { useEffect, useRef, useState } from \"react\";\n\nexport default ({ root = null, rootMargin, threshold = 0 }) => {\n    const [entry, updateEntry] = useState({});\n    const node = useRef(null);\n\n    const observer = useRef(\n        new window.IntersectionObserver(([newEntry]) => updateEntry(newEntry), {\n            root,\n            rootMargin,\n            threshold,\n        }),\n    );\n\n    useEffect(() => {\n        const { current: currentObserver } = observer;\n        currentObserver.disconnect();\n\n        if (node.current) currentObserver.observe(node.current);\n\n        return () => currentObserver.disconnect();\n    }, [node.current]);\n\n    return [node, entry];\n};\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { TransactionTypes } from \"#utils/constants\";\nimport adjustmentSvg from \"./adjustment.svg\";\nimport buySvg from \"./buy.svg\";\nimport depositSvg from \"./deposit.svg\";\nimport feeSvg from \"./fee.svg\";\nimport feeCreditSvg from \"./feeCredit.svg\";\nimport sellSvg from \"./sell.svg\";\nimport withdrawalSvg from \"./withdrawal.svg\";\nimport emptySvg from \"./empty.svg\";\nimport sourcingWineSvg from \"./sourcingWine.svg\";\nimport foundWineForYouSvg from \"./foundWineForYou.svg\";\n\nconst transactionsSrc = {\n    [TransactionTypes.sourcing_wine]: sourcingWineSvg,\n    [TransactionTypes.wine_purchase]: buySvg,\n\n    [TransactionTypes.funds_added]: depositSvg,\n    [TransactionTypes.pending_deposit]: depositSvg,\n\n    [TransactionTypes.vinovest_monthly_fee]: feeSvg,\n    [TransactionTypes.trade_settlement_purchase]: feeSvg,\n    [TransactionTypes.transfer_in]: feeSvg,\n    [TransactionTypes.early_withdrawl_60_day]: feeSvg,\n    [TransactionTypes.vinovest_monthly_fee_waived]: feeSvg,\n    [TransactionTypes.wine_shipped]: feeSvg,\n\n    [TransactionTypes.wine_sold]: sellSvg,\n    [TransactionTypes.funds_withdrew]: withdrawalSvg,\n    feeCredit: feeCreditSvg,\n    [TransactionTypes.rebalance_add]: adjustmentSvg,\n    foundWineForYou: foundWineForYouSvg,\n};\n\nconst transactionLabels = (t) => ({\n    [TransactionTypes.sourcing_wine]: t(\"transactions:items.sourcing\"),\n    [TransactionTypes.wine_purchase]: t(\"transactions:items.buy\"),\n    [TransactionTypes.funds_added]: t(\"transactions:items.deposit\"),\n    [TransactionTypes.pending_deposit]: t(\"transactions:items.pending\"),\n    [TransactionTypes.vinovest_monthly_fee]: t(\"transactions:items.fee\"),\n    [TransactionTypes.wine_sold]: t(\"transactions:transactions-header.sell\"),\n    [TransactionTypes.funds_withdrew]: t(\"transactions:items.withdrawn\"),\n    feeCredit: t(\"transactions:items.fee-credit\"),\n    [TransactionTypes.trade_settlement_purchase]: t(\"transactions:items.fee\"),\n    [TransactionTypes.transfer_in]: t(\"transactions:items.fee\"),\n    [TransactionTypes.early_withdrawl_60_day]: t(\"transactions:items.fee\"),\n    [TransactionTypes.vinovest_monthly_fee_waived]: t(\"transactions:items.fee\"),\n    [TransactionTypes.wine_shipped]: t(\"transactions:items.fee\"),\n\n    [TransactionTypes.rebalance_add]: t(\"transactions:items.adjust\"),\n});\n\nconst getLabel = (type, t) => transactionLabels(t)[type] || type;\n\nconst TransactionTypeIcon = ({ type, width }) => (\n    <TransactionIcon src={transactionsSrc[type] || emptySvg} alt={type} width={width} />\n);\n\nconst TransactionType = ({ type, uppercase, skeleton, index }) => {\n    const { t } = useTranslation();\n    return (\n        <WithLabelWrapper>\n            <TransactionTypeIcon type={type} />\n            <TransactionTypeText uppercase={uppercase}>\n                {skeleton ? (\n                    <Skeleton\n                        style={{\n                            height: \"20px\",\n                            width: index % 2 ? \"57px\" : \"80px\",\n                            display: \"block\",\n                            margin: \"0\",\n                        }}\n                    />\n                ) : (\n                    getLabel(type, t)\n                )}\n            </TransactionTypeText>\n        </WithLabelWrapper>\n    );\n};\n\nTransactionType.typeLabel = getLabel;\nTransactionType.TransactionTypeIcon = TransactionTypeIcon;\n\nconst TransactionIcon = styled.img`\n    display: inline-block;\n    width: ${({ width }) => width || \"42px\"};\n    height: ${({ width }) => width || \"42px\"};\n    flex-shrink: 0;\n`;\n\nconst WithLabelWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n\n    img {\n        margin-right: 27px;\n    }\n`;\n\nconst TransactionTypeText = styled.span`\n    ${({ uppercase }) => (uppercase ? \"text-transform: uppercase;\" : \"\")}\n    min-width: 42px;\n`;\nexport default TransactionType;\n","module.exports = __webpack_public_path__ + \"static/media/adjustment.8d7a2dcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/buy.987ddd6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/deposit.c0b341e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/fee.6152d6df.svg\";","module.exports = __webpack_public_path__ + \"static/media/feeCredit.9df7aaf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/sell.73d8605a.svg\";","module.exports = __webpack_public_path__ + \"static/media/withdrawal.67ecf056.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.33eca861.svg\";","module.exports = __webpack_public_path__ + \"static/media/sourcingWine.48bf99a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/foundWineForYou.04d82de6.svg\";"],"sourceRoot":""}