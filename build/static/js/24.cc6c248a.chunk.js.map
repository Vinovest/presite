{"version":3,"sources":["shared/components/Account/UserDisclaimer.tsx","shared/components/Account/UserPhoneForm.tsx","screens/account/AccountPhone.tsx","shared/components/Account/UserInformation.tsx","shared/components/Account/UserForm.tsx","screens/account/AccountAddress.tsx","shared/components/Account/UserEmailForm.tsx","shared/components/Account/UserEmail.tsx","screens/account/AccountEmail.tsx","screens/account/SellYourWine.tsx","screens/account/AccountAutoInvest.tsx","shared/components/Account/UserInvestmentPlan.tsx","assets/shared/CheckIcon.js","shared/components/Account/UserInvestmentPlanForm.tsx","screens/account/AccountInvestmentPlan.tsx","shared/components/Account/UserPasswordForm.tsx","screens/account/AccountPassword.tsx","screens/account/index.tsx","shared/ui/Alert/AlertMessage.js","assets/shared/ErrorIcon.js","screens/risk-tolerance/YourPortfolio/plans.js","assets/risk-tolerance/balancedInvesting.svg","assets/risk-tolerance/conservative.svg","assets/risk-tolerance/aggressive.svg"],"names":["UserDisclaimer","t","useTranslation","Disclaimer","styled","div","withOktaAuth","query","fetchData","onClick","onSubmitComplete","errorMessage","setErrorMessage","useState","store","useRootStore","values","errors","touched","handleSubmit","handleBlur","setFieldValue","useFormik","initialValues","primaryPhone","onSubmit","_","event","user","savePhoneNumberToCIO","AccountService","useAccountInformationPut","oktaUserEntity","data","sub","auth","accessToken","then","catch","Form","FormItem","className","htmlFor","id","name","displayInitialValueAsLocalNumber","defaultCountry","placeholder","value","onChange","onBlur","AlertMessage","type","ErrorIcon","ButtonGroup","ButtonSecondary","ButtonPrimary","form","p","theme","media","greaterThan","button","AccountPhone","submitComplete","updateSubmitComplete","editState","setEditState","toggleEditor","style","height","width","marginBottom","count","formattedNumber","formatPhoneNumber","PageHeader","EditLink","Box","Populated","Unpopulated","span","noResults","firstName","lastName","country","address","city","state","zip","handleChange","required","pattern","FormItemDescription","e","disableWhenEmpty","countryValueType","valueType","src","expandArrow","alt","controlId","priorityOptions","AccountAddress","EmailSchema","Yup","shape","email","matches","validationSchema","Notice","colors","mainAccentBlue","AccountEmail","SellYourWine","observer","s","history","useHistory","winesInLiquidationProcessIsDone","getStatus","liquidation","winesInLiquidationProcessEntity","isDone","liquidateWinesListIsDone","liquidateWinesListEntity","winesInLiquidationProcess","liquidateWinesList","React","useEffect","isAuthenticated","oktaUserInfo","length","fetchWinesInLiquidationProcess","fetchLiquidateWinesList","resetState","disableButton","fullLiquidation","partialLiquidation","Container","Description","ButtonContainer","MainSellButton","posthog","capture","err","push","ROUTE_PATHS","beforeYouRequest","disabled","ContactSupport","href","MainButton","AccountAutoInvest","portalURIFetch","status","isSuccess","propTypes","PropTypes","func","isRequired","string","a","investmentStyle","props","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","planTypes","planGenerator","useAccountPortfolioPut","planOptions","Array","isArray","map","plan","RadioGroup","key","checked","planName","description","index","CheckIcon","oktaAuth","setQuery","async","requestUserDetailsFromOkta","response","useAccountPortfolioGet","fetchProfile","PasswordSchema","newPassword","oldPassword","passwordConfirm","oneOf","useAccountPasswordPut","error","disclaimerGray","AccountPassword","readOnly","input","onLogout","useLogoutCallback","userInformation","setUserInformation","transfer","transferStore","authStore","requestGetSelfServicePortalURI","useCallback","fetchUserInformation","userInformationEntity","AccountPageContainer","NavigationPanel","MenuTitle","to","activeClassName","exact","NavigationOption","RightDetailPanel","AccountFormWrapper","path","render","component","AccountInvestmentPlan","lighterGray","lightGray","burntOrange","emphasis","AlertSuccess","CompleteMessage","children","fonts","body","alerts","success","fillRule","clipRule","svg","conservativeSvg","balancedInvestingSvg","aggressiveSvg","module","exports"],"mappings":"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","file":"static/js/24.cc6c248a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const UserDisclaimer = () => {\n    const { t } = useTranslation(\"account\");\n\n    return <Disclaimer>{t(\"disclaimer\")} </Disclaimer>;\n};\n\nconst Disclaimer = styled.div`\n    color: #767a7f;\n    font-size: 0.688rem;\n    margin-bottom: 1.5rem;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { useTranslation } from \"react-i18next\";\nimport PhoneInput from \"react-phone-number-input\";\nimport { useFormik } from \"formik\";\nimport { IOktaContext } from \"@okta/okta-react/bundles/types/OktaContext\";\nimport { useRootStore } from \"#shared/hooks\";\nimport { UserDisclaimer } from \"./UserDisclaimer\";\nimport AccountService from \"#services/UserService\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport ErrorIcon from \"#assets/shared/ErrorIcon\";\nimport \"react-phone-number-input/style.css\";\nimport { UserInformationProps } from \"./UserForm\";\n\ninterface UserPhoneFormProps extends UserInformationProps {\n    query: string;\n}\ninterface FormValues {\n    primaryPhone: string;\n}\n\nconst UserPhoneForm = ({ query, fetchData, onClick, onSubmitComplete }: UserPhoneFormProps) => {\n    const { t } = useTranslation(\"account\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const store = useRootStore();\n\n    const { values, errors, touched, handleSubmit, handleBlur, setFieldValue } = useFormik<FormValues>({\n        initialValues: {\n            primaryPhone: query,\n        },\n        onSubmit: (_, event: React.MouseEvent<HTMLButtonElement>) => {\n            store.user.savePhoneNumberToCIO(values);\n            AccountService.useAccountInformationPut(store.user.oktaUserEntity.data.sub, store.auth.accessToken, values)\n                .then(() => {\n                    fetchData();\n                    onClick(event);\n                    onSubmitComplete(event);\n                })\n                .catch(() => {\n                    setErrorMessage(t(\"error_post\"));\n                });\n        },\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormItem className=\"full\">\n                <label htmlFor=\"primaryPhone\">{t(\"account_mobile.label\")}</label>\n                <PhoneInput\n                    aria-label={t(\"account_mobile.label\")}\n                    id=\"primaryPhone\"\n                    name=\"primaryPhone\"\n                    displayInitialValueAsLocalNumber\n                    defaultCountry=\"US\"\n                    placeholder={t(\"account_mobile.placeholder\")}\n                    value={values.primaryPhone}\n                    onChange={(event: React.MouseEvent<HTMLElement>) => setFieldValue(\"primaryPhone\", event)}\n                    onBlur={handleBlur}\n                />\n                {touched.primaryPhone && errors.primaryPhone && (\n                    <AlertMessage type=\"error\">\n                        <ErrorIcon /> {errors.primaryPhone}\n                    </AlertMessage>\n                )}\n                {errorMessage && (\n                    <AlertMessage type=\"error\">\n                        <ErrorIcon /> {errorMessage}\n                    </AlertMessage>\n                )}\n            </FormItem>\n\n            <UserDisclaimer />\n            <ButtonGroup>\n                <ButtonSecondary onClick={(event: React.MouseEvent<HTMLElement>) => onClick(event)}>\n                    {t(\"button_cancel\")}\n                </ButtonSecondary>\n                <ButtonPrimary type=\"submit\">{t(\"button_save\")}</ButtonPrimary>\n            </ButtonGroup>\n        </Form>\n    );\n};\nexport default withOktaAuth<UserPhoneFormProps>(UserPhoneForm);\nconst Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\nconst FormItem = styled.div`\n    color: #766a7f;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    position: relative;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        width: 48%;\n    `};\n\n    &.full {\n        width: 100%;\n    }\n\n    label {\n        color: #242e35;\n        display: block;\n        font-size: 0.688rem;\n        margin-bottom: 0.5rem;\n        text-transform: uppercase;\n    }\n\n    input,\n    select {\n        border: 1px solid #caccce;\n        color: #242e35;\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem;\n        width: 100%;\n\n        &::placeholder {\n            color: #a8abad;\n        }\n    }\n\n    select {\n        background-color: transparent;\n        appearance: none;\n    }\n\n    img {\n        position: absolute;\n        right: 1rem;\n        top: 2.5rem;\n        width: 20px;\n    }\n\n    .PhoneInputCountryIcon {\n        box-shadow: none;\n    }\n\n    .PhoneInputCountry {\n        border-bottom: 1px solid #caccce;\n        border-left: 1px solid #caccce;\n        border-top: 1px solid #caccce;\n        justify-content: center;\n        margin-right: 0;\n        width: 10%;\n\n        img {\n            right: auto;\n            top: 0;\n        }\n    }\n`;\n\nconst ButtonSecondary = styled.button`\n    background: #fff;\n    border: 1px solid #242e35;\n    color: #242e35;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    margin-right: 1.5rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        margin-bottom: 0;\n        margin-right: 1.5rem;\n        width: auto;\n    `};\n`;\n\nconst ButtonPrimary = styled.button`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        width: auto;\n    `};\n`;\n\nconst ButtonGroup = styled.div`\n    text-align: right;\n    width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { formatPhoneNumber } from \"react-phone-number-input\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport { CheckCircle2 } from \"#assets/home\";\nimport { UserDisclaimer } from \"#shared/components/Account/UserDisclaimer\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport UserPhoneForm from \"#shared/components/Account/UserPhoneForm\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\nimport { AccountProps } from \"./AccountAddress\";\n\ninterface AccountPhoneProps extends AccountProps {\n    query: {\n        primaryPhone: string;\n    };\n}\n\nexport const AccountPhone = ({ query, fetchData }: AccountPhoneProps) => {\n    const [submitComplete, updateSubmitComplete] = useState(false);\n    const [editState, setEditState] = useState(false);\n    const noResults = \"Not provided\";\n    const toggleEditor = () => setEditState(!editState);\n    const { t } = useTranslation(\"account\");\n\n    if (!query) {\n        return (\n            <>\n                <Skeleton style={{ height: \"48px\", width: \"50%\", marginBottom: \"42px\" }} />\n                <Skeleton count={1} height=\"51px\" style={{ marginBottom: \"1.5rem\" }} />\n                <Skeleton count={1} height=\"12px\" />\n            </>\n        );\n    }\n    const formattedNumber = formatPhoneNumber(query.primaryPhone);\n\n    return (\n        <>\n            <PageHeader>{t(\"account_mobile.title\")}</PageHeader>\n\n            {editState ? (\n                <>\n                    <UserPhoneForm\n                        onSubmitComplete={() => updateSubmitComplete(true)}\n                        onClick={toggleEditor}\n                        query={query.primaryPhone}\n                        fetchData={fetchData}\n                    />\n                </>\n            ) : (\n                <>\n                    <EditLink onClick={toggleEditor}>{t(\"myaccount.edit\")}</EditLink>\n                    <Box>\n                        <span>{t(\"account_mobile.label\")}</span>\n                        {formattedNumber ? (\n                            <Populated>{formattedNumber}</Populated>\n                        ) : (\n                            <Unpopulated>{noResults}</Unpopulated>\n                        )}\n                    </Box>\n                    <UserDisclaimer />\n                    {submitComplete && (\n                        <AlertMessage type=\"success\">\n                            <CheckCircle2 />\n                            {t(\"account_mobile.success_updated\")}\n                        </AlertMessage>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nconst EditLink = styled.span`\n    color: #a86d37;\n    cursor: pointer;\n    font-size: 0.875rem;\n    padding: 0.5rem 1rem;\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n    top: 2rem;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        right: 2rem;\n        top: 4.5rem;\n    `};\n`;\nconst Box = styled.div`\n    align-items: center;\n    border-bottom: 1px solid #eeeeee;\n    color: #766a7f;\n    display: flex;\n    font-size: 0.875rem;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    span {\n        padding-right: 2rem;\n        white-space: nowrap;\n    }\n\n    div {\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem 0;\n        text-align: right;\n        word-break: break-all;\n    }\n`;\nconst Populated = styled.div`\n    color: #242e35;\n    word-break: break-word;\n`;\n\nconst Unpopulated = styled.div`\n    color: #a8abad;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport { IOktaContext } from \"@okta/okta-react/bundles/types/OktaContext\";\nimport { UserDisclaimer } from \"#shared/components/Account/UserDisclaimer\";\n\ninterface UserInformationProps extends IOktaContext {\n    query: {\n        firstName: string;\n        lastName: string;\n        country: string;\n        address: string;\n        city: string;\n        state: string;\n        zip: string;\n    };\n}\nconst UserInformation = ({ query }) => {\n    const { t } = useTranslation(\"account\");\n\n    if (!query) {\n        return (\n            <>\n                <Skeleton count={6} height=\"51px\" style={{ marginBottom: \"1.5rem\" }} />\n                <Skeleton count={1} height=\"12px\" />\n            </>\n        );\n    }\n    const noResults = t(\"not_provided\");\n    return (\n        <div>\n            <Box>\n                <span>{t(\"account_personal_information.label_fullname\")}</span>\n                {query.firstName || query.lastName ? (\n                    <Populated>\n                        {query.firstName} {query.lastName}\n                    </Populated>\n                ) : (\n                    <Unpopulated>{noResults}</Unpopulated>\n                )}\n            </Box>\n            <Box>\n                <span>{t(\"account_personal_information.label_country\")}</span>\n                {query.country ? <Populated>{query.country}</Populated> : <Unpopulated>{noResults}</Unpopulated>}\n            </Box>\n            <Box>\n                <span>{t(\"account_personal_information.label_address\")}</span>\n                {query.address ? <Populated>{query.address}</Populated> : <Unpopulated>{noResults}</Unpopulated>}\n            </Box>\n            <Box>\n                <span>{t(\"account_personal_information.label_city\")}</span>\n                {query.city ? <Populated>{query.city}</Populated> : <Unpopulated>{noResults}</Unpopulated>}\n            </Box>\n            <Box>\n                <span>{t(\"account_personal_information.label_state\")}</span>\n                {query.state ? <Populated>{query.state}</Populated> : <Unpopulated>{noResults}</Unpopulated>}\n            </Box>\n            <Box>\n                <span>{t(\"account_personal_information.label_zip\")}</span>\n                {query.zip ? <Populated>{query.zip}</Populated> : <Unpopulated>{noResults}</Unpopulated>}\n            </Box>\n            <UserDisclaimer />\n        </div>\n    );\n};\nexport default withOktaAuth<UserInformationProps>(UserInformation);\n\nconst Box = styled.div`\n    align-items: center;\n    border-bottom: 1px solid #eeeeee;\n    color: #766a7f;\n    display: flex;\n    font-size: 0.875rem;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    span {\n        padding-right: 2rem;\n        white-space: nowrap;\n    }\n\n    div {\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem 0;\n        text-align: right;\n        word-break: break-all;\n    }\n`;\n\nconst Populated = styled.div`\n    color: #242e35;\n    word-break: break-word;\n`;\n\nconst Unpopulated = styled.div`\n    color: #a8abad;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik } from \"formik\";\nimport { IOktaContext } from \"@okta/okta-react/bundles/types/OktaContext\";\nimport { useRootStore } from \"#shared/hooks\";\nimport AccountService from \"#services/UserService\";\nimport expandArrow from \"#shared/ui/Dropdown/assets/check.svg\";\nimport { UserDisclaimer } from \"./UserDisclaimer\";\nimport ErrorIcon from \"#assets/shared/ErrorIcon\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\n\nexport interface UserInformationProps extends IOktaContext {\n    fetchData: () => Promise<void>;\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    onSubmitComplete: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\ninterface UserFormProps extends UserInformationProps {\n    query: {\n        firstName: string;\n        lastName: string;\n        country: string;\n        address: string;\n        city: string;\n        state: string;\n        zip: string;\n    };\n}\n\nconst UserForm = ({ query, fetchData, onClick, onSubmitComplete }: UserFormProps) => {\n    const { t } = useTranslation(\"account\");\n    const store = useRootStore();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const { values, handleSubmit, handleChange, handleBlur } = useFormik({\n        initialValues: { ...query },\n        onSubmit: (_, event: React.MouseEvent<HTMLElement>) => {\n            AccountService.useAccountInformationPut(store.user.oktaUserEntity.data.sub, store.auth.accessToken, values)\n                .then(() => {\n                    fetchData();\n                    onClick(event);\n                    onSubmitComplete(event);\n                })\n                .catch(() => {\n                    setErrorMessage(t(\"error_post\"));\n                });\n        },\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormItem>\n                <label htmlFor=\"firstName\">{t(\"account_personal_information.label_first\")}</label>\n                <input\n                    aria-label={t(\"account_personal_information.label_first\")}\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id=\"firstName\"\n                    placeholder={t(\"account_personal_information.placeholder_first\")}\n                    required\n                />\n            </FormItem>\n            <FormItem>\n                <label htmlFor=\"lastname\">{t(\"account_personal_information.label_last\")}</label>\n                <input\n                    aria-label={t(\"account_personal_information.label_last\")}\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id=\"lastName\"\n                    placeholder={t(\"account_personal_information.placeholder_last\")}\n                    required\n                />\n            </FormItem>\n            <FormItem className=\"full\">\n                <label htmlFor=\"address\">{t(\"account_personal_information.label_address\")}</label>\n                <input\n                    aria-label={t(\"account_personal_information.label_address\")}\n                    type=\"text\"\n                    name=\"address\"\n                    pattern=\"^[#.0-9a-zA-Z\\s,-]+$\"\n                    value={values.address}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id=\"address\"\n                    placeholder={t(\"account_personal_information.placeholder_address\")}\n                />\n                <FormItemDescription>{t(\"account_personal_information.description_address\")}</FormItemDescription>\n            </FormItem>\n            <FormItem>\n                <label htmlFor=\"city\"> {t(\"account_personal_information.label_city\")}</label>\n                <input\n                    aria-label={t(\"account_personal_information.label_city\")}\n                    type=\"text\"\n                    name=\"city\"\n                    value={values.city}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id=\"city\"\n                    placeholder={t(\"account_personal_information.placeholder_city\")}\n                />\n            </FormItem>\n\n            <FormItem>\n                <label htmlFor=\"state\">{t(\"account_personal_information.label_state\")}</label>\n                <RegionDropdown\n                    name=\"state\"\n                    country={values.country}\n                    value={values.state}\n                    onChange={(_, e) => handleChange(e)}\n                    onBlur={handleBlur}\n                    disableWhenEmpty\n                    countryValueType=\"short\"\n                    valueType=\"short\"\n                    aria-label={t(\"account_personal_information.label_state\")}\n                />\n                <img src={expandArrow} alt=\"expand-icon\" className=\"expand-dropdown-arrow\" />\n            </FormItem>\n            <FormItem>\n                <label htmlFor=\"zip\">{t(\"account_personal_information.label_zip\")}</label>\n                <input\n                    aria-label={t(\"account_personal_information.label_zip\")}\n                    type=\"text\"\n                    pattern=\"^[#.0-9a-zA-Z\\s,-]+$\"\n                    name=\"zip\"\n                    value={values.zip}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id=\"zip\"\n                    placeholder={t(\"account_personal_information.placeholder_zip\")}\n                />\n            </FormItem>\n            <FormItem controlId=\"country\">\n                <label htmlFor=\"country\">{t(\"account_personal_information.label_country\")}</label>\n                <CountryDropdown\n                    aria-label={t(\"account_personal_information.label_country\")}\n                    id=\"country\"\n                    name=\"country\"\n                    value={values.country}\n                    onChange={(_, e) => handleChange(e)}\n                    onBlur={handleBlur}\n                    priorityOptions={[\"CA\", \"US\", \"GB\"]}\n                    valueType=\"short\"\n                />\n\n                <img src={expandArrow} alt=\"expand-icon\" className=\"expand-dropdown-arrow\" />\n            </FormItem>\n            {errorMessage && (\n                <AlertMessage type=\"error\">\n                    <ErrorIcon /> {errorMessage}\n                </AlertMessage>\n            )}\n            <UserDisclaimer />\n            <ButtonGroup>\n                <ButtonSecondary onClick={(event: React.MouseEvent<HTMLElement>) => onClick(event)}>\n                    {t(\"button_cancel\")}\n                </ButtonSecondary>\n                <ButtonPrimary type=\"submit\">{t(\"button_save\")}</ButtonPrimary>\n            </ButtonGroup>\n        </Form>\n    );\n};\nexport default withOktaAuth<UserFormProps>(UserForm);\n\nconst Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .error {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst FormItem = styled.div`\n    color: #766a7f;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    position: relative;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        width: 48%;\n    `};\n\n    &.full {\n        width: 100%;\n    }\n\n    label {\n        color: #242e35;\n        display: block;\n        font-size: 0.688rem;\n        margin-bottom: 0.5rem;\n        text-transform: uppercase;\n    }\n\n    input,\n    select {\n        border: 1px solid #caccce;\n        color: #242e35;\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem;\n        width: 100%;\n\n        &::placeholder {\n            color: #a8abad;\n        }\n    }\n\n    select {\n        appearance: none;\n        background-color: transparent;\n        position: relative;\n        z-index: 1;\n    }\n\n    img {\n        position: absolute;\n        right: 1rem;\n        top: 2.5rem;\n        width: 20px;\n    }\n`;\n\nconst ButtonSecondary = styled.button`\n    background: #fff;\n    border: 1px solid #242e35;\n    color: #242e35;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        margin-bottom: 0;\n        margin-right: 1.5rem;\n        width: auto;\n    `};\n`;\n\nconst ButtonPrimary = styled.button`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        width: auto;\n    `};\n`;\n\nconst ButtonGroup = styled.div`\n    text-align: right;\n    width: 100%;\n`;\nconst FormItemDescription = styled.div`\n    color: #767a7f;\n    font-size: 0.688rem;\n    margin-top: 0.5rem;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport UserInformation from \"#shared/components/Account/UserInformation\";\nimport UserForm from \"#shared/components/Account/UserForm\";\nimport { CheckCircle2 } from \"#assets/home\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\n\nexport interface AccountProps {\n    fetchData: () => Promise<void>;\n}\ninterface AccountAddressProps extends AccountProps {\n    query: {\n        firstName: string;\n        lastName: string;\n        country: string;\n        address: string;\n        city: string;\n        state: string;\n        zip: string;\n    };\n}\n\nexport const AccountAddress = ({ query, fetchData }: AccountAddressProps) => {\n    const { t } = useTranslation(\"account\");\n    const [editState, setEditState] = useState(false);\n    const toggleEditor = () => setEditState(!editState);\n    const [submitComplete, updateSubmitComplete] = useState(false);\n\n    return (\n        <>\n            {!query ? (\n                <Skeleton style={{ height: \"48px\", width: \"50%\", marginBottom: \"42px\" }} />\n            ) : (\n                <PageHeader>{t(\"account_personal_information.title\")}</PageHeader>\n            )}\n            {editState ? (\n                <UserForm\n                    onSubmitComplete={() => updateSubmitComplete(true)}\n                    onClick={toggleEditor}\n                    query={query}\n                    fetchData={fetchData}\n                />\n            ) : (\n                <>\n                    {query && <EditLink onClick={toggleEditor}>{t(\"myaccount.edit\")}</EditLink>}\n                    <UserInformation query={query} />\n                    {submitComplete && (\n                        <AlertMessage type=\"success\">\n                            <CheckCircle2 />\n                            {t(\"account_personal_information.success\")}\n                        </AlertMessage>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nconst EditLink = styled.span`\n    color: #a86d37;\n    cursor: pointer;\n    font-size: 0.875rem;\n    padding: 0.5rem 1rem;\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n    top: 2rem;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        right: 2rem;\n        top: 4.5rem;\n    `};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { UserDisclaimer } from \"./UserDisclaimer\";\nimport AccountService from \"#services/UserService\";\nimport { useRootStore } from \"#shared/hooks\";\nimport ErrorIcon from \"#assets/shared/ErrorIcon\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport { UserInformationProps } from \"./UserForm\";\n\ninterface UserEmailFormProps extends UserInformationProps {\n    query: {\n        email: string;\n    };\n}\n\ninterface FormValues {\n    email: string;\n}\n\nconst UserEmailForm: React.FC<UserEmailFormProps> = ({\n    query,\n    fetchData,\n    onClick,\n    onSubmitComplete,\n}: UserEmailFormProps) => {\n    const { t } = useTranslation(\"account\");\n    const store = useRootStore();\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const EmailSchema = Yup.object().shape({\n        email: Yup.string()\n            .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, t(\"account_email.error_invalid_email\"))\n            .required(t(\"account_email.required\")),\n    });\n    const { values, errors, touched, handleSubmit, handleChange, handleBlur } = useFormik<FormValues>({\n        initialValues: {\n            email: query.email,\n        },\n        validationSchema: EmailSchema,\n\n        onSubmit: (_, event: React.MouseEvent<HTMLElement>) => {\n            AccountService.useAccountInformationPut(store.user.oktaUserEntity.data.sub, store.auth.accessToken, values)\n                .then(() => {\n                    fetchData();\n                    onClick(event);\n                    onSubmitComplete(event);\n                })\n                .catch(() => {\n                    setErrorMessage(t(\"error_post\"));\n                });\n        },\n    });\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormItem className=\"full\">\n                <Notice>{t(\"account_email.notice\")} </Notice>\n                <label htmlFor=\"email\">{t(\"account_email.label_email\")}</label>\n                <input\n                    aria-label={t(\"account_email.label_email\")}\n                    type=\"text\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    id=\"email\"\n                    placeholder={t(\"account_email.placeholder_email\")}\n                />\n                {touched.email && errors.email && (\n                    <AlertMessage type=\"error\">\n                        <ErrorIcon /> {errors.email}\n                    </AlertMessage>\n                )}\n\n                {errorMessage && (\n                    <AlertMessage type=\"error\">\n                        <ErrorIcon /> {errorMessage}\n                    </AlertMessage>\n                )}\n            </FormItem>\n            <UserDisclaimer />\n            <ButtonGroup>\n                <ButtonSecondary type=\"button\" onClick={(event: React.MouseEvent<HTMLElement>) => onClick(event)}>\n                    {t(\"button_cancel\")}\n                </ButtonSecondary>\n                <ButtonPrimary type=\"submit\">{t(\"button_save\")}</ButtonPrimary>\n            </ButtonGroup>\n        </Form>\n    );\n};\n\nexport default withOktaAuth<UserEmailFormProps>(UserEmailForm);\n\nconst Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`;\n\nconst FormItem = styled.div`\n    color: #766a7f;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    position: relative;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        width: 48%;\n    `};\n\n    &.full {\n        width: 100%;\n    }\n\n    label {\n        color: #242e35;\n        display: block;\n        font-size: 0.688rem;\n        margin-bottom: 0.5rem;\n        text-transform: uppercase;\n    }\n\n    input,\n    select {\n        border: 1px solid #caccce;\n        color: #242e35;\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem;\n        width: 100%;\n\n        &::placeholder {\n            color: #a8abad;\n        }\n    }\n\n    select {\n        background-color: transparent;\n        appearance: none;\n    }\n\n    img {\n        position: absolute;\n        right: 1rem;\n        top: 2.5rem;\n        width: 20px;\n    }\n`;\n\nconst ButtonSecondary = styled.button`\n    background: #fff;\n    border: 1px solid #242e35;\n    color: #242e35;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    margin-right: 1.5rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        margin-bottom: 0;\n        margin-right: 1.5rem;\n        width: auto;\n    `};\n`;\n\nconst ButtonPrimary = styled.button`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        width: auto;\n    `};\n`;\n\nconst ButtonGroup = styled.div`\n    text-align: right;\n    width: 100%;\n`;\n\nconst Notice = styled.div`\n    color: ${(p: { theme: { colors: { mainAccentBlue: any } } }) => p.theme.colors.mainAccentBlue};\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 26px;\n    margin-bottom: 2rem;\n    width: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport { IOktaContext } from \"@okta/okta-react/bundles/types/OktaContext\";\nimport { UserDisclaimer } from \"#shared/components/Account/UserDisclaimer\";\n\ninterface UserEmailProps extends IOktaContext {\n    query: {\n        email: string;\n    };\n}\n\nconst UserEmail: React.FC<UserEmailProps> = ({ query }: UserEmailProps) => {\n    const { t } = useTranslation(\"account\");\n\n    if (!query) {\n        return (\n            <>\n                <Skeleton count={1} height=\"51px\" style={{ marginBottom: \"1.5rem\" }} />\n                <Skeleton count={1} height=\"12px\" />\n            </>\n        );\n    }\n    const noResults = t(\"not_provided\");\n    return (\n        <div>\n            <Box>\n                <span>{t(\"account_email.label_email\")}</span>\n                {query.email ? <Populated>{query.email}</Populated> : <Unpopulated>{noResults}</Unpopulated>}\n            </Box>\n            <UserDisclaimer />\n        </div>\n    );\n};\nexport default withOktaAuth<UserEmailProps>(UserEmail);\n\nconst Box = styled.div`\n    align-items: center;\n    border-bottom: 1px solid #eeeeee;\n    color: #766a7f;\n    display: flex;\n    font-size: 0.875rem;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    span {\n        padding-right: 2rem;\n        white-space: nowrap;\n    }\n\n    div {\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem 0;\n        text-align: right;\n        word-break: break-all;\n    }\n`;\n\nconst Populated = styled.div`\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n`;\n\nconst Unpopulated = styled.div`\n    color: #a8abad;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport UserEmailForm from \"#shared/components/Account/UserEmailForm\";\nimport UserEmail from \"#shared/components/Account/UserEmail\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport { CheckCircle2 } from \"#assets/home\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\nimport { AccountProps } from \"./AccountAddress\";\n\ninterface AccountEmailProps extends AccountProps {\n    query: {\n        email: string;\n    };\n}\n\nexport const AccountEmail = ({ query, fetchData }: AccountEmailProps) => {\n    const { t } = useTranslation(\"account\");\n    const [editState, setEditState] = useState(false);\n    const [submitComplete, updateSubmitComplete] = useState(false);\n    const toggleEditor = () => setEditState(!editState);\n\n    return (\n        <>\n            {!query ? (\n                <Skeleton style={{ height: \"48px\", width: \"50%\", marginBottom: \"42px\" }} />\n            ) : (\n                <PageHeader>{t(\"account_email.email\")}</PageHeader>\n            )}\n            {editState ? (\n                <UserEmailForm\n                    onSubmitComplete={() => updateSubmitComplete(true)}\n                    onClick={toggleEditor}\n                    query={query}\n                    fetchData={fetchData}\n                />\n            ) : (\n                <>\n                    {query && <EditLink onClick={toggleEditor}>Edit</EditLink>}\n                    <UserEmail query={query} />\n                    {submitComplete && (\n                        <AlertMessage type=\"success\">\n                            <CheckCircle2 />\n                            {t(\"account_email.updated\")}\n                        </AlertMessage>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nconst EditLink = styled.span`\n    color: #a86d37;\n    cursor: pointer;\n    font-size: 0.875rem;\n    padding: 0.5rem 1rem;\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n    top: 2rem;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        right: 2rem;\n        top: 4.5rem;\n    `};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { observer } from \"mobx-react-lite\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport posthog from \"posthog-js\";\nimport { useHistory } from \"#shared/hooks/useHistory\";\nimport { MainButton } from \"#shared/ui\";\nimport { ROUTE_PATHS } from \"#screens/route-paths\";\nimport { getStatus } from \"#models/FetchStatus\";\nimport { useRootStore } from \"#shared/hooks\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\n\nexport const SellYourWine = observer(() => {\n    const { t } = useTranslation([\"account\"]);\n\n    const s = useRootStore();\n    const history = useHistory();\n    const winesInLiquidationProcessIsDone = getStatus(s.liquidation.winesInLiquidationProcessEntity).isDone();\n    const liquidateWinesListIsDone = getStatus(s.liquidation.liquidateWinesListEntity).isDone();\n\n    const { winesInLiquidationProcess, liquidateWinesList } = s.liquidation;\n\n    React.useEffect(() => {\n        if (s.auth.isAuthenticated && s.user.oktaUserInfo && s.user.oktaUserInfo.sub) {\n            if (!s.liquidation.winesInLiquidationProcess.length) {\n                s.liquidation.fetchWinesInLiquidationProcess();\n            }\n\n            if (!s.liquidation.liquidateWinesList.length) {\n                s.liquidation.fetchLiquidateWinesList();\n            }\n        }\n\n        return () => {\n            s.liquidation.resetState();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [s.auth.isAuthenticated, s.user.oktaUserInfo.sub]);\n\n    const disableButton = winesInLiquidationProcess.length && liquidateWinesList.length;\n\n    const fullLiquidation = liquidateWinesList.length === winesInLiquidationProcess.length && disableButton;\n\n    const partialLiquidation = liquidateWinesList.length !== winesInLiquidationProcess.length && disableButton;\n\n    function handleSellYourWine() {\n        try {\n            posthog.capture(\"click_sell_your_wine_account_setting\", {});\n        } catch (err) {}\n        history.push(ROUTE_PATHS.beforeYouRequest);\n    }\n    return (\n        <>\n            {!winesInLiquidationProcessIsDone || !liquidateWinesListIsDone ? (\n                <Skeleton style={{ height: \"48px\", width: \"50%\", marginBottom: \"42px\" }} />\n            ) : (\n                <PageHeader>{t(\"account_settings.sell_wine\")}</PageHeader>\n            )}\n\n            <div>\n                <Container>\n                    {!winesInLiquidationProcessIsDone || !liquidateWinesListIsDone ? (\n                        <>\n                            <Skeleton count={1} height=\"50px\" style={{ marginBottom: \"1.5rem\" }} />\n                            <Skeleton count={1} style={{ height: \"50px\", width: \"300px\", marginBottom: \"1.5rem\" }} />\n                            <Skeleton count={1} height=\"28px\" />\n                        </>\n                    ) : (\n                        <>\n                            <Description>\n                                <p>\n                                    {!fullLiquidation && !partialLiquidation\n                                        ? t(\"sell_your_wine.description.description\")\n                                        : \"\"}\n                                    {fullLiquidation ? t(\"sell_your_wine.liquidation.full\") : \"\"}\n                                    {partialLiquidation ? t(\"sell_your_wine.liquidation.partial\") : \"\"}{\" \"}\n                                    {t(\"sell_your_wine.description.description\")}\n                                </p>\n                            </Description>\n                            <ButtonContainer>\n                                <MainSellButton\n                                    onClick={handleSellYourWine}\n                                    disabled={disableButton || !s.liquidation.liquidateWinesList.length}\n                                >\n                                    {disableButton\n                                        ? t(\"sell_your_wine.sell_button.enabled\")\n                                        : t(\"sell_your_wine.sell_button.disabled\")}\n                                </MainSellButton>\n                                <ContactSupport>\n                                    {disableButton ? (\n                                        <>\n                                            {t(\"sell_your_wine.support.sold\")}{\" \"}\n                                            <a href=\"mailto:support@vinovest.co\">\n                                                {t(\"sell_your_wine.support.sold_email_message\")}\n                                            </a>\n                                        </>\n                                    ) : (\n                                        <>\n                                            {t(\"sell_your_wine.support.notsold\")}{\" \"}\n                                            <a href=\"https://www.vinovest.co/help\">\n                                                {t(\"sell_your_wine.support.notsold_email_message\")}\n                                            </a>\n                                        </>\n                                    )}\n                                </ContactSupport>\n                            </ButtonContainer>\n                        </>\n                    )}\n                </Container>\n            </div>\n        </>\n    );\n});\n\nconst Container = styled.div`\n    width: 100%;\n`;\n\nconst Description = styled.div`\n    font-size: 16px;\n    line-height: 25px;\n    color: #242424;\n    padding: 5px;\n    margin-top: 24px;\n\n    @media screen and (max-width: 768px) {\n        font-size: 14px;\n        line-height: 21px;\n    }\n`;\n\nconst ButtonContainer = styled.div`\n    margin-top: 0.5rem;\n\n    button {\n        margin: 8px auto;\n    }\n`;\n\nconst MainSellButton = styled(MainButton)`\n    margin-left: 0 !important;\n`;\n\nconst ContactSupport = styled.div`\n    margin-top: 35px;\n    width: 100%;\n    text-align: left;\n    font-family: VinovestMedium;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 26px;\n    letter-spacing: 0.005em;\n    color: #242e35;\n\n    @media screen and (max-width: 768px) {\n        font-size: 14px;\n        line-height: 21px;\n    }\n\n    a {\n        color: #a86d37;\n        text-decoration: none;\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\n\ninterface AccountAutoInvestProps {\n    portalURIFetch: {\n        data: string;\n        status: {\n            isSuccess: () => Promise<void>;\n        };\n    };\n}\n\nexport const AccountAutoInvest = ({ portalURIFetch }: AccountAutoInvestProps) => {\n    const { t } = useTranslation([\"account\"]);\n\n    return (\n        <>\n            <PageHeader>{t(\"account_settings.auto_invest\")}</PageHeader>\n\n            <div>\n                <div>{t(\"account_auto_invest.subtitle\")}</div>\n\n                <ButtonPrimary\n                    className={!portalURIFetch.status.isSuccess() ? \"disabled\" : \"\"}\n                    href={portalURIFetch.data}\n                >\n                    {t(\"account_auto_invest.title\")}\n                </ButtonPrimary>\n            </div>\n        </>\n    );\n};\n\nAccountAutoInvest.propTypes = {\n    portalURIFetch: PropTypes.shape({\n        status: PropTypes.shape({\n            isSuccess: PropTypes.func.isRequired,\n        }),\n        data: PropTypes.string,\n    }).isRequired,\n};\n\nconst ButtonPrimary = styled.a`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    margin-top: 1.5rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-decoration: none;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        width: auto;\n    `};\n\n    &.disabled {\n        background: #e5e5e5;\n        border: 1px solid #e5e5e5;\n        cursor: not-allowed;\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport { IOktaContext } from \"@okta/okta-react/bundles/types/OktaContext\";\nimport { string } from \"prop-types\";\nimport { UserDisclaimer } from \"#shared/components/Account/UserDisclaimer\";\n\ninterface UserInvestmentPlanProps extends IOktaContext {\n    query: {\n        investmentStyle: string;\n    };\n}\n\nconst UserInvestmentPlan = ({ query }: UserInvestmentPlanProps) => {\n    const { t } = useTranslation(\"account\");\n    const noResults = t(\"not_provided\");\n    if (!query) {\n        return (\n            <>\n                <Skeleton count={1} height=\"51px\" style={{ marginBottom: \"1.5rem\" }} />\n                <Skeleton count={1} height=\"12px\" />\n            </>\n        );\n    }\n    return (\n        <div>\n            <Box>\n                <span>{t(\"account_investment_plan.title\")}</span>\n                {query.investmentStyle ? (\n                    <Populated>{query.investmentStyle}</Populated>\n                ) : (\n                    <Unpopulated>{noResults}</Unpopulated>\n                )}\n            </Box>\n            <UserDisclaimer />\n        </div>\n    );\n};\nexport default withOktaAuth<UserInvestmentPlanProps>(UserInvestmentPlan);\n\nconst Box = styled.div`\n    align-items: center;\n    border-bottom: 1px solid #eeeeee;\n    color: #766a7f;\n    display: flex;\n    font-size: 0.875rem;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    span {\n        padding-right: 2rem;\n        white-space: nowrap;\n    }\n\n    div {\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem 0;\n        text-align: right;\n        word-break: break-all;\n    }\n`;\n\nconst Populated = styled.div`\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n    text-transform: capitalize;\n`;\n\nconst Unpopulated = styled.div`\n    color: #a8abad;\n`;\n","import React from \"react\";\n\nexport default (props) => (\n    <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M1 7.5C2 11 4.5 14.5 5 14.5C5.5 14.5 10.5 4.5 15.5 1\"\n            stroke={props.stroke}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n    </svg>\n);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik } from \"formik\";\nimport AccountService from \"#services/UserService\";\nimport { useRootStore } from \"#shared/hooks\";\nimport ErrorIcon from \"#assets/shared/ErrorIcon\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport CheckIcon from \"#assets/shared/CheckIcon\";\nimport { planTypes as planGenerator } from \"#screens/risk-tolerance/YourPortfolio/plans\";\nimport { UserInformationProps } from \"./UserForm\";\n\ninterface UserInvestmentPlanFormProps extends UserInformationProps {\n    query: {\n        investmentStyle: string;\n    };\n}\n\ninterface FormValues {\n    investmentStyle: string;\n}\n\nconst UserInvestmentPlanForm = ({ query, fetchData, onClick, onSubmitComplete }: UserInvestmentPlanFormProps) => {\n    const { t } = useTranslation(\"risk-tolerance\");\n\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const store = useRootStore();\n    const planTypes = planGenerator(t);\n\n    const { values, handleSubmit, handleChange } = useFormik<FormValues>({\n        initialValues: {\n            investmentStyle: query.investmentStyle,\n        },\n        onSubmit: (_: any, event: any) => {\n            AccountService.useAccountPortfolioPut(store.user.oktaUserEntity.data.sub, store.auth.accessToken, values)\n                .then(() => {\n                    fetchData();\n                    onClick(event);\n                    onSubmitComplete(event);\n                })\n                .catch(() => {\n                    setErrorMessage(t(\"error_post\"));\n                });\n        },\n    });\n    const planOptions =\n        Array.isArray(planTypes) &&\n        planTypes.map((plan) => (\n            <RadioGroup key={plan.id}>\n                <label htmlFor={plan.id} className=\"container\">\n                    <input\n                        aria-label={plan.id}\n                        type=\"radio\"\n                        id={plan.id}\n                        value={plan.id}\n                        name=\"investmentStyle\"\n                        checked={values.investmentStyle === plan.id}\n                        onChange={handleChange}\n                    />\n                    {plan.planName}\n                    <span className=\"checkmark\" />\n                </label>\n\n                <ul>\n                    {plan[1].map((description: string, index: number) => (\n                        <li key={index}>\n                            <CheckIcon stroke=\"#82972D\" /> {description}\n                        </li>\n                    ))}\n                </ul>\n            </RadioGroup>\n        ));\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Notice>{t(\"form.notice\")}</Notice>\n            {planOptions}\n\n            {errorMessage && (\n                <AlertMessage type=\"error\">\n                    <ErrorIcon /> {errorMessage}\n                </AlertMessage>\n            )}\n            <ButtonGroup>\n                <ButtonSecondary type=\"button\" onClick={(event: React.MouseEvent<HTMLElement>) => onClick(event)}>\n                    {t(\"button_cancel\")}\n                </ButtonSecondary>\n                <ButtonPrimary type=\"submit\">{t(\"button_save\")}</ButtonPrimary>\n            </ButtonGroup>\n        </Form>\n    );\n};\nexport default withOktaAuth<UserInvestmentPlanFormProps>(UserInvestmentPlanForm);\nconst RadioGroup = styled.div`\n    display: block;\n    margin-bottom: 1.5rem;\n    width: 100%;\n\n    label {\n        font-size: 1.5rem;\n        font-family: RoslindaleDisplayCondensed;\n    }\n\n    ul {\n        color: #242e35;\n        font-size: 0.875rem;\n        list-style-type: none;\n        padding-left: 2rem;\n    }\n\n    li {\n        line-height: 22px;\n        margin-bottom: 1rem;\n        padding-left: 30px;\n        position: relative;\n\n        svg {\n            left: 0;\n            margin-right: 0.5rem;\n            position: absolute;\n            width: 30px;\n        }\n    }\n\n    .container {\n        display: block;\n        position: relative;\n        padding-left: 35px;\n        margin-bottom: 12px;\n        cursor: pointer;\n        user-select: none;\n\n        input {\n            position: absolute;\n            opacity: 0;\n            cursor: pointer;\n\n            &:checked {\n                ~ .checkmark {\n                    background-color: #fff;\n                    &:after {\n                        display: block;\n                    }\n                }\n            }\n        }\n\n        &:hover {\n            input {\n                ~ .checkmark:after {\n                    top: 3px;\n                    left: 3px;\n                    width: 12px;\n                    height: 12px;\n                    border-radius: 50%;\n                    background: #000;\n                    content: \"\";\n                    display: block;\n                }\n            }\n        }\n\n        .checkmark {\n            &:after {\n                top: 3px;\n                left: 3px;\n                width: 12px;\n                height: 12px;\n                border-radius: 50%;\n                background: #000;\n            }\n        }\n    }\n\n    .checkmark {\n        position: absolute;\n        top: 2px;\n        left: 0;\n        height: 20px;\n        width: 20px;\n        background-color: #fff;\n        border: 1px solid #000;\n        border-radius: 50%;\n\n        &:after {\n            content: \"\";\n            position: absolute;\n            display: none;\n        }\n    }\n`;\nconst Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .error {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst ButtonSecondary = styled.button`\n    background: #fff;\n    border: 1px solid #242e35;\n    color: #242e35;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    margin-right: 1.5rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        margin-bottom: 0;\n        margin-right: 1.5rem;\n        width: auto;\n    `};\n`;\n\nconst ButtonPrimary = styled.button`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p: { theme: { media: { greaterThan: (arg0: string) => any } } }) => p.theme.media.greaterThan(\"768px\")`\n        width: auto;\n    `};\n`;\n\nconst ButtonGroup = styled.div`\n    text-align: right;\n    width: 100%;\n`;\n\nconst Notice = styled.div`\n    color: ${(p: { theme: { colors: { mainAccentBlue: any } } }) => p.theme.colors.mainAccentBlue};\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 26px;\n    margin-bottom: 2rem;\n    width: 100%;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport { OktaAuth } from \"@okta/okta-auth-js\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport { CheckCircle2 } from \"#assets/home\";\nimport UserInvestmentPlan from \"../../shared/components/Account/UserInvestmentPlan\";\nimport UserInvestmentPlanForm from \"../../shared/components/Account/UserInvestmentPlanForm\";\nimport AccountService from \"#services/UserService\";\nimport { useRootStore } from \"#shared/hooks\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\n\ninterface AccountInvestmentPlanProps {\n    oktaAuth: OktaAuth;\n}\n\nconst AccountInvestmentPlan = ({ oktaAuth }: AccountInvestmentPlanProps) => {\n    const [editState, setEditState] = useState(false);\n    const [submitComplete, updateSubmitComplete] = useState(false);\n    const [query, setQuery] = useState(null);\n    const toggleEditor = () => setEditState(!editState);\n    const store = useRootStore();\n    const { t } = useTranslation(\"account\");\n\n    const fetchData = async () => {\n        await store.user.requestUserDetailsFromOkta(oktaAuth);\n        const response = await AccountService.useAccountPortfolioGet(\n            store.user.oktaUserEntity.data.sub,\n            store.auth.accessToken,\n        );\n        store.user.fetchProfile();\n        setQuery(response);\n    };\n\n    useEffect(() => {\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (\n        <>\n            {!query ? (\n                <Skeleton style={{ height: \"48px\", width: \"50%\", marginBottom: \"42px\" }} />\n            ) : (\n                <PageHeader>{t(\"account_investment_plan.title\")}</PageHeader>\n            )}\n            {editState ? (\n                <UserInvestmentPlanForm\n                    onSubmitComplete={() => updateSubmitComplete(true)}\n                    onClick={toggleEditor}\n                    query={query}\n                    fetchData={fetchData}\n                />\n            ) : (\n                <>\n                    {query && <EditLink onClick={toggleEditor}>{t(\"myaccount.edit\")}</EditLink>}\n                    <UserInvestmentPlan query={query} />\n                    {submitComplete && (\n                        <AlertMessage type=\"success\">\n                            <CheckCircle2 />\n                            {t(\"account_investment_plan.updated\")}\n                        </AlertMessage>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\nexport default withOktaAuth(AccountInvestmentPlan);\n\nconst EditLink = styled.span`\n    color: #a86d37;\n    cursor: pointer;\n    font-size: 0.875rem;\n    padding: 0.5rem 1rem;\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n    top: 2rem;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        right: 2rem;\n        top: 4.5rem;\n    `};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IOktaContext } from \"@okta/okta-react/bundles/types/OktaContext\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport AccountService from \"#services/UserService\";\nimport { useRootStore } from \"#shared/hooks\";\nimport ErrorIcon from \"#assets/shared/ErrorIcon\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\n\ninterface UserPasswordFormProps extends IOktaContext {\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    onSubmitComplete: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\ninterface FormValues {\n    newPassword: string;\n    oldPassword: string;\n    passwordConfirm: string;\n    length?: string;\n    digit?: string;\n    upperCase?: string;\n    specialCharacter?: string;\n}\n\nconst UserPasswordForm = ({ onClick, onSubmitComplete }: UserPasswordFormProps) => {\n    const { t } = useTranslation(\"account\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const store = useRootStore();\n    const PasswordSchema = Yup.object().shape({\n        newPassword: Yup.string().required(t(\"password.error_new_required\")),\n        oldPassword: Yup.string().required(t(\"password.error_old_password\")),\n        passwordConfirm: Yup.string()\n            .oneOf([Yup.ref(\"newPassword\"), null], t(\"password.match\"))\n            .required(t(\"password.error_confirm_password\")),\n    });\n\n    const { values, errors, touched, handleSubmit, handleChange, handleBlur } = useFormik<FormValues>({\n        initialValues: {\n            newPassword: \"\",\n            oldPassword: \"\",\n            passwordConfirm: \"\",\n        },\n        validationSchema: PasswordSchema,\n        onSubmit: (_, event) => {\n            AccountService.useAccountPasswordPut(store.user.oktaUserEntity.data.sub, store.auth.accessToken, values)\n                .then(() => {\n                    onClick(event);\n                    onSubmitComplete(event);\n                })\n                .catch((error: string) => {\n                    setErrorMessage(error);\n                });\n        },\n    });\n\n    return (\n        <>\n            <Form onSubmit={handleSubmit}>\n                <FormItem>\n                    <Notice>{t(\"password.notice\")}</Notice>\n                    <label htmlFor=\"oldPassword\">{t(\"password.label_current_password\")} </label>\n                    <input\n                        aria-label={t(\"password.label_current_password\")}\n                        type=\"password\"\n                        name=\"oldPassword\"\n                        value={values.oldPassword}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        id=\"oldPassword\"\n                    />\n                </FormItem>\n                <FormItem>\n                    <label htmlFor=\"newPassowrd\">{t(\"password.label_new_password\")}</label>\n                    <input\n                        aria-label={t(\"password.label_new_password\")}\n                        type=\"password\"\n                        name=\"newPassword\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        id=\"newPassword\"\n                    />\n                    <FormItemDescription>{t(\"password.password_requirements\")}</FormItemDescription>\n                </FormItem>\n                <FormItem>\n                    <label htmlFor=\"passwordConfirm\">{t(\"password.label_confirm_password\")}</label>\n                    <input\n                        aria-label={t(\"password.label_confirm_password\")}\n                        type=\"password\"\n                        name=\"passwordConfirm\"\n                        onChange={handleChange}\n                        id=\"passwordConfirm\"\n                        onBlur={handleBlur}\n                    />\n                    <FormItemDescription>{t(\"password.retype_password\")}</FormItemDescription>\n                    {touched.oldPassword && errors.oldPassword && (\n                        <AlertMessage type=\"error\">\n                            <ErrorIcon /> {errors.oldPassword}\n                        </AlertMessage>\n                    )}\n                    {touched.newPassword && errors.newPassword && (\n                        <AlertMessage type=\"error\">\n                            <ErrorIcon /> {errors.newPassword}\n                        </AlertMessage>\n                    )}\n                    {touched.passwordConfirm && errors.passwordConfirm && (\n                        <AlertMessage type=\"error\">\n                            <ErrorIcon /> {errors.passwordConfirm}\n                        </AlertMessage>\n                    )}\n                    {errorMessage && (\n                        <AlertMessage type=\"error\">\n                            <ErrorIcon /> {errorMessage}\n                        </AlertMessage>\n                    )}\n                </FormItem>\n                <ButtonGroup>\n                    <ButtonSecondary type=\"button\" onClick={(event: React.MouseEvent<HTMLElement>) => onClick(event)}>\n                        {t(\"password.button_cancel\")}\n                    </ButtonSecondary>\n                    <ButtonPrimary type=\"submit\">{t(\"password.button_change\")}</ButtonPrimary>\n                </ButtonGroup>\n            </Form>\n        </>\n    );\n};\nexport default withOktaAuth(UserPasswordForm);\nconst FormItemDescription = styled.div`\n    color: ${(p) => p.theme.colors.disclaimerGray};\n    font-size: 0.688rem;\n    margin-top: 0.5rem;\n`;\nconst Form = styled.form`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .error {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nconst FormItem = styled.div`\n    color: #766a7f;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    position: relative;\n    width: 100%;\n\n    label {\n        display: block;\n        font-size: 0.688rem;\n        margin-bottom: 0.5rem;\n        text-transform: uppercase;\n    }\n\n    input,\n    select {\n        border: 1px solid #caccce;\n        color: #242e35;\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem;\n        width: 100%;\n\n        &::placeholder {\n            color: #a8abad;\n        }\n    }\n\n    select {\n        background-color: transparent;\n        appearance: none;\n    }\n\n    img {\n        position: absolute;\n        right: 1rem;\n        top: 2.5rem;\n        width: 20px;\n    }\n\n    .password-validation {\n        label {\n            display: inline;\n            font-family: \"VinovestMedium\";\n            text-transform: none;\n        }\n    }\n`;\n\nconst ButtonSecondary = styled.button`\n    background: #fff;\n    border: 1px solid #242e35;\n    color: #242e35;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    margin-bottom: 1.5rem;\n    margin-right: 1.5rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        margin-bottom: 0;\n        margin-right: 1.5rem;\n        width: auto;\n    `};\n`;\n\nconst ButtonPrimary = styled.button`\n    background: #a86d37;\n    border: 1px solid #a86d37;\n    color: #fff;\n    cursor: pointer;\n    display: inline-block;\n    font-size: 0.875rem;\n    min-width: 150px;\n    padding: 1rem 2rem;\n    text-align: center;\n    text-transform: uppercase;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"768px\")`\n        width: auto;\n    `};\n`;\n\nconst ButtonGroup = styled.div`\n    text-align: right;\n    width: 100%;\n`;\n\nconst Notice = styled.div`\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 26px;\n    margin-bottom: 2rem;\n    width: 100%;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { useTranslation } from \"react-i18next\";\nimport AlertMessage from \"#shared/ui/Alert/AlertMessage\";\nimport { CheckCircle2 } from \"#assets/home\";\nimport { PageHeader } from \"#shared/components/PageHeader\";\nimport UserPasswordForm from \"../../shared/components/Account/UserPasswordForm\";\n\nexport const AccountPassword = () => {\n    const { t } = useTranslation(\"account\");\n    const [editState, setEditState] = useState(false);\n    const [submitComplete, updateSubmitComplete] = useState(false);\n    const toggleEditor = () => setEditState(!editState);\n\n    return (\n        <>\n            <PageHeader>{t(\"password.title\")}</PageHeader>\n\n            {editState ? (\n                <UserPasswordForm onSubmitComplete={() => updateSubmitComplete(true)} onClick={toggleEditor} />\n            ) : (\n                <>\n                    <EditLink onClick={toggleEditor}>{t(\"myaccount.edit\")}</EditLink>\n                    <Box>\n                        <span>{t(\"password.title\")}</span>\n                        <Populated type=\"password\" value=\"notarealpassword\" readOnly />\n                    </Box>\n                    {submitComplete && (\n                        <AlertMessage type=\"success\">\n                            <CheckCircle2 />\n                            {t(\"password.success_update\")}\n                        </AlertMessage>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nconst EditLink = styled.span`\n    color: #a86d37;\n    cursor: pointer;\n    font-size: 0.875rem;\n    padding: 0.5rem 1rem;\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n    top: 2rem;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        right: 2rem;\n        top: 4.5rem;\n    `};\n`;\nconst Box = styled.div`\n    align-items: center;\n    border-bottom: 1px solid #eeeeee;\n    color: #766a7f;\n    display: flex;\n    font-size: 0.875rem;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    span {\n        padding-right: 2rem;\n        white-space: nowrap;\n    }\n\n    div {\n        font-size: 1rem;\n        font-weight: 500;\n        padding: 1rem 0;\n        text-align: right;\n        word-break: break-all;\n    }\n`;\n\nconst Populated = styled.input`\n    border: 0;\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n    flex: 1;\n    padding: 1rem 0;\n    pointer-events: none;\n    text-align: right;\n`;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport styled from \"styled-components\";\nimport { withOktaAuth } from \"@okta/okta-react\";\nimport { Route } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { OktaAuth } from \"@okta/okta-auth-js\";\nimport { useLogoutCallback, useRootStore } from \"#shared/hooks\";\nimport { AccountPhone } from \"./AccountPhone\";\nimport { AccountAddress } from \"./AccountAddress\";\nimport { AccountEmail } from \"./AccountEmail\";\nimport { SellYourWine } from \"./SellYourWine\";\nimport { AccountAutoInvest } from \"./AccountAutoInvest\";\nimport AccountInvestmentPlan from \"./AccountInvestmentPlan\";\nimport { I18nSwitch, I18nNavLink } from \"#localization/localizedRouter\";\nimport { AccountPassword } from \"./AccountPassword\";\n\ninterface AccountPageProps {\n    oktaAuth: OktaAuth;\n}\n\nconst AccountPage = ({ oktaAuth }: AccountPageProps) => {\n    const { t } = useTranslation(\"account\");\n    const onLogout = useLogoutCallback();\n    const store = useRootStore();\n    const [userInformation, setUserInformation] = useState(null);\n    const { transfer: transferStore, auth: authStore } = useRootStore();\n\n    useEffect(() => {\n        if (authStore.isAuthenticated) {\n            transferStore.requestGetSelfServicePortalURI();\n        }\n    }, [authStore.isAuthenticated, transferStore]);\n\n    const fetchData = useCallback(async () => {\n        await store.user.requestUserDetailsFromOkta(oktaAuth);\n        await store.user.fetchUserInformation();\n        setUserInformation(store.user.userInformationEntity.data);\n    }, [oktaAuth, store.user]);\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData]);\n    return (\n        <AccountPageContainer>\n            <NavigationPanel>\n                <MenuTitle>{t(\"main.user_settings\")}</MenuTitle>\n                <I18nNavLink to=\"/account\" activeClassName=\"active\" exact>\n                    {t(\"user_settings.account\")}\n                </I18nNavLink>\n                <I18nNavLink to=\"/account/email\" activeClassName=\"active\">\n                    {t(\"account_email.email\")}\n                </I18nNavLink>\n                <I18nNavLink to=\"/account/password\" activeClassName=\"active\">\n                    {t(\"user_settings.password\")}\n                </I18nNavLink>\n                <I18nNavLink to=\"/account/phone\" activeClassName=\"active\">\n                    {t(\"user_settings.phone\")}\n                </I18nNavLink>\n                <MenuTitle>{t(\"main.account\")}</MenuTitle>\n                <I18nNavLink to=\"/account/investment-plan\" activeClassName=\"active\">\n                    {t(\"user_settings.investment_plan\")}\n                </I18nNavLink>\n                <I18nNavLink to=\"/account/auto-invest\" activeClassName=\"active\">\n                    {t(\"account_settings.auto_invest\")}\n                </I18nNavLink>\n                <I18nNavLink to=\"/account/sell\" activeClassName=\"active\">\n                    {t(\"account_settings.sell_wine\")}\n                </I18nNavLink>\n                <NavigationOption className=\"accent\" onClick={onLogout}>\n                    {t(\"user_settings.logout\")}\n                </NavigationOption>\n            </NavigationPanel>\n            <RightDetailPanel>\n                <AccountFormWrapper>\n                    <I18nSwitch>\n                        <Route\n                            exact\n                            path=\"/account\"\n                            render={(props) => (\n                                <AccountAddress {...props} query={userInformation} fetchData={fetchData} />\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/account/email\"\n                            render={(props) => (\n                                <AccountEmail {...props} query={userInformation} fetchData={fetchData} />\n                            )}\n                        />\n                        <Route exact path=\"/account/password\" render={(props) => <AccountPassword />} />\n                        <Route\n                            exact\n                            path=\"/account/phone\"\n                            render={(props) => (\n                                <AccountPhone {...props} query={userInformation} fetchData={fetchData} />\n                            )}\n                        />\n                        <Route exact path=\"/account/investment-plan\" component={AccountInvestmentPlan} />\n                        <Route\n                            exact\n                            path=\"/account/auto-invest\"\n                            render={(props) => (\n                                <AccountAutoInvest {...props} portalURIFetch={transferStore.portalURIFetch} />\n                            )}\n                        />\n                        <Route exact path=\"/account/sell\" component={SellYourWine} />\n                    </I18nSwitch>\n                </AccountFormWrapper>\n            </RightDetailPanel>\n        </AccountPageContainer>\n    );\n};\n\nexport default withOktaAuth(observer(AccountPage));\n\nconst AccountFormWrapper = styled.div`\n    border: 1px solid ${(p) => p.theme.colors.lighterGray}\n    border-radius: 10px;\n    box-shadow: 0px 4px 40px rgba(0, 0, 0, 0.1);\n    padding: 1.5rem 1rem;\n    position: relative;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        margin: auto;\n        max-width: 775px;\n        padding: 3rem;\n  `};\n`;\n\nconst AccountPageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        flex-direction: row;\n        margin: auto;\n        max-width: 1240px;\n        padding: 80px 12px;\n  `};\n    ${(p) => p.theme.media.greaterThan(\"1100px\")`\n        flex-direction: row;\n  `};\n`;\n\nconst NavigationPanel = styled.div`\n    display: none;\n    overflow: auto;\n    font-family: VinovestMono;\n    font-size: 14px;\n    justify-content: flex-start;\n    margin: 24px 0;\n    padding-bottom: 18px;\n    border-bottom: 1px solid ${(p) => p.theme.colors.lightGray};\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n    display: flex;\n        flex-direction: column;\n        justify-content: flex-start;\n        margin: initial;\n        border-bottom: none;\n        height: 100%;\n        width: 300px;\n        padding: 20px 0;\n    `};\n\n    a {\n        background: none;\n        border-left: 2px solid transparent;\n        color: ${(p) => p.theme.colors.mainAccentBlue};\n        white-space: nowrap;\n        outline: none;\n        border: none;\n        cursor: pointer;\n        text-decoration: none;\n        text-transform: uppercase;\n        margin-bottom: 1.5rem;\n        padding: 0.25rem 0.75rem;\n        text-align: left;\n\n        &:hover {\n            border-left: 2px solid ${(p) => p.theme.colors.burntOrange};\n        }\n\n        &.active {\n            border-left: 2px solid ${(p) => p.theme.colors.burntOrange};\n        }\n    }\n`;\n\nconst NavigationOption = styled.button`\n    background: none;\n    border-left: 2px solid ${(p) => (p.emphasis ? p.theme.colors.burntOrange : \"transparent\")}\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n    border: none;\n    cursor: pointer;\n    text-transform: uppercase;\n    outline: none;\n    margin-bottom: 1.5rem;\n    padding: .25rem .75rem;\n    text-align: left;\n    white-space: nowrap;\n\n    &:hover {\n        border-left: 2px solid ${(p) => p.theme.colors.burntOrange}\n    }\n\n    &.accent {\n        color: ${(p) => p.theme.colors.burntOrange};\n    }\n`;\n\nconst RightDetailPanel = styled.div`\n    padding: 20px 0;\n    width: 100%;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        padding: 20px 0 20px 40px;\n    `};\n`;\n\nconst MenuTitle = styled.span`\n    display: none;\n    font-size: 1.25rem;\n    font-family: RoslindaleDisplayCondensed;\n\n    ${(p) => p.theme.media.greaterThan(\"1024px\")`\n        display: block;\n        margin-bottom: 1.5rem;\n    `};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction AlertSuccess(props) {\n    return <CompleteMessage className={props.type}>{props.children}</CompleteMessage>;\n}\nexport default AlertSuccess;\n\nconst CompleteMessage = styled.div`\n    border-radius: 4px;\n    color: ${(p) => p.theme.colors.mainAccentBlue};\n    display: flex;\n    font-size: 1rem;\n    font-family: ${(p) => p.theme.fonts.body};\n    margin-top: 2rem;\n    padding: 1rem;\n    align-items: center;\n    width: 100%;\n\n    svg {\n        height: 22px;\n        margin-right: 1rem;\n        min-width: 22px;\n        vertical-align: middle;\n        width: 22px;\n    }\n\n    &.success {\n        background: ${(p) => p.theme.alerts.success};\n    }\n\n    &.error {\n        background: ${(p) => p.theme.alerts.error};\n    }\n`;\n","import React from \"react\";\n\nexport default () => (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M1 12C1 5.92487 5.92487 1 12 1V1C18.0751 1 23 5.92487 23 12V12C23 18.0751 18.0751 23 12 23V23C5.92487 23 1 18.0751 1 12V12Z\"\n            stroke=\"#FF4D00\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path d=\"M12 7V13\" stroke=\"#FF4D00\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n        <path d=\"M12 16V17\" stroke=\"#FF4D00\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n);\n","import balancedInvestingSvg from \"#assets/risk-tolerance/balancedInvesting.svg\";\nimport conservativeSvg from \"#assets/risk-tolerance/conservative.svg\";\nimport aggressiveSvg from \"#assets/risk-tolerance/aggressive.svg\";\n\nexport const planTypes = (t) => [\n    {\n        id: \"conservative\",\n        svg: conservativeSvg,\n        planName: t(\"plans.conservative_investing\"),\n        1: t(\"plans.conservative\"),\n    },\n    {\n        id: \"moderate\",\n        svg: balancedInvestingSvg,\n        planName: t(\"plans.balanced_investing\"),\n        1: t(\"plans.balanced\"),\n    },\n\n    {\n        id: \"aggressive\",\n        svg: aggressiveSvg,\n        planName: t(\"plans.aggressive_investing\"),\n        1: t(\"plans.aggressive\"),\n    },\n];\n","module.exports = __webpack_public_path__ + \"static/media/balancedInvesting.1a7d8018.svg\";","module.exports = __webpack_public_path__ + \"static/media/conservative.f6751e27.svg\";","module.exports = __webpack_public_path__ + \"static/media/aggressive.f8014f86.svg\";"],"sourceRoot":""}